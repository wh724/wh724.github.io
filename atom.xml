<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Space Port</title>
  
  <subtitle>welcome to my space station!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/wh724/"/>
  <updated>2019-08-23T01:20:26.271Z</updated>
  <id>https://github.com/wh724/</id>
  
  <author>
    <name>WH</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ajax两种封装</title>
    <link href="https://github.com/wh724/2019/08/22/ajax%E4%B8%A4%E7%A7%8D%E5%B0%81%E8%A3%85/"/>
    <id>https://github.com/wh724/2019/08/22/ajax两种封装/</id>
    <published>2019-08-22T13:51:43.000Z</published>
    <updated>2019-08-23T01:20:26.271Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --><center><i>ajax封装</i></center><image src="/2019/07/18/Hexo+NexT 打造自己的博客/hexo.jpg" alt style="width:100%"><a id="more"></a><h2 id="ajax-ES6"><a href="#ajax-ES6" class="headerlink" title="ajax+ES6"></a>ajax+ES6</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">function ajax(method,url,postStr,dataType=&quot;json&quot;)&#123;</span><br><span class="line">  return new Promise((resolve,reject)=&gt;&#123;</span><br><span class="line">    //1、获取 xhr</span><br><span class="line">    var xhr = (function()&#123;</span><br><span class="line">      if(window.XMLHttpRequest)&#123;</span><br><span class="line">        return new XMLHttpRequest();</span><br><span class="line">      &#125;else&#123;</span><br><span class="line">        return new ActiveXObject(&quot;Microsoft.XMLHttp&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">    //2、创建请求</span><br><span class="line">    xhr.open(method,url,true);</span><br><span class="line">    </span><br><span class="line">    //4、设置请求消息头</span><br><span class="line">    if(method==&quot;post&quot;)&#123;</span><br><span class="line">      xhr.setRequestHeader(</span><br><span class="line">        &quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    //3、设置回调</span><br><span class="line">    xhr.onreadystatechange=function()&#123;</span><br><span class="line">      if(xhr.readyState == 4)</span><br><span class="line">        if(xhr.status == 200)&#123;</span><br><span class="line">          if(url.indexOf(&quot;.php&quot;)!=-1</span><br><span class="line">            &amp;&amp;dataType.toLowerCase()==&quot;json&quot;)&#123;</span><br><span class="line">            resolve(JSON.parse(xhr.responseText));</span><br><span class="line">          &#125;else&#123;</span><br><span class="line">            resolve(xhr.responseText);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;else</span><br><span class="line">          reject(&quot;ajax出错啦！&quot;+xhr.status);</span><br><span class="line">    &#125;</span><br><span class="line">    //5、发送</span><br><span class="line">    xhr.send(postStr);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ajax-ES6-axios"><a href="#ajax-ES6-axios" class="headerlink" title="ajax+ES6+axios"></a>ajax+ES6+axios</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">* AJAX请求函数</span><br><span class="line">* */</span><br><span class="line">import axios from &apos;axios&apos;</span><br><span class="line"></span><br><span class="line">export default function ajax (url = &apos;&apos;,data = &#123;&#125;,type = &apos;GET&apos;)&#123;</span><br><span class="line">  return new Promise(function (resolve,reject)&#123;</span><br><span class="line">    let promise</span><br><span class="line"></span><br><span class="line">    if(type === &apos;GET&apos;) &#123;</span><br><span class="line">      let dataStar= &apos;&apos;</span><br><span class="line">      Object.keys(data).forEach(key =&gt; &#123;</span><br><span class="line">        dataStar += key + &apos;=&apos; + data[key] +&apos;&amp;&apos;</span><br><span class="line">      &#125;)</span><br><span class="line">      if (dataStar !== &apos;&apos;) &#123;</span><br><span class="line">        dataStar = dataStar.substring(0,dataStar.lastIndexOf(&apos;&amp;&apos;))</span><br><span class="line">        url = url + &apos;?&apos; +dataStar</span><br><span class="line">      &#125;</span><br><span class="line">    promise = axios.get(url)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      promise = axios.post(url,data)</span><br><span class="line">    &#125;</span><br><span class="line">    promise.then(response =&gt; &#123;</span><br><span class="line">      resolve(response.data)</span><br><span class="line">    &#125;) .catch (error =&gt; &#123;</span><br><span class="line">      reject(error)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></image><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --&gt;&lt;center&gt;&lt;i&gt;ajax封装&lt;/i&gt;&lt;/center&gt;&lt;image src=&quot;/2019/07/18/Hexo+NexT 打造自己的博客/hexo.jpg&quot; alt style=&quot;width:100%&quot;&gt;&lt;/image&gt;
    
    </summary>
    
      <category term="Web" scheme="https://github.com/wh724/categories/Web/"/>
    
    
      <category term="ajax" scheme="https://github.com/wh724/tags/ajax/"/>
    
      <category term="axios" scheme="https://github.com/wh724/tags/axios/"/>
    
  </entry>
  
  <entry>
    <title>外卖项目开发流程</title>
    <link href="https://github.com/wh724/2019/08/22/%E5%A4%96%E5%8D%96%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/"/>
    <id>https://github.com/wh724/2019/08/22/外卖项目开发流程/</id>
    <published>2019-08-22T07:37:40.000Z</published>
    <updated>2019-08-22T07:54:13.285Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --><center><i>外卖Web APP（spa）</i></center><image src="/2019/07/18/Hexo+NexT 打造自己的博客/hexo.jpg" alt style="width:100%"><a id="more"></a><p>项目开发流程</p><h2 id="1-创建客户端项目"><a href="#1-创建客户端项目" class="headerlink" title="1. 创建客户端项目"></a>1. 创建客户端项目</h2><h3 id="1-1-使用-vue-cli-脚手架-搭建项目"><a href="#1-1-使用-vue-cli-脚手架-搭建项目" class="headerlink" title="1.1 使用 vue-cli(脚手架)搭建项目"></a>1.1 使用 vue-cli(脚手架)搭建项目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在Github新建Vue-MintShop项目,然后clone到本地</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:W-Qing/Vue-MintShop.git</span><br><span class="line"><span class="built_in">cd</span> Vue-MintShop</span><br><span class="line"><span class="comment">#创建客户端项目</span></span><br><span class="line">vue init webpack mintshop-client</span><br><span class="line"><span class="built_in">cd</span> mintshop-client</span><br><span class="line">npm install</span><br><span class="line">npm run dev 访问: localhost:8080</span><br></pre></td></tr></table></figure><h3 id="1-2-项目结构分析"><a href="#1-2-项目结构分析" class="headerlink" title="1.2 项目结构分析"></a>1.2 项目结构分析</h3><blockquote><p>*<em>MintShop-client *</em></p><ul><li>|– build : webpack 相关的配置文件夹(基本不需要修改)</li><li>|– build : webpack 相关的配置文件夹(基本不需要修改)</li><li>|– config: webpack 相关的配置文件夹(基本不需要修改)</li><li>|– index.js: 指定的后台服务的端口号和静态资源文件夹</li><li>|– node_modules</li><li>|– src : 源码文件夹</li><li>|– main.js: 应用入口 js （初始化vue实例并使用需要的插件 ）</li><li>|– static: 静态资源文件夹</li><li>|– .babelrc: babel 的配置文件</li><li>|– .editorconfig: 通过编辑器的编码/格式进行一定的配置</li><li>|– .eslintignore: eslint 检查忽略的配置</li><li>|– .eslintrc.js: eslint 检查的配置</li><li>|– .gitignore: git 版本管理忽略的配置</li><li>|– index.html: 默认的主渲染页面文件</li><li>|– package.json: 应用包配置文件</li><li>|– README.md: 应用描述说明的 readme 文件</li></ul></blockquote><h3 id="1-3-编码测试与打包发布项目"><a href="#1-3-编码测试与打包发布项目" class="headerlink" title="1.3 编码测试与打包发布项目"></a>1.3 编码测试与打包发布项目</h3><ul><li><p>编码测试</p><p>npm run dev</p><p>访问: <a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a></p><p>编码, 自动编译打包(HMR), 查看效果</p></li><li><p>打包发布</p><p>npm run build</p><p>npm install -g serve</p><p>serve dist</p><p>访问: <a href="http://localhost:5000" target="_blank" rel="noopener">http://localhost:5000</a></p></li></ul><h2 id="2-功能需求分析"><a href="#2-功能需求分析" class="headerlink" title="2. 功能需求分析"></a>2. 功能需求分析</h2><ul><li>开发前应该首先完成功能模块的分析设计，这里我们可以直接运行项目查看功能演示 自己总结项目功能需求</li></ul><h2 id="3-开发资源准备"><a href="#3-开发资源准备" class="headerlink" title="3. 开发资源准备"></a>3. 开发资源准备</h2><ul><li>使用<a href="http://www.iconfont.cn/" target="_blank" rel="noopener">阿里巴巴矢量库</a></li><li>将想要的图标添加入库（购物车）</li><li>将购物车中的图标添加到项目中</li><li>生成项目图标的<a href="//at.alicdn.com/t/font_726904_68moeoeirj3.css">Font Class地址</a></li></ul><h2 id="4-Css-Reset、Fastclick与Stylus"><a href="#4-Css-Reset、Fastclick与Stylus" class="headerlink" title="4. Css Reset、Fastclick与Stylus"></a>4. Css Reset、Fastclick与Stylus</h2><h3 id="4-1-Css-Reset"><a href="#4-1-Css-Reset" class="headerlink" title="4.1 Css Reset"></a>4.1 Css Reset</h3><ul><li><p>在项目主目录下的static文件夹内新建css文件夹</p></li><li><p>在css文件夹内新建重置样式文件reset.css</p></li><li><p>在index.html 中引入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/static/css/reset.css"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-2-Fastclick"><a href="#4-2-Fastclick" class="headerlink" title="4.2 Fastclick"></a>4.2 Fastclick</h3><blockquote><p>当用户一次点击屏幕之后，浏览器并不能立刻判断用户是要进行双击缩放，还是想要进行单击操作。因此，iOS Safari 就等待 300 毫秒，以判断用户是否再次点击了屏幕。 于是，300 毫秒延迟就这么诞生了。</p></blockquote><ul><li><p>安装fastclick库 解决点击响应延时 0.3s 问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm Install fastclick --save</span><br></pre></td></tr></table></figure></li><li><p>在main.js中引入，并绑定到body</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> FastClick <span class="keyword">from</span> <span class="string">'fastclick'</span></span><br><span class="line">FastClick.attach(<span class="built_in">document</span>.body);</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-3-Stylus"><a href="#4-3-Stylus" class="headerlink" title="4.3 Stylus"></a>4.3 Stylus</h3><ul><li><p>安装stylus依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install stylus stylus-loader --save-dev</span><br></pre></td></tr></table></figure></li><li><p>在common文件夹下新建stylus文件夹</p></li><li><p>在stylus文件加下面新建mixins.styl文件</p></li><li><p>注意在组件内编写样式时要声明lang和rel</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"stylus"</span> <span class="attr">rel</span>=<span class="string">"stylesheet/stylus"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="5-源码目录设计"><a href="#5-源码目录设计" class="headerlink" title="5. 源码目录设计"></a>5. 源码目录设计</h2><p><img src="http://owoccema2.bkt.clouddn.com/Readme/vue/mintshop.png" alt="src目录结构"></p><h2 id="6-Vue组件化"><a href="#6-Vue组件化" class="headerlink" title="6. Vue组件化"></a>6. Vue组件化</h2><h3 id="6-1-分析整个项目的-vue-组件结构"><a href="#6-1-分析整个项目的-vue-组件结构" class="headerlink" title="6.1 分析整个项目的 vue 组件结构"></a>6.1 分析整个项目的 vue 组件结构</h3><blockquote><p><strong>src</strong></p><ul><li>|– components————非路由组件文件夹</li><li>|– FooterGuide—————底部组件文件夹<ul><li>|– FooterGuide.vue——–底部组件 vue</li></ul></li><li>|– pages—————–路由组件文件夹<ul><li>|– Msite—————首页组件文件夹<ul><li>|– Msite.vue——–首页组件 vue</li></ul></li><li>|– Search—————-搜索组件文件夹<ul><li>|– Search.vue———搜索组件 vue</li></ul></li><li>|– Order————–订单组件文件夹<ul><li>|– Order.vue——-订单组件 vue</li></ul></li><li>|– Profile————–个人组件文件夹<ul><li>|– Profile.vue——-个人组件 vue</li></ul></li></ul></li><li>|– App.vue—————应用根组件 vue</li><li>|– main.js—————应用入口 js</li></ul></blockquote><ol><li>页面底部的FooterGuide组件只是用来放pages里的组件的容器，所以它不是路由组件</li><li>页面最上面的标题栏在我们的项目中属于路由组件的组成部分（与中间内容部分在一起）</li><li>但每个路由组件中都有最顶部的组件且相似度很高，所以可以将其抽取成为一个单独的组件</li></ol><h3 id="6-2-编写vue组件模板文件"><a href="#6-2-编写vue组件模板文件" class="headerlink" title="6.2 编写vue组件模板文件"></a>6.2 编写vue组件模板文件</h3><ul><li>pages文件夹下的各个vue组件文件及App.vue和FooterGuide.vue都是这个初始空白模板</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;App vue template&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;stylus&quot; rel=&quot;stylesheet/stylus&quot;&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="7-引入Vue-router"><a href="#7-引入Vue-router" class="headerlink" title="7. 引入Vue-router"></a>7. 引入Vue-router</h2><p>###7.1 下载vue-router</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建项目时已下载</span></span><br><span class="line">npm install vue-router --save</span><br></pre></td></tr></table></figure><h3 id="7-2-编写router文件夹下的index-js"><a href="#7-2-编写router文件夹下的index-js" class="headerlink" title="7.2 编写router文件夹下的index.js"></a>7.2 编写router文件夹下的index.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  路由模块 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="comment">// 引入路由组件文件夹下的组件</span></span><br><span class="line"><span class="keyword">import</span> Msite <span class="keyword">from</span> <span class="string">'../pages/Msite/Msite.vue'</span></span><br><span class="line"><span class="keyword">import</span> Search <span class="keyword">from</span> <span class="string">'../pages/Search/Search.vue'</span></span><br><span class="line"><span class="keyword">import</span> Order <span class="keyword">from</span> <span class="string">'../pages/Order/Order.vue'</span></span><br><span class="line"><span class="keyword">import</span> Profile <span class="keyword">from</span> <span class="string">'../pages/Profile/Profile.vue'</span></span><br><span class="line"><span class="comment">// 全局注册Vue-router组件</span></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置路由表并导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  <span class="comment">//去掉地址中的哈希#</span></span><br><span class="line">  mode: <span class="string">'history'</span>,</span><br><span class="line">  routes: [&#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      redirect: <span class="string">'/msite'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/msite'</span>,</span><br><span class="line">      component: Msite,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/search'</span>,</span><br><span class="line">      component: Search,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/order'</span>,</span><br><span class="line">      component: Order,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/profile'</span>,</span><br><span class="line">      component: Profile,</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="7-3-编写应用的入口文件main-js"><a href="#7-3-编写应用的入口文件main-js" class="headerlink" title="7.3 编写应用的入口文件main.js"></a>7.3 编写应用的入口文件main.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入路由 其实就是引入上一步配置好的路由表</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(app),</span><br><span class="line">  <span class="comment">// 为根组件加入路由</span></span><br><span class="line">  router</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="7-4-在App-vue里使用router-view"><a href="#7-4-在App-vue里使用router-view" class="headerlink" title="7.4 在App.vue里使用router-view"></a>7.4 在App.vue里使用router-view</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- 修改应用组件的模板 --&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;!-- 设置路由组件的视图位置 --&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;!-- 并放置非路由组件 --&gt;</span><br><span class="line">    &lt;FooterGuide&gt;&lt;/FooterGuide&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import FooterGuide from &apos;./components/FooterGuide/FooterGuide.vue&apos;</span><br><span class="line">// 引入底部组件并注册</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    FooterGuide</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;stylus&quot; rel=&quot;stylesheet/stylus&quot;&gt;</span><br><span class="line">// 整个应用组件的样式</span><br><span class="line">  #app</span><br><span class="line">    width 100%</span><br><span class="line">    height 100%</span><br><span class="line">    background #f5f5f5</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li>App.vue里的根元素<code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>与外层被注入框架index.html中的<code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>是一致的</li><li>index.html中的<code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>是指定绑定目标为元素的根路径，而App.vue文件里的<code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>则是提供注入绑定元素的内容，两者在运行时指的是同一个DOM元素</li></ul><h3 id="7-5-运行并请求不同路由路径查看效果"><a href="#7-5-运行并请求不同路由路径查看效果" class="headerlink" title="7.5 运行并请求不同路由路径查看效果"></a>7.5 运行并请求不同路由路径查看效果</h3><p>通过切换url地址里的hash值（miste/order/search/profile），页面会显示不同的路由模板内容。</p><h2 id="8-编写组件代码"><a href="#8-编写组件代码" class="headerlink" title="8. 编写组件代码"></a>8. 编写组件代码</h2><h3 id="8-1-FooterGuide组件"><a href="#8-1-FooterGuide组件" class="headerlink" title="8.1 FooterGuide组件"></a>8.1 FooterGuide组件</h3><p><strong>功能及实现</strong></p><ol><li>通过编程式导航实现路由的切换显示($router)</li><li>通过动态 class 和$route.path 来实现 tab 样式切换</li><li>通过阿里图标库, 显示导航图标</li></ol><p><strong>代码</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"footer_guide border-1px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"guide_item on"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"item_icon"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-food"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>外卖<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--其他三部分类似--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang="stylus" rel="stylesheet/stylus"&gt;</span><br><span class="line"><span class="comment">/*引入公共样式*/</span></span><br><span class="line">@<span class="keyword">import</span> <span class="string">"../../common/stylus/mixins.styl"</span></span><br><span class="line">.footer_guide</span><br><span class="line">  /*顶部有白色的边框*/</span><br><span class="line">  top-border-<span class="number">1px</span>(#e4e4e4)</span><br><span class="line">  position fixed</span><br><span class="line">  z-index <span class="number">100</span></span><br><span class="line">  left <span class="number">0</span></span><br><span class="line">  right <span class="number">0</span></span><br><span class="line">  bottom <span class="number">0</span></span><br><span class="line">  background-color #fff</span><br><span class="line">  width <span class="number">100%</span></span><br><span class="line">  height <span class="number">50px</span></span><br><span class="line">  display flex</span><br><span class="line">  .guide_item</span><br><span class="line">    display flex</span><br><span class="line">    flex <span class="number">1</span></span><br><span class="line">    text-align center</span><br><span class="line">    flex-direction column</span><br><span class="line">    align-items center</span><br><span class="line">    margin <span class="number">5px</span></span><br><span class="line">    color #<span class="number">999999</span></span><br><span class="line">    &amp;.on</span><br><span class="line">      color #<span class="number">02</span>a774</span><br><span class="line">    span</span><br><span class="line">      font-size <span class="number">12px</span></span><br><span class="line">      margin-top <span class="number">2px</span></span><br><span class="line">      margin-bottom <span class="number">2px</span></span><br><span class="line">      .iconfont</span><br><span class="line">        font-size <span class="number">22px</span></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>此时，页面已达到理想效果。接着修改template模板，为其加入路由与样式的切换控制。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"guide_item"</span> @<span class="attr">click</span>=<span class="string">"goto('/msite')"</span> <span class="attr">:class</span>=<span class="string">"&#123;on: isCurrent('/msite')&#125;"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"item_icon"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-food"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--其他三个部分类似，只是路由不同--&gt;</span></span><br></pre></td></tr></table></figure><p>再补充相应的函数方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    goto (path) &#123;</span><br><span class="line">      <span class="keyword">this</span>.$router.replace(path)</span><br><span class="line">    &#125;,</span><br><span class="line">    isCurrent (path) &#123;</span><br><span class="line">      <span class="comment">// console.log(this.$route.path)</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.$route.path === path</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，底部组件完成，可实现点击不同的选项切换不同的路由组件。</p><h3 id="8-2-各导航路由组件"><a href="#8-2-各导航路由组件" class="headerlink" title="8.2 各导航路由组件"></a>8.2 各导航路由组件</h3><h4 id="8-2-1-Msite组件"><a href="#8-2-1-Msite组件" class="headerlink" title="8.2.1 Msite组件"></a>8.2.1 Msite组件</h4><p><strong>功能区域划分</strong></p><ol><li>最顶部的title标题栏部分</li><li>上方的nav轮播区域</li><li>商家列表展示区域</li></ol><p><strong>图片资源</strong></p><p>Msite组件页面的轮播图及商家列表都需要用到一些图片资源文件，所以在msite.vue同级目录下新建images文件夹，以便放置各种不同类型的图片资源。</p><p><strong>代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;section class=&quot;msite&quot;&gt;</span><br><span class="line">    &lt;!--首页头部title--&gt;</span><br><span class="line">    &lt;!--由msite_header改成header--&gt;</span><br><span class="line">    &lt;header class=&quot;header&quot;&gt;</span><br><span class="line">      &lt;span class=&quot;header_search&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;iconfont icon-sousuo&quot;&gt;&lt;/i&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">      &lt;span class=&quot;header_title&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;header_title_text ellipsis&quot;&gt;芝罘区鲁东大学北区(青年南路)&lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">      &lt;span class=&quot;header_login&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;header_login_text&quot;&gt;登录|注册&lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line">    &lt;!--首页导航轮播--&gt;</span><br><span class="line">    &lt;nav class=&quot;msite_nav&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;swiper-container&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;swiper-wrapper&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;swiper-slide&quot;&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:&quot; class=&quot;link_to_food&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;food_container&quot;&gt;</span><br><span class="line">                &lt;img src=&quot;./images/nav/1.jpg&quot;&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;span&gt;甜品饮品&lt;/span&gt;</span><br><span class="line">            &lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:&quot; class=&quot;link_to_food&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;food_container&quot;&gt;</span><br><span class="line">                &lt;img src=&quot;./images/nav/2.jpg&quot;&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;span&gt;商超便利&lt;/span&gt;</span><br><span class="line">            &lt;/a&gt;</span><br><span class="line">           &lt;!--下面的图片省略--&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;swiper-slide&quot;&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:&quot; class=&quot;link_to_food&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;food_container&quot;&gt;</span><br><span class="line">                &lt;img src=&quot;./images/nav/9.jpg&quot;&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;span&gt;甜品饮品&lt;/span&gt;</span><br><span class="line">            &lt;/a&gt;</span><br><span class="line">            &lt;!--同样省略--&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 轮播图页码 --&gt;</span><br><span class="line">        &lt;div class=&quot;swiper-pagination&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">    &lt;!--首页附近商家列表--&gt;</span><br><span class="line">    &lt;div class=&quot;msite_shop_list&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;shop_header&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;iconfont icon-xuanxiang&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;span class=&quot;shop_header_title&quot;&gt;附近商家&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;shop_container&quot;&gt;</span><br><span class="line">        &lt;ul class=&quot;shop_list&quot;&gt;</span><br><span class="line">          &lt;li class=&quot;shop_li border-1px&quot;&gt;</span><br><span class="line">            &lt;a&gt;</span><br><span class="line">              &lt;div class=&quot;shop_left&quot;&gt;</span><br><span class="line">                &lt;img class=&quot;shop_img&quot; src=&quot;./images/shop/1.jpg&quot;&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;shop_right&quot;&gt;</span><br><span class="line">                &lt;section class=&quot;shop_detail_header&quot;&gt;</span><br><span class="line">                  &lt;h4 class=&quot;shop_title ellipsis&quot;&gt;锄禾日当午，汗滴禾下土&lt;/h4&gt;</span><br><span class="line">                  &lt;ul class=&quot;shop_detail_ul&quot;&gt;</span><br><span class="line">                    &lt;li class=&quot;supports&quot;&gt;保&lt;/li&gt;</span><br><span class="line">                    &lt;li class=&quot;supports&quot;&gt;准&lt;/li&gt;</span><br><span class="line">                    &lt;li class=&quot;supports&quot;&gt;票&lt;/li&gt;</span><br><span class="line">                  &lt;/ul&gt;</span><br><span class="line">                &lt;/section&gt;</span><br><span class="line">                &lt;section class=&quot;shop_rating_order&quot;&gt;</span><br><span class="line">                  &lt;section class=&quot;shop_rating_order_left&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;star star-24&quot;&gt;</span><br><span class="line">                      &lt;span class=&quot;star-item on&quot;&gt;&lt;/span&gt;</span><br><span class="line">                      &lt;span class=&quot;star-item on&quot;&gt;&lt;/span&gt;</span><br><span class="line">                      &lt;span class=&quot;star-item on&quot;&gt;&lt;/span&gt;</span><br><span class="line">                      &lt;span class=&quot;star-item half&quot;&gt;&lt;/span&gt;</span><br><span class="line">                      &lt;span class=&quot;star-item off&quot;&gt;&lt;/span&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;rating_section&quot;&gt;</span><br><span class="line">                      3.6</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;order_section&quot;&gt;</span><br><span class="line">                      月售106单</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                  &lt;/section&gt;</span><br><span class="line">                  &lt;section class=&quot;shop_rating_order_right&quot;&gt;</span><br><span class="line">                    &lt;span class=&quot;delivery_style delivery_right&quot;&gt;硅谷专送&lt;/span&gt;</span><br><span class="line">                  &lt;/section&gt;</span><br><span class="line">                &lt;/section&gt;</span><br><span class="line">                &lt;section class=&quot;shop_distance&quot;&gt;</span><br><span class="line">                  &lt;p class=&quot;shop_delivery_msg&quot;&gt;</span><br><span class="line">                    &lt;span&gt;¥20起送&lt;/span&gt;</span><br><span class="line">                    &lt;span class=&quot;segmentation&quot;&gt;/&lt;/span&gt;</span><br><span class="line">                    &lt;span&gt;配送费约¥5&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/section&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/a&gt;</span><br><span class="line">          &lt;/li&gt;</span><br><span class="line">          &lt;!--省略其他店铺展示--&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/section&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;!--省略js--&gt;</span><br></pre></td></tr></table></figure><p><strong>要注意首页的头部标题部分的样式，在其他的组件中都可以进行重用。</strong>所以将header标签的类名由msite_header改成header。接下来在其他组件中可以直接使用（当然header里的部分样式其他组件用不到，到时再进一步抽取公共的css样式。）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang="stylus" rel="stylesheet/stylus"&gt;</span><br><span class="line">  @<span class="keyword">import</span> <span class="string">"../../common/stylus/mixins.styl"</span></span><br><span class="line">  .msite  //首页</span><br><span class="line">    width <span class="number">100%</span></span><br><span class="line">    .header</span><br><span class="line">      background-color #<span class="number">02</span>a774</span><br><span class="line">      position fixed</span><br><span class="line">      z-index <span class="number">100</span></span><br><span class="line">      left <span class="number">0</span></span><br><span class="line">      top <span class="number">0</span></span><br><span class="line">      width <span class="number">100%</span></span><br><span class="line">      height <span class="number">45px</span></span><br><span class="line">      .header_search</span><br><span class="line">        position absolute</span><br><span class="line">        left <span class="number">15px</span></span><br><span class="line">        top <span class="number">50%</span></span><br><span class="line">        transform translateY(-<span class="number">50%</span>)</span><br><span class="line">        width <span class="number">10%</span></span><br><span class="line">        height <span class="number">50%</span></span><br><span class="line">        .icon-sousuo</span><br><span class="line">          font-size <span class="number">25px</span></span><br><span class="line">          color #fff</span><br><span class="line">      .header_title</span><br><span class="line">        position absolute</span><br><span class="line">        top <span class="number">50%</span></span><br><span class="line">        left <span class="number">50%</span></span><br><span class="line">        transform translate(-<span class="number">50%</span>, -<span class="number">50%</span>)</span><br><span class="line">        width <span class="number">50%</span></span><br><span class="line">        color #fff</span><br><span class="line">        text-align center</span><br><span class="line">        .header_title_text</span><br><span class="line">          font-size <span class="number">20px</span></span><br><span class="line">          color #fff</span><br><span class="line">          display block</span><br><span class="line">      .header_login</span><br><span class="line">        font-size <span class="number">14px</span></span><br><span class="line">        color #fff</span><br><span class="line">        position absolute</span><br><span class="line">        right <span class="number">15px</span></span><br><span class="line">        top <span class="number">50%</span></span><br><span class="line">        transform translateY(-<span class="number">50%</span>)</span><br><span class="line">        .header_login_text</span><br><span class="line">          color #fff</span><br><span class="line">      /*下面的样式省略*/</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>接下来的几个路由组件都类似，都是先修改template模版，然后引入mixins.styl 样式文件和上面提到的公共的header部分的样式。</p><h4 id="8-2-2-Search组件"><a href="#8-2-2-Search组件" class="headerlink" title="8.2.2 Search组件"></a>8.2.2 Search组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;section class=&quot;search&quot;&gt;</span><br><span class="line">    &lt;header class=&quot;header&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;header_title&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;header_title_text&quot;&gt;搜索&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line">    &lt;form class=&quot;search_form&quot; action=&quot;#&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;search&quot; name=&quot;search&quot; placeholder=&quot;请输入商家或美食名称&quot;</span><br><span class="line">    class=&quot;search_input&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;submit&quot; class=&quot;search_submit&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/section&gt;</span><br><span class="line">&lt;!--省略js与style--&gt;</span><br></pre></td></tr></table></figure><h4 id="8-2-3-Order组件"><a href="#8-2-3-Order组件" class="headerlink" title="8.2.3 Order组件"></a>8.2.3 Order组件</h4><p>在order.vue同级目录下新建images文件夹，再新建order文件夹，存放订单组件用到的图片资源。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;section class=&quot;order&quot;&gt;</span><br><span class="line">    &lt;header class=&quot;header&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;header_title&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;header_title_text&quot;&gt;订单列表&lt;/span&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line">    &lt;section class=&quot;order_no_login&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;./images/order/person.png&quot;&gt;</span><br><span class="line">        &lt;h3&gt;登录后查看外卖订单&lt;/h3&gt;</span><br><span class="line">      &lt;button&gt;立即登陆&lt;/button&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line">  &lt;/section&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!--省略js与style--&gt;</span><br></pre></td></tr></table></figure><h4 id="8-2-4-Profile组件"><a href="#8-2-4-Profile组件" class="headerlink" title="8.2.4 Profile组件"></a>8.2.4 Profile组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;section class=&quot;profile&quot;&gt;</span><br><span class="line">      &lt;header class=&quot;header&quot;&gt;</span><br><span class="line">        &lt;a class=&quot;header_title&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;header_title_text&quot;&gt;我的&lt;/span&gt;</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">      &lt;/header&gt;</span><br><span class="line">      &lt;section class=&quot;profile-number&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;javascript:&quot; class=&quot;profile-link&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;profile_image&quot;&gt;</span><br><span class="line">            &lt;i class=&quot;iconfont icon-yonghuming&quot;&gt;&lt;/i&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;user-info&quot;&gt;</span><br><span class="line">            &lt;p class=&quot;user-info-top&quot;&gt;登录/注册&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">              &lt;span class=&quot;user-icon&quot;&gt;</span><br><span class="line">                &lt;i class=&quot;iconfont icon-msnui-tel icon-mobile&quot;&gt;&lt;/i&gt;</span><br><span class="line">              &lt;/span&gt;</span><br><span class="line">              &lt;span class=&quot;icon-mobile-number&quot;&gt;暂无绑定手机号&lt;/span&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;span class=&quot;arrow&quot;&gt;</span><br><span class="line">            &lt;i class=&quot;iconfont icon-previewright&quot;&gt;&lt;/i&gt;</span><br><span class="line">          &lt;/span&gt;</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">      &lt;/section&gt;</span><br><span class="line">      &lt;section class=&quot;profile_info_data border-1px&quot;&gt;</span><br><span class="line">        &lt;ul class=&quot;info_data_list&quot;&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:&quot; class=&quot;info_data_link&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;info_data_top&quot;&gt;&lt;span&gt;0.00&lt;/span&gt;元&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;info_data_bottom&quot;&gt;我的余额&lt;/span&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:&quot; class=&quot;info_data_link&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;info_data_top&quot;&gt;&lt;span&gt;0&lt;/span&gt;个&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;info_data_bottom&quot;&gt;我的优惠&lt;/span&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:&quot; class=&quot;info_data_link&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;info_data_top&quot;&gt;&lt;span&gt;0&lt;/span&gt;分&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;info_data_bottom&quot;&gt;我的积分&lt;/span&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">      &lt;/section&gt;</span><br><span class="line">      &lt;section class=&quot;profile_my_order border-1px&quot;&gt;</span><br><span class="line">        &lt;!-- 我的订单 --&gt;</span><br><span class="line">        &lt;a href=&apos;javascript:&apos; class=&quot;my_order&quot;&gt;</span><br><span class="line">          &lt;span&gt;</span><br><span class="line">            &lt;i class=&quot;iconfont icon-dingdan&quot;&gt;&lt;/i&gt;</span><br><span class="line">          &lt;/span&gt;</span><br><span class="line">          &lt;div class=&quot;my_order_div&quot;&gt;</span><br><span class="line">            &lt;span&gt;我的订单&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;my_order_icon&quot;&gt;</span><br><span class="line">              &lt;i class=&quot;iconfont icon-previewright&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">        &lt;!-- 积分商城 --&gt;</span><br><span class="line">        &lt;a href=&apos;javascript:&apos; class=&quot;my_order&quot;&gt;</span><br><span class="line">          &lt;span&gt;</span><br><span class="line">            &lt;i class=&quot;iconfont icon-jifen&quot;&gt;&lt;/i&gt;</span><br><span class="line">          &lt;/span&gt;</span><br><span class="line">          &lt;div class=&quot;my_order_div&quot;&gt;</span><br><span class="line">            &lt;span&gt;积分商城&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;my_order_icon&quot;&gt;</span><br><span class="line">              &lt;i class=&quot;iconfont icon-previewright&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">        &lt;!-- Mint外卖会员卡 --&gt;</span><br><span class="line">        &lt;a href=&quot;javascript:&quot; class=&quot;my_order&quot;&gt;</span><br><span class="line">          &lt;span&gt;</span><br><span class="line">            &lt;i class=&quot;iconfont icon-viptehuishiduan&quot;&gt;&lt;/i&gt;</span><br><span class="line">          &lt;/span&gt;</span><br><span class="line">          &lt;div class=&quot;my_order_div&quot;&gt;</span><br><span class="line">            &lt;span&gt;Mint外卖会员卡&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;my_order_icon&quot;&gt;</span><br><span class="line">              &lt;i class=&quot;iconfont icon-previewright&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">      &lt;/section&gt;</span><br><span class="line">      &lt;section class=&quot;profile_my_order border-1px&quot;&gt;</span><br><span class="line">        &lt;!-- 服务中心 --&gt;</span><br><span class="line">        &lt;a href=&quot;javascript:&quot; class=&quot;my_order&quot;&gt;</span><br><span class="line">          &lt;span&gt;</span><br><span class="line">            &lt;i class=&quot;iconfont icon-lianxikefu&quot;&gt;&lt;/i&gt;</span><br><span class="line">          &lt;/span&gt;</span><br><span class="line">          &lt;div class=&quot;my_order_div&quot;&gt;</span><br><span class="line">            &lt;span&gt;服务中心&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;my_order_icon&quot;&gt;</span><br><span class="line">              &lt;i class=&quot;iconfont icon-previewright&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">      &lt;/section&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;!--省略js与style--&gt;</span><br></pre></td></tr></table></figure><h3 id="8-3-HeaderTop组件"><a href="#8-3-HeaderTop组件" class="headerlink" title="8.3 HeaderTop组件"></a>8.3 HeaderTop组件</h3><h4 id="8-3-1组件的构成分析"><a href="#8-3-1组件的构成分析" class="headerlink" title="8.3.1组件的构成分析"></a>8.3.1组件的构成分析</h4><ol><li>中间有一个固定的标题栏，只是用在不同的路由组件中显示的内容不同</li><li>标题栏两侧可能有搜索框之类的部分（Msite）也可能没有</li><li>此组件为非路由组件的公用组件（所以在Components文件夹内）</li></ol><h4 id="8-3-2-功能实现的技术"><a href="#8-3-2-功能实现的技术" class="headerlink" title="8.3.2 功能实现的技术"></a>8.3.2 功能实现的技术</h4><ul><li>标题栏两侧是否有其他部分，要用到slot插槽进行组件间通信</li><li>slot 通信是标签, 而不是单纯的数据</li><li>中间标题栏接收的文本可以用props</li></ul><h4 id="8-3-3-组件代码"><a href="#8-3-3-组件代码" class="headerlink" title="8.3.3 组件代码"></a>8.3.3 组件代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;header class=&quot;header&quot;&gt;</span><br><span class="line">    &lt;!-- 插槽是父组件与子组件的通讯方式，子组件中的slot可以显示父组件传递给子组件的内容 --&gt;</span><br><span class="line">    &lt;slot name=&quot;left&quot;&gt;&lt;/slot&gt;</span><br><span class="line">    &lt;span class=&quot;header_title&quot;&gt;</span><br><span class="line">      &lt;span class=&quot;header_title_text ellipsis&quot;&gt;&#123;&#123;title&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    &lt;slot name=&quot;right&quot;&gt;&lt;/slot&gt;</span><br><span class="line">  &lt;/header&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    // 外部组件传递给此组件的属性</span><br><span class="line">    props: &#123;</span><br><span class="line">      title: String</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="8-3-4-在路由组件中使用"><a href="#8-3-4-在路由组件中使用" class="headerlink" title="8.3.4 在路由组件中使用"></a>8.3.4 在路由组件中使用</h4><ul><li>在要使用此头部组件的文件中引入并注册HeaderTop组件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Msite、Order、Search、Profile中都要引入注册才能使用</span></span><br><span class="line"><span class="keyword">import</span> HeaderTop <span class="keyword">from</span> <span class="string">'../../components/HeaderTop/HeaderTop.vue'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    HeaderTop</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>然后使用<code>&lt;HeaderTop&gt;&lt;/HeaderTop&gt;</code>标签设置这个头部组件</p><blockquote><p>这里以Msite.vue为例，先删除静态模版里的Header部分，替换成HeaderTop组件</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 使用 title 来给头部组件传递数据 --&gt;</span><br><span class="line">&lt;HeaderTop title=&quot;芝罘区鲁东大学北区(青年南路)&quot;&gt;</span><br><span class="line">  &lt;!-- 要使用slot=&quot;left&quot;指定插入的插槽位置 --&gt;</span><br><span class="line">  &lt;span class=&quot;header_search&quot; slot=&quot;left&quot;&gt;</span><br><span class="line">    &lt;i class=&quot;iconfont icon-sousuo&quot;&gt;&lt;/i&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">  &lt;span class=&quot;header_login&quot; slot=&quot;right&quot;&gt;</span><br><span class="line">    &lt;span class=&quot;header_login_text&quot;&gt;</span><br><span class="line">          登录|注册</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">&lt;/HeaderTop&gt;</span><br></pre></td></tr></table></figure><ul><li>在其他几个组件中的用法是一样的，同时还省去了slot插槽部分。</li></ul><h3 id="8-4-使用swiper插件实现轮播图"><a href="#8-4-使用swiper插件实现轮播图" class="headerlink" title="8.4 使用swiper插件实现轮播图"></a>8.4 使用swiper插件实现轮播图</h3><p><strong>下载安装：</strong> <code>npm install swiper --save</code></p><p><strong>Msite.vue的HTML部分：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在页面msite_nav导航部分使用swiper--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"swiper-container"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"swiper-wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"swiper-slide"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"swiper-slide"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"swiper-slide"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- swiper轮播图圆点 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"swiper-pagination"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>script部分引入并初始化：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> Swiper <span class="keyword">from</span> <span class="string">'swiper'</span></span><br><span class="line"><span class="comment">//同时引入swiper的 css文件</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'swiper/dist/css/swiper.min.css'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">//注意要在页面加载完成之后（mounted）再进行swiper的初始化</span></span><br><span class="line">  mounted () &#123;</span><br><span class="line">    <span class="comment">//创建一个swiper实例来实现轮播</span></span><br><span class="line">    <span class="keyword">new</span> Swiper(<span class="string">'.swiper-container'</span>, &#123;</span><br><span class="line">      autoplay: <span class="literal">true</span>,</span><br><span class="line">      <span class="comment">// 如果需要分页器</span></span><br><span class="line">      pagination: &#123;</span><br><span class="line">        el: <span class="string">'.swiper-pagination'</span>,</span><br><span class="line">        clickable: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p><strong>具体用法参考</strong><a href="http://www.swiper.com.cn/api/" target="_blank" rel="noopener">Swiper官方文档</a></p><h3 id="8-5-拆分出商家列表ShopList组件"><a href="#8-5-拆分出商家列表ShopList组件" class="headerlink" title="8.5 拆分出商家列表ShopList组件"></a>8.5 拆分出商家列表ShopList组件</h3><ol><li>商家列表是位于首页轮播图下面的部分，可以拆分为一般组件</li><li>在components文件夹下新建ShopList文件夹并新建ShopList.vue文件</li><li>该组件中用到需要一些图片资源，所以在ShopList文件夹下还需要新建images文件夹</li><li>将原本放在Msite文件夹下的shop和stars图片资源移动到新建的images文件夹内 (其实都应该是动态地从后台获取)</li><li>将Msite.vue模板中的<code>&lt;div class=&quot;shop_container&quot;&gt;&lt;/div&gt;</code>部分及相应的stylus样式代码移动到新建的ShopList.vue组件</li><li>注意还要引入公共的css代码mixins.styl</li><li>最后在Msite.vue中import引入商家列表组件并注册使用</li></ol><h3 id="8-6-Login组件"><a href="#8-6-Login组件" class="headerlink" title="8.6 Login组件"></a>8.6 Login组件</h3><p><strong>资源文件准备</strong></p><ol><li>登录组件为一级路由组件，所以在pages文件夹下新建Login文件夹和Login.vue</li><li>template模板里会用到一张svg图片(静态的验证码图片)，所以还要在Login文件夹下新建images文件夹</li></ol><p><strong>配置路由跳转</strong></p><ul><li>将路由组件映射为路由，在router下的index.js文件里进行配置</li><li>登录组件的路由是从个人中心Profile组件里跳转而来的，所以要修改Profile.vue</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--将class为profile-link的a标签替换为router-link--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:"</span> <span class="attr">class</span>=<span class="string">"profile-link"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--但要注意不要忘记class类名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/Login"</span> <span class="attr">class</span>=<span class="string">"profile-link"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--先不考虑未登录的情况--&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>编写Login.vue代码</strong></p><ul><li>利用<code>@click=&quot;$router.back()&quot;</code>实现点击页面的箭头返回上一级路由/Profile的功能</li></ul><p><strong>实现控制Footer的显示隐藏</strong></p><ul><li><p>已确定底部的四个路由组件需要显示Footer部分</p></li><li><p>而Login组件为一级路由组件，且不需要显示底部的FooterGuide导航组件</p></li><li><p>所以为路由组件添加meta元数据来标识是否显示Footer</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'/msite'</span>,</span><br><span class="line">  component: Msite,</span><br><span class="line">  meta: &#123;</span><br><span class="line">    showFooter: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">/*Order、Searh、Profile组件都要添加meta*/</span></span><br></pre></td></tr></table></figure></li><li><p>在App.vue组件中通过代表当前路由的<code>$route</code>就能得到添加的meta属性，然后根据属性值来确定是否显示FooterGuide组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FooterGuide</span> <span class="attr">v-show</span>=<span class="string">"$route.meta.showFooter"</span>&gt;</span><span class="tag">&lt;/<span class="name">FooterGuide</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>其他细节</strong></p><ul><li><p>注意到一个问题，在一个路由组件(Msite)将页面下拉，再切换到其他路由组件(Profile)，页面不会自动回到顶部。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*解决方法 其他页面中类似*/</span></span><br><span class="line"><span class="selector-class">.profile</span></span><br><span class="line">    <span class="attribute">width</span> 100%</span><br><span class="line"><span class="comment">/*添加一行overflow hidden*/</span></span><br><span class="line">    <span class="attribute">overflow</span> hidden</span><br></pre></td></tr></table></figure></li></ul><h2 id="9-后台应用"><a href="#9-后台应用" class="headerlink" title="9. 后台应用"></a>9. 后台应用</h2><h3 id="9-1-说明"><a href="#9-1-说明" class="headerlink" title="9.1 说明"></a>9.1 说明</h3><ol><li>整个项目为前后端分离的项目：mintshop-client 与 mintshop-server</li><li>后台应用负责处理前台应用提交的请求, 并给前台应用返回 json 数据</li><li>前台应用负责展现数据, 与用户交互, 与后台应用交互</li></ol><h3 id="9-2-运行"><a href="#9-2-运行" class="headerlink" title="9.2 运行"></a>9.2 运行</h3><ol><li>确保启动 mongodb 服务</li><li>进入mintshop-server文件夹，启动服务器应用: <code>npm start</code></li></ol><h3 id="9-3-API文档"><a href="#9-3-API文档" class="headerlink" title="9.3 API文档"></a>9.3 API文档</h3><p><strong>具体API文档详见mintshop-server/API.md，然后可以使用Postman来进行接口测试</strong></p><h2 id="10-前后台交互-ajax"><a href="#10-前后台交互-ajax" class="headerlink" title="10. 前后台交互 ajax"></a>10. 前后台交互 ajax</h2><ul><li>测试完后台接口，则需要写前后台交互的ajax文件</li><li>在src/api文件夹下新建index.js与ajax.js<ul><li>首先需要安装axios <code>npm install axios--save</code></li></ul></li></ul><h3 id="10-1-封装ajax请求函数"><a href="#10-1-封装ajax请求函数" class="headerlink" title="10.1 封装ajax请求函数"></a>10.1 封装ajax请求函数</h3><ul><li>为了实现统一向后端发送请求数据，所以需要封装一个ajax请求函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">ajax 请求函数模块</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 向外部暴漏一个函数 ajax</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; url 请求路径，默认为空</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; data 请求参数，默认为空对象</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; type 请求方法，默认为GET</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">url = <span class="string">''</span>, data = &#123;&#125;, type = <span class="string">'GET'</span></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 返回值 Promise对象 （异步返回的数据是response.data，而不是response）</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//（利用axios）异步执行ajax请求</span></span><br><span class="line">    <span class="keyword">let</span> promise <span class="comment">// 这个内部的promise用来保存axios的返回值(promise对象)</span></span><br><span class="line">    <span class="keyword">if</span> (type === <span class="string">'GET'</span>) &#123;</span><br><span class="line">      <span class="comment">// 准备 url query 参数数据</span></span><br><span class="line">      <span class="keyword">let</span> dataStr = <span class="string">''</span> <span class="comment">// 数据拼接字符串，将data连接到url</span></span><br><span class="line">      <span class="built_in">Object</span>.keys(data).forEach(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">        dataStr += key + <span class="string">'='</span> + data[key] + <span class="string">'&amp;'</span></span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">if</span> (dataStr !== <span class="string">''</span>) &#123;</span><br><span class="line">        dataStr = dataStr.substring(<span class="number">0</span>, dataStr.lastIndexOf(<span class="string">'&amp;'</span>))</span><br><span class="line">        url = url + <span class="string">'?'</span> + dataStr</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 发送 get 请求</span></span><br><span class="line">      promise = axios.get(url)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 发送 post 请求</span></span><br><span class="line">      promise = axios.post(url, data)</span><br><span class="line">    &#125;</span><br><span class="line">    promise.then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 成功回调resolve()</span></span><br><span class="line">        resolve(response.data)</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 失败回调reject()</span></span><br><span class="line">        reject(error)</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通过对axios返回的promise对象再包装一层Promise的方法，来简化外部的调用</li></ul><h3 id="10-2-封装接口请求函数"><a href="#10-2-封装接口请求函数" class="headerlink" title="10.2 封装接口请求函数"></a>10.2 封装接口请求函数</h3><ul><li>有了发送请求数据的ajax函数，还需要封装一些与后台交互的接口函数</li><li>根据接口文档来定义接口请求函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*与后台交互模块 （依赖已封装的ajax函数）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> ajax <span class="keyword">from</span> <span class="string">'./ajax'</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取地址信息(根据经纬度串)</span></span><br><span class="line"><span class="comment"> * 这个接口的经纬度参数是在url路径里的，没有query参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqAddress = <span class="function"><span class="params">geohash</span> =&gt;</span> ajax(<span class="string">`/position/<span class="subst">$&#123;geohash&#125;</span>`</span>)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取 msite 页面食品分类列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqCategorys = <span class="function"><span class="params">()</span> =&gt;</span> ajax(<span class="string">'/index_category'</span>)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取 msite 商铺列表(根据query参数：经纬度)</span></span><br><span class="line"><span class="comment"> * 将经纬度两个数据作为一个参数对象传入</span></span><br><span class="line"><span class="comment"> * 也可以两个数据分别传入ajax， 然后再放入一个对象参数内， 如下面的手机号验证码接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqShops = (&#123;</span><br><span class="line">  latitude,</span><br><span class="line">  longitude</span><br><span class="line">&#125;) =&gt; ajax(<span class="string">'/shops'</span>, &#123;</span><br><span class="line">  latitude,</span><br><span class="line">  longitude</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账号密码登录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqPwdLogin = <span class="function">(<span class="params">name, pwd, captcha</span>) =&gt;</span> ajax(<span class="string">'/login_pwd'</span>, &#123;</span><br><span class="line">  name,</span><br><span class="line">  pwd,</span><br><span class="line">  captcha</span><br><span class="line">&#125;, <span class="string">'POST'</span>)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取短信验证码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqSendCode = <span class="function"><span class="params">phone</span> =&gt;</span> ajax(<span class="string">'/sendcode'</span>, &#123;</span><br><span class="line">  phone</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 手机号验证码登录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqSmsLogin = <span class="function">(<span class="params">phone, code</span>) =&gt;</span> ajax(<span class="string">'/login_sms'</span>, &#123;</span><br><span class="line">  phone,</span><br><span class="line">  code</span><br><span class="line">&#125;, <span class="string">'POST'</span>)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取用户信息(根据会话)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqUser = <span class="function"><span class="params">()</span> =&gt;</span> ajax(<span class="string">'/userinfo'</span>)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 请求登出</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqLogout = <span class="function"><span class="params">()</span> =&gt;</span> ajax(<span class="string">'/logout'</span>)</span><br></pre></td></tr></table></figure><h3 id="10-3-配置代理并测试接口实现ajax跨域请求"><a href="#10-3-配置代理并测试接口实现ajax跨域请求" class="headerlink" title="10.3 配置代理并测试接口实现ajax跨域请求"></a>10.3 配置代理并测试接口实现ajax跨域请求</h3><p><strong>问题分析：</strong></p><ul><li><p>目前为止运行的所有页面都是静态页面</p></li><li><p>接下来先测试使用封装的ajax接口请求函数来异步获取数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先在App.vue中引入封装的接口函数</span></span><br><span class="line"><span class="keyword">import</span> &#123;reqCategorys&#125; <span class="keyword">from</span> <span class="string">'./api'</span></span><br><span class="line"><span class="comment">// 然后再调用接口，测试打印数据</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> mounted () &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> reqCategorys()</span><br><span class="line">    <span class="built_in">console</span>.log(result)</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    FooterGuide</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>打开浏览器，运行项目会报错<code>GET http://local:4000/index_category 404(Not Found)</code></p></li><li><p>此时想起后端API端口为4000，然后在api文件夹下的index.js中修改测试</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义BASE_URL</span></span><br><span class="line"><span class="keyword">const</span> BASE_URL = <span class="string">'http://local:4000'</span></span><br><span class="line"><span class="comment">// 然后修改请求接口的url</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqCategorys = <span class="function"><span class="params">()</span> =&gt;</span> ajax(BASE_URL + <span class="string">'/index_category'</span>)</span><br></pre></td></tr></table></figure></li><li><p>然后再打开项目，发现依然报错<code>access-control-allow-origin</code>提示请求为跨域请求</p></li></ul><p><strong>配置代理并测试接口：</strong></p><ul><li>除了设置让服务器允许跨域的方法之外，还可以通过配置代理实现跨域请求</li></ul><ol><li><p>在项目config文件夹下的index.js文件里设置代理配置表</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Paths</span></span><br><span class="line"><span class="comment">// 静态资源文件夹</span></span><br><span class="line">assetsSubDirectory: <span class="string">'static'</span>,</span><br><span class="line"><span class="comment">// 发布路径</span></span><br><span class="line">assetsPublicPath: <span class="string">'/'</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 代理配置表，在这里可以配置特定的请求代理到对应的API接口</span></span><br><span class="line"><span class="comment">// 例如将'localhost:8080/api/xxx'代理到'www.example.com/api/xxx'</span></span><br><span class="line">proxyTable: &#123;</span><br><span class="line">  <span class="string">'/api'</span>: &#123; <span class="comment">// 匹配所有以 '/api'开头的请求路径</span></span><br><span class="line">  target: <span class="string">'http://localhost:4000'</span>, <span class="comment">// 代理目标的基础路径</span></span><br><span class="line">    <span class="comment">// secure: false,  // 如果是https接口，需要配置这个参数</span></span><br><span class="line">    changeOrigin: <span class="literal">true</span>, <span class="comment">// 支持跨域</span></span><br><span class="line">    pathRewrite: &#123; <span class="comment">// 重写路径: 去掉路径中开头的'/api'</span></span><br><span class="line">      <span class="string">'^/api'</span>: <span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li><p>修改api文件夹index.js里接口函数的请求路径</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// const BASE_URL = 'http://local:4000'</span></span><br><span class="line"><span class="keyword">const</span> BASE_URL = <span class="string">'/api'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqAddress = <span class="function"><span class="params">geohash</span> =&gt;</span> ajax(<span class="string">`<span class="subst">$&#123;BASE_URL&#125;</span>/position/<span class="subst">$&#123;geohash&#125;</span>`</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqCategorys = <span class="function"><span class="params">()</span> =&gt;</span> ajax(BASE_URL + <span class="string">'/index_category'</span>)</span><br><span class="line"><span class="comment">// 下面修改后的接口省略...</span></span><br></pre></td></tr></table></figure></li><li><p>因为修改了项目的config文件，所以需要重启项目<code>npm run dev</code></p></li><li><p>此时可以在控制台看到跨域请求到的数据<code>{code: 0, data: Array(16)}</code></p></li></ol><h2 id="11-使用Vuex管理状态"><a href="#11-使用Vuex管理状态" class="headerlink" title="11. 使用Vuex管理状态"></a>11. 使用Vuex管理状态</h2><ul><li>安装Vuex<code>npm install vuex --save</code>用来管理从后台获取的状态数据</li><li>以下代码以首页Msite为例</li></ul><h3 id="11-1-创建Store-核心仓库"><a href="#11-1-创建Store-核心仓库" class="headerlink" title="11.1 创建Store(核心仓库)"></a>11.1 创建Store(核心仓库)</h3><ul><li>在项目的store文件夹下新建index.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">vuex最核心的管理对象store</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 首先引入Vue及Vuex</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入四个基本模块</span></span><br><span class="line"><span class="keyword">import</span> state <span class="keyword">from</span> <span class="string">'./state'</span></span><br><span class="line"><span class="keyword">import</span> mutations <span class="keyword">from</span> <span class="string">'./mutations'</span></span><br><span class="line"><span class="keyword">import</span> actions <span class="keyword">from</span> <span class="string">'./actions'</span></span><br><span class="line"><span class="keyword">import</span> getters <span class="keyword">from</span> <span class="string">'./getters'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 一定要声明使用插件</span></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  state,</span><br><span class="line">  mutations,</span><br><span class="line">  actions,</span><br><span class="line">  getters</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="11-2-模块对象"><a href="#11-2-模块对象" class="headerlink" title="11.2 模块对象"></a>11.2 模块对象</h3><h4 id="11-2-1-State"><a href="#11-2-1-State" class="headerlink" title="11.2.1 State"></a>11.2.1 State</h4><ul><li>分析整理出项目首页Msite中有哪些状态需要管理，然后写入state.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">状态对象 state</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  latitude: <span class="number">40.10038</span>, <span class="comment">// 纬度</span></span><br><span class="line">  longitude: <span class="number">116.36867</span>, <span class="comment">// 经度</span></span><br><span class="line">  address: &#123;&#125;, <span class="comment">// 地址相关信息对象</span></span><br><span class="line">  categorys: [], <span class="comment">// 食品分类数组</span></span><br><span class="line">  shops: [] <span class="comment">// 商家数组</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="11-2-2-Mutation"><a href="#11-2-2-Mutation" class="headerlink" title="11.2.2 Mutation"></a>11.2.2 Mutation</h4><ul><li><p>更改 Vuex 的 store 中的状态的唯一方法是提交 mutation</p></li><li><p>每个 mutation 都有一个字符串的 <strong>事件类型 (type)</strong> 和 一个 <strong>回调函数 (handler)</strong></p></li><li><p>我们可以使用常量替代 Mutation 事件类型，新建<strong>mutations-types文件</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">包含n个mutation的type名称常量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> RECEIVE_ADDRESS = <span class="string">'receive_address'</span> <span class="comment">// 接收地址信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> RECEIVE_CATEGORYS = <span class="string">'receive_categorys'</span> <span class="comment">// 接收分类数组</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> RECEIVE_SHOPS = <span class="string">'receive_shops'</span> <span class="comment">// 接收商家数组</span></span><br></pre></td></tr></table></figure></li><li><p>然后在mutations.js文件内引入使用<strong>(注意书写格式)</strong></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">vuex 的 mutations 模块</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> &#123;RECEIVE_ADDRESS,RECEIVE_CATEGORYS,RECEIVE_SHOPS&#125; <span class="keyword">from</span> <span class="string">'./mutation-types'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// [方法名](state,&#123;param&#125;)&#123;&#125;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">[RECEIVE_ADDRESS](state, &#123;address&#125;) &#123;</span><br><span class="line">state.address = address</span><br><span class="line">&#125;,</span><br><span class="line">[RECEIVE_CATEGORYS](state, &#123;categorys&#125;) &#123;</span><br><span class="line">state.categorys = categorys</span><br><span class="line">&#125;,</span><br><span class="line">[RECEIVE_SHOPS](state, &#123;shops&#125;) &#123;</span><br><span class="line">state.shops = shops</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>而回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数</li></ul><h4 id="11-2-3-Action"><a href="#11-2-3-Action" class="headerlink" title="11.2.3 Action"></a>11.2.3 Action</h4><p>Action 类似于 mutation，不同在于：</p><ul><li><p>Action 提交的是 mutation，而不是直接变更状态。</p></li><li><p>Action 可以包含任意异步操作。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Action:通过操作mutation间接更新state的多个方法的对象</span></span><br><span class="line"><span class="comment">// 注意要引入api接口函数</span></span><br><span class="line"><span class="keyword">import</span> &#123;reqAddress, reqCategorys, reqShops&#125; <span class="keyword">from</span> <span class="string">'../api'</span></span><br><span class="line"><span class="keyword">import</span> &#123;RECEIVE_ADDRESS, RECEIVE_CATEGORYS, RECEIVE_SHOPS&#125; <span class="keyword">from</span> <span class="string">'./mutation-types'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 异步获取地址</span></span><br><span class="line">  <span class="keyword">async</span> getAddress (&#123;commit, state&#125;) &#123;</span><br><span class="line">    <span class="comment">// 从state状态中获取到经纬度用来设置reqAddress的参数（看接口文档）</span></span><br><span class="line">    <span class="keyword">const</span> geohash = state.latitude + <span class="string">','</span> + state.longitude</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 1. 发送异步ajax请求</span></span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> reqAddress(geohash)</span><br><span class="line">    <span class="comment">// 2. 根据结果提交一个mutation</span></span><br><span class="line">    commit(RECEIVE_ADDRESS, &#123;<span class="attr">address</span>: result.data&#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 异步获取分类列表</span></span><br><span class="line">  <span class="keyword">async</span> getCategorys (&#123;commit&#125;) &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> reqCategorys()</span><br><span class="line">    commit(RECEIVE_CATEGORYS, &#123;<span class="attr">categorys</span>: result.data&#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 异步获取商家列表</span></span><br><span class="line">  <span class="keyword">async</span> getShops (&#123;commit, state&#125;) &#123;</span><br><span class="line">    <span class="comment">// 对象的解构赋值</span></span><br><span class="line">    <span class="keyword">const</span> &#123;latitude, longitude&#125; = state</span><br><span class="line">    <span class="comment">// 注意参数的顺序</span></span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> reqShops(&#123;latitude, longitude&#125;)</span><br><span class="line">    commit(RECEIVE_SHOPS, &#123;<span class="attr">shops</span>: result.data&#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>至此已经完成了首页状态数据的vuex设置</p></li></ul><h3 id="11-3-异步获取并显示数据"><a href="#11-3-异步获取并显示数据" class="headerlink" title="11.3 异步获取并显示数据"></a>11.3 异步获取并显示数据</h3><ol><li><p>在项目中注册store</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//项目的main.js文件</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">store</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>测试异步<strong>获取</strong>当前地址数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 地址信息要尽早的获取，所以请求可以写在App.vue中</span></span><br><span class="line"><span class="comment">// 首先删除之前测试使用封装的ajax接口的代码</span></span><br><span class="line"><span class="keyword">async</span> mounted () &#123;</span><br><span class="line">    <span class="comment">// 通过this.$store.dispatch 方法触发调用Action</span></span><br><span class="line">    <span class="keyword">this</span>.$store.dispatch(<span class="string">'getAddress'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>运行项目，在浏览器控制台里打开vue开发工具，切换到vuex，可以看到通过vuex异步获取的状态数据</li><li>除了这种方法调用action，还可以使用mapActions语法糖</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;mapActions&#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> mounted () &#123;</span><br><span class="line">    <span class="keyword">this</span>.getAddress()</span><br><span class="line">&#125;</span><br><span class="line">methods: &#123;</span><br><span class="line">...mapActions([<span class="string">'getAddress'</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>读取</strong>并显示获取到的当前地址数据</p><ul><li>首页Msite组件中显示地址信息</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 利用mapState语法糖去读取state对象</span></span><br><span class="line"><span class="keyword">import</span> &#123;mapState&#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line">computed: &#123;</span><br><span class="line">...mapState([<span class="string">'address'</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;HeaderTop :title=<span class="string">"address.name"</span>&gt;</span><br><span class="line"><span class="comment">// 将静态地址信息换成异步获取的地址数据 注意:title为绑定数据</span></span><br><span class="line">&lt;<span class="regexp">/HeaderTop&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="12-完成Msite页面"><a href="#12-完成Msite页面" class="headerlink" title="12. 完成Msite页面"></a>12. 完成Msite页面</h2><h3 id="12-1-异步显示食品分类轮播列表"><a href="#12-1-异步显示食品分类轮播列表" class="headerlink" title="12.1 异步显示食品分类轮播列表"></a>12.1 异步显示食品分类轮播列表</h3><ul><li>上面已经完成了首页当前地址信息的获取与显示，接下来是完成Msite.vue中的食品分类的轮播图</li></ul><ol><li><p>mounted方法中通过this.$store.dispatch调用Action来获取异步数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 忘记Actuon里对应的方法名时查看Action.js</span></span><br><span class="line">mounted () &#123;</span><br><span class="line">    <span class="keyword">this</span>.$store.dispatch(<span class="string">'getCategorys'</span>)</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>通过mapState语法糖来读取获取到的异步数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 忘记state名时查看State.js</span></span><br><span class="line">computed: &#123;</span><br><span class="line">    ...mapState([<span class="string">'address'</span>, <span class="string">'categorys'</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>分析template结构并处理categorys数据</p><blockquote><p>业务分析： 此时获取到的categorys是所有食品类别的一维数组，而如果要完成轮播图，需要将其变成这种<code>[[page1], [page2], [page3]]</code>二维数组categorysArr。</p><p>比如本项目中有两页轮播图，一页为8个数据。应该把categorys数组处理成<code>[[data1 - 8], [data1 - 8]]</code>这种数据格式</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//template</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"swiper-slide"</span> <span class="attr">v-for</span>=<span class="string">"(pages,index) in categorysArr"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:"</span> <span class="attr">class</span>=<span class="string">"(data,index) in pages"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">        ......</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>利用计算属性将categorys处理成期望的数据结构categorysArr</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">computed () &#123;</span><br><span class="line">    ...mapState([<span class="string">'address'</span>, <span class="string">'categorys'</span>]),</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    根据categorys一维数组生成一个2维数组</span></span><br><span class="line"><span class="comment">    小数组中的元素个数最大是8</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    categorysArr () &#123;</span><br><span class="line">      <span class="comment">// 1.先从当前组件中得到所有食品分类的一维数组</span></span><br><span class="line">      <span class="keyword">const</span> &#123;categorys&#125; = <span class="keyword">this</span></span><br><span class="line">      <span class="comment">// 2.准备一个空的二维数组--categorysArr</span></span><br><span class="line">      <span class="keyword">const</span> arr = []</span><br><span class="line">      <span class="comment">// 3.准备一个小数组--pages(最大长度为8)</span></span><br><span class="line">      <span class="keyword">let</span> minArr = []</span><br><span class="line">      <span class="comment">// 4.遍历categorys得到处理后的二维数组catagorysArr</span></span><br><span class="line">      categorys.forEach(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 如果当前小数组(pages)已经满了, 创建一个新的</span></span><br><span class="line">        <span class="keyword">if</span> (minArr.length === <span class="number">8</span>) &#123;</span><br><span class="line">          minArr = []</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果minArr是空的, 将小数组(pages)保存到大数组(categorysArr)中</span></span><br><span class="line">        <span class="keyword">if</span> (minArr.length === <span class="number">0</span>) &#123;</span><br><span class="line">          arr.push(minArr)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将当前分类信息保存到小数组(pages)中</span></span><br><span class="line">        minArr.push(data)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意第4步forEach里的逻辑顺序</p><p>1.为什么当minArr数组的长度为0时就将它与大数组关联起来，不是等它存满(8个)？</p><p>因为有可能categorys里的数据个数不为8的倍数，最后一个minArr内的数据不足8个。</p><p>2.为什么先判断minArr的长度为8的情况再判断等于0的情况？</p><p>因为先判断minArr的长度为0，将其放入大数组中与大数组关联起来，那么等到当前这个minArr填充完成之后新建的小数组则无法与大数组关联起来。</p><p>所以先判断长度为8的情况，再判断数组长度为0的情况。就可以确保之前的minArr填充完成后，新建的minArr都可以被放到大数组里与大数组关联起来。</p></blockquote><ul><li>除了上面的方式处理categorys，也可以采用分割数组的方法。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">categorysArr () &#123;</span><br><span class="line"><span class="keyword">const</span> &#123;categorys&#125; = <span class="keyword">this</span></span><br><span class="line"><span class="keyword">const</span> arr = []</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>,len = categorys.length;i &lt; len; i += <span class="number">8</span>)&#123;</span><br><span class="line">    arr.push(categorys.slice(i, i + <span class="number">8</span>))</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>将数据显示到页面上</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 因为食品分类的图片信息都有一个baseImageUrl所以在data里定义</span></span><br><span class="line">data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      baseImageUrl: <span class="string">'https://fuss10.elemecdn.com'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--通过v-for循环渲染data的信息 注意src为绑定数据--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"swiper-slide"</span> <span class="attr">v-for</span>=<span class="string">"(pages,index) in categorysArr"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:"</span> <span class="attr">class</span>=<span class="string">"link_to_food"</span> <span class="attr">v-for</span>=<span class="string">"(data,index) in pages"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"food_container"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"baseImageUrl+data.image_url"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;data.title&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="12-2-使用watch与-nextTick解决轮播的Bug"><a href="#12-2-使用watch与-nextTick解决轮播的Bug" class="headerlink" title="12.2 使用watch与$nextTick解决轮播的Bug"></a>12.2 使用watch与$nextTick解决轮播的Bug</h3><ul><li><p>分页器Swiper其实应该是在轮播列表显示(即categorys数组有了数据)以后才初始化。</p></li><li><p>最开始categorys为空数组，有了数据才会显示轮播列表，而要监视categorys的数据变化，就要用到<strong>watch</strong>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 新建watch 监听categorys</span></span><br><span class="line">watch: &#123;</span><br><span class="line">    categorys (value) &#123; <span class="comment">// categorys数组中有数据了</span></span><br><span class="line">    <span class="comment">// 但界面还没有异步更新</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 删除mounted中的new Swiper...代码</span></span><br></pre></td></tr></table></figure></li><li><p>但其实<strong>state里的状态数据改变（categorys接收数据）与异步更新界面（显示轮播列表）是两个步骤</strong>。所以需要等一等，界面完成异步更新后才可以进行Swiper的初始化。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用setTimeout可以实现效果, 但是时机不准确</span></span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 创建一个Swiper实例对象, 来实现轮播</span></span><br><span class="line"><span class="keyword">new</span> Swiper(<span class="string">'.swiper-container'</span>, &#123;</span><br><span class="line">          autoplay: <span class="literal">true</span>,</span><br><span class="line">          <span class="comment">// 如果需要分页器</span></span><br><span class="line">          pagination: &#123;</span><br><span class="line">            el: <span class="string">'.swiper-pagination'</span>,</span><br><span class="line">            clickable: <span class="literal">true</span></span><br><span class="line">          &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;, <span class="number">100</span>)</span><br></pre></td></tr></table></figure></li><li><p>利用<code>vm.$nextTick( [callback] )</code>来实现等待界面完成异步更新就立即创建Swiper对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在修改数据之后立即使用它，然后等待 DOM 更新。</span></span><br><span class="line"><span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 一旦完成界面更新, 立即执行回调</span></span><br><span class="line">    <span class="keyword">new</span> Swiper(<span class="string">'.swiper-container'</span>, &#123;</span><br><span class="line">    autoplay: <span class="literal">true</span>,</span><br><span class="line">    pagination: &#123;</span><br><span class="line">    el: <span class="string">'.swiper-pagination'</span>,</span><br><span class="line">    clickable: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="12-3-异步显示商家列表"><a href="#12-3-异步显示商家列表" class="headerlink" title="12.3 异步显示商家列表"></a>12.3 异步显示商家列表</h3><ol><li>在Msite的mounted中获取异步数据</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$store.dispatch(<span class="string">'getShops'</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>在ShopList.vue中引入mapState，在computed中读取状态数据</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;mapState&#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  computed: &#123;</span><br><span class="line">...mapState([<span class="string">'shops'</span>])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>修改template并添加data</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">      baseImgUrl: <span class="string">'http://owoccema2.bkt.clouddn.com/show/MintShop/'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"shop_li border-1px"</span> <span class="attr">v-for</span>=<span class="string">"(shop,index) in shops"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"shop_left"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"shop_img"</span> <span class="attr">:src</span>=<span class="string">"baseImgUrl + shop.image_path"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"shop_right"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"shop_detail_header"</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"shop_title ellipsis"</span>&gt;</span>&#123;&#123;shop.name&#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"shop_detail_ul"</span>&gt;</span></span><br><span class="line">                ...</span><br><span class="line">              <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"shop_rating_order"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"shop_rating_order_left"</span>&gt;</span></span><br><span class="line">         ...</span><br><span class="line">         <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="12-4-开发评分Star组件"><a href="#12-4-开发评分Star组件" class="headerlink" title="12.4 开发评分Star组件"></a>12.4 开发评分Star组件</h3><ul><li>不仅在首页的商家列表中有五颗星星的评分部分，商家信息的评价区域也有star评分，所以可以把它抽取成一个可复用的一般组件。</li></ul><ol><li><p>在components文件夹下新建Star文件夹，然后将原本在ShopList文件夹下的images文件夹里的stars移动到新建的Star文件夹里并重命名为images</p></li><li><p>在Star文件夹里新建Star.vue并将ShopList.vue中评分部分的模版和样式剪切进去，注意修改图片路径</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"star star-24"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"star-item on"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"star-item on"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"star-item on"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"star-item half"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"star-item off"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>根据类名为组件设置属性props和计算属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 类名常量</span></span><br><span class="line"><span class="keyword">const</span> CLASS_ON = <span class="string">'on'</span></span><br><span class="line"><span class="keyword">const</span> CLASS_HALF = <span class="string">'half'</span></span><br><span class="line"><span class="keyword">const</span> CLASS_OFF = <span class="string">'off'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    score: <span class="built_in">Number</span>,</span><br><span class="line">    size: <span class="built_in">Number</span></span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    3.2: 3 + 0 + 2</span></span><br><span class="line"><span class="comment">    4.7: 4 + 1 + 0</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">// 该方法产生一个数组starArr来表示on half off类名的span数量（总长度为5）</span></span><br><span class="line">    starClasses () &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123;score&#125; = <span class="keyword">this</span></span><br><span class="line">      <span class="keyword">const</span> starArr = []</span><br><span class="line">      <span class="comment">// 向starArr中添加n个CLASS_ON</span></span><br><span class="line">      <span class="keyword">const</span> scoreInteger = <span class="built_in">Math</span>.floor(score)</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; scoreInteger; i++) &#123;</span><br><span class="line">        starArr.push(CLASS_ON)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 向starArr中添加0/1个CLASS_HALF</span></span><br><span class="line">      <span class="keyword">if</span>(score*<span class="number">10</span>-scoreInteger*<span class="number">10</span>&gt;=<span class="number">5</span>) &#123;</span><br><span class="line">        starArr.push(CLASS_HALF)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 向starArr中添加n个CLASS_OFF</span></span><br><span class="line">      <span class="keyword">while</span>(starArr.length&lt;<span class="number">5</span>) &#123;</span><br><span class="line">        starArr.push(CLASS_OFF)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> starArr</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改template模版</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"star"</span> <span class="attr">:class</span>=<span class="string">"'star-'+size"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"star-item"</span> <span class="attr">v-for</span>=<span class="string">"(sc, index) in starClasses"</span> <span class="attr">:class</span>=<span class="string">"sc"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在ShopList中import引入并注册使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Star</span> <span class="attr">:score</span>=<span class="string">"shop.rating"</span> <span class="attr">:size</span>=<span class="string">"24"</span>&gt;</span><span class="tag">&lt;/<span class="name">Star</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="12-5-使用svg显示页面加载中提示界面"><a href="#12-5-使用svg显示页面加载中提示界面" class="headerlink" title="12.5 使用svg显示页面加载中提示界面"></a>12.5 使用svg显示页面加载中提示界面</h3><ul><li><p>目前首页的内容数据已经可以异步获取并显示，但在数据还未加载完成时，为了优化用户体验，应该给出页面加载中的提示界面。</p></li><li><p>首先将svg资源图片放入相应的Msite和ShopList的images文件夹里</p></li><li><p>然后修改模版的显示条件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Msite--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"swiper-container"</span> <span class="attr">v-if</span>=<span class="string">"categorys.length"</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/msite_back.svg"</span> <span class="attr">alt</span>=<span class="string">"back"</span> <span class="attr">v-else</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--ShopList--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"shop_list"</span> <span class="attr">v-if</span>=<span class="string">"shops.length"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 循环显示6个svg图片 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in 6"</span> <span class="attr">:key</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/shop_back.svg"</span> <span class="attr">alt</span>=<span class="string">"back"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="13-实现登陆注册功能"><a href="#13-实现登陆注册功能" class="headerlink" title="13. 实现登陆注册功能"></a>13. 实现登陆注册功能</h2><h3 id="13-1-模块界面效果及交互功能说明"><a href="#13-1-模块界面效果及交互功能说明" class="headerlink" title="13.1 模块界面效果及交互功能说明"></a>13.1 模块界面效果及交互功能说明</h3><p><strong>1. 界面相关效果</strong></p><ol><li>切换登陆方式</li><li>手机号合法检查</li><li>倒计时效果</li><li>切换显示或隐藏密码</li><li>前台验证提示</li></ol><p>*<em>2. 前后台交互功能 *</em></p><ol><li>动态一次性图形验证码</li><li>动态一次性短信验证码</li><li>短信登陆</li><li>密码登陆</li><li>获取用户信息,实现自动登陆</li><li>退出登陆</li></ol><h3 id="13-2-效果一：切换登陆方式"><a href="#13-2-效果一：切换登陆方式" class="headerlink" title="13.2 效果一：切换登陆方式"></a>13.2 效果一：切换登陆方式</h3><ol><li>既然要切换登陆方式，就需要一个变量来标识这两种方式</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">loginWay: <span class="literal">false</span> <span class="comment">// true代表短信登陆, false代表密码</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>动态绑定a标签的class和点击事件来实现点击切换样式</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login_header_title"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">:class</span>=<span class="string">"&#123;on: loginWay&#125;"</span> @<span class="attr">click</span>=<span class="string">"loginWay=true"</span>&gt;</span>短信登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">:class</span>=<span class="string">"&#123;on: !loginWay&#125;"</span> @<span class="attr">click</span>=<span class="string">"loginWay=false"</span>&gt;</span>密码登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>同时实现下面的表单登陆框自动切换</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login_content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">"&#123;on: loginWay&#125;"</span>&gt;</span></span><br><span class="line">            短信登陆的input...</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">"&#123;on: !loginWay&#125;"</span>&gt;</span></span><br><span class="line">            密码登陆的input...</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="13-3-效果二：手机号合法检查"><a href="#13-3-效果二：手机号合法检查" class="headerlink" title="13.3 效果二：手机号合法检查"></a>13.3 效果二：手机号合法检查</h3><ul><li><p>既然是要对手机号格式进行检查就要为其绑定数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--v-model的值最好按照api文档里要求的字段来命名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"tel"</span> <span class="attr">maxlength</span>=<span class="string">"11"</span> <span class="attr">placeholder</span>=<span class="string">"手机号"</span> <span class="attr">v-model</span>=<span class="string">"phone"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>根据手机号格式是否正确来动态的为获取验证码添加一个类名right_phone</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">disabled</span>=<span class="string">"disabled"</span> <span class="attr">class</span>=<span class="string">"get_verification"</span> <span class="attr">:class</span>=<span class="string">"&#123;right_phone:rightPhone&#125;"</span>&gt;</span>获取验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>right_phone的值是根据phone来确定的，所以应该是一个计算属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">  rightPhone () &#123;</span><br><span class="line">    <span class="comment">// 利用正则对手机号进行匹配，返回布尔值</span></span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/^1\d&#123;10&#125;$/</span>.test(<span class="keyword">this</span>.phone)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>此时button的disabled也应该根据rightPhone的返回值来确定</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">:disabled</span>=<span class="string">"!rightPhone"</span> <span class="attr">class</span>=<span class="string">"get_verification"</span> <span class="attr">:class</span>=<span class="string">"&#123;right_phone:rightPhone&#125;"</span>&gt;</span>获取验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在style部分加入新定义的right_phone样式</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.get_verification</span></span><br><span class="line">...</span><br><span class="line">&amp;<span class="selector-class">.right_phone</span></span><br><span class="line">    <span class="attribute">color</span> black</span><br></pre></td></tr></table></figure></li></ul><h3 id="13-4-效果三：30s倒计时"><a href="#13-4-效果三：30s倒计时" class="headerlink" title="13.4 效果三：30s倒计时"></a>13.4 效果三：30s倒计时</h3><ul><li><p>点击获取验证码之后会显示30s倒计时的效果并发送获取验证码的请求</p></li><li><p>注意要阻止点击button的默认提交表单事件，所以用<code>@click.prevent</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">:disabled</span>=<span class="string">"!rightPhone"</span> <span class="attr">class</span>=<span class="string">"get_verification"</span> <span class="attr">:class</span>=<span class="string">"&#123;right_phone:rightPhone&#125;"</span> @<span class="attr">click.prevent</span>=<span class="string">"getCode"</span>&gt;</span>获取验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在data里定义定时变量computeTime，然后感觉时间判断显示的内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"get_verification"</span>&gt;</span>&#123;&#123;computeTime&gt;0 ? `($&#123;computeTime&#125;s)已发送` : '获取验证码'&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>然后在methods里定义定时器</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    getCode () &#123;</span><br><span class="line">     <span class="comment">// 如果当前没有计时!this.computeTime等于this.computeTime === 0</span></span><br><span class="line">       <span class="keyword">if</span>(!<span class="keyword">this</span>.computeTime) &#123;</span><br><span class="line">         <span class="comment">// 启动倒计时</span></span><br><span class="line">         <span class="keyword">this</span>.computeTime = <span class="number">30</span></span><br><span class="line">         <span class="keyword">this</span>.intervalId = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">           <span class="keyword">this</span>.computeTime--</span><br><span class="line">           <span class="keyword">if</span>(<span class="keyword">this</span>.computeTime &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">             <span class="comment">// 停止计时</span></span><br><span class="line">             clearInterval(<span class="keyword">this</span>.intervalId)</span><br><span class="line">           &#125;</span><br><span class="line">         &#125;, <span class="number">1000</span>)</span><br><span class="line">       &#125;</span><br><span class="line">     <span class="comment">// 发送ajax请求（向指定手机号发送验证码短信）</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="13-5-效果四：-密码的显示隐藏"><a href="#13-5-效果四：-密码的显示隐藏" class="headerlink" title="13.5 效果四： 密码的显示隐藏"></a>13.5 效果四： 密码的显示隐藏</h3><ul><li><p>利用两个type不同的input来实现密码的显示隐藏</p></li><li><p>在data里定义showPwd(默认为false)控制两者的显隐，同时使用v-model绑定数据pwd</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"login_verification"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">maxlength</span>=<span class="string">"8"</span> <span class="attr">placeholder</span>=<span class="string">"密码"</span> <span class="attr">v-if</span>=<span class="string">"showPwd"</span> <span class="attr">v-model</span>=<span class="string">"pwd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">maxlength</span>=<span class="string">"8"</span> <span class="attr">placeholder</span>=<span class="string">"密码"</span> <span class="attr">v-else</span> <span class="attr">v-model</span>=<span class="string">"pwd"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>为滑块区域添加点击监听，用来切换showPwd的值</p></li><li><p>同时切换滑块的各种样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"switch_button"</span> <span class="attr">:class</span>=<span class="string">"showPwd?'on':'off'"</span> @<span class="attr">click</span>=<span class="string">"showPwd=!showPwd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"switch_circle"</span> <span class="attr">:class</span>=<span class="string">"&#123;right: showPwd&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"switch_text"</span>&gt;</span>&#123;&#123;showPwd ? 'abc' : '...'&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>添加必要的style</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="selector-class">.switch_circle</span></span><br><span class="line">...</span><br><span class="line">&amp;<span class="selector-class">.right</span></span><br><span class="line">    <span class="attribute">transform</span> translateX(30px)</span><br></pre></td></tr></table></figure></li></ul><h3 id="13-6-效果五：前台表单验证"><a href="#13-6-效果五：前台表单验证" class="headerlink" title="13.6 效果五：前台表单验证"></a>13.6 效果五：前台表单验证</h3><ol><li><p>首先阻止点击登录button的默认提交表单事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span> = <span class="string">"login"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在methods里定义login方法并收集表单数据(即为未使用v-model绑定data的input添加data)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        name: <span class="string">''</span>, <span class="comment">// 用户名</span></span><br><span class="line">        code: <span class="string">''</span>, <span class="comment">// 短信验证码</span></span><br><span class="line">        captcha: <span class="string">''</span>, <span class="comment">// 图形验证码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在login里根据不同的登录方式对收集的数据进行检查</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.loginWay) &#123;  <span class="comment">// 短信登陆</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">this</span>.rightPhone) &#123;</span><br><span class="line"><span class="comment">// 手机号不正确</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(!<span class="regexp">/^\d&#123;6&#125;$/</span>.test(code)) &#123;</span><br><span class="line">        <span class="comment">// 验证必须是6位数字</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;<span class="comment">// 密码登陆</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>要将验证失败的提示信息显示出来，可以使用自定义AlertTip弹窗组件(开发中可以用第三方插件)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> AlertTip <span class="keyword">from</span> <span class="string">'../../components/AlertTip/AlertTip.vue'</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">...</span><br><span class="line">components: &#123;</span><br><span class="line">    AlertTip</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>为AlertTip定义状态数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        alertText: <span class="string">''</span>, <span class="comment">// 提示文本</span></span><br><span class="line">        alertShow: <span class="literal">false</span>, <span class="comment">// 是否显示警告框</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在页面中放置弹窗组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">...</span><br><span class="line">    <span class="tag">&lt;<span class="name">AlertTip</span> <span class="attr">:alertText</span>=<span class="string">"alertText"</span> <span class="attr">v-show</span>=<span class="string">"alertShow"</span> @<span class="attr">closeTip</span>=<span class="string">"closeTip"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>抽取显示弹窗和关闭弹窗的方法，并在login方法和AlertTip中使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">showAlert (alertText) &#123;</span><br><span class="line"><span class="keyword">this</span>.alertShow = <span class="literal">true</span></span><br><span class="line"><span class="keyword">this</span>.alertText = alertText</span><br><span class="line">&#125;,</span><br><span class="line">closeTip () &#123;</span><br><span class="line"><span class="keyword">this</span>.alertShow = <span class="literal">false</span></span><br><span class="line"><span class="keyword">this</span>.alertText = <span class="string">''</span></span><br><span class="line">&#125;,</span><br><span class="line">login () &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.loginWay) &#123;  <span class="comment">// 短信登陆</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">this</span>.rightPhone) &#123;</span><br><span class="line"><span class="comment">// 手机号不正确</span></span><br><span class="line">            <span class="keyword">this</span>.showAlert(<span class="string">'手机号不正确'</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(!<span class="regexp">/^\d&#123;6&#125;$/</span>.test(code)) &#123;</span><br><span class="line">        <span class="keyword">this</span>.showAlert(<span class="string">'验证必须是6位数字'</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="13-7-功能一：图形验证码"><a href="#13-7-功能一：图形验证码" class="headerlink" title="13.7 功能一：图形验证码"></a>13.7 功能一：图形验证码</h3><ul><li><p>根据API文档，动态一次性图形验证码的接口为<code>http://localhost:4000/captcha</code></p></li><li><p>同时为这个img添加点击事件，让其可以点击重新发送请求，刷新图片</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"get_verification"</span> <span class="attr">src</span>=<span class="string">"http://localhost:4000/captcha"</span> <span class="attr">alt</span>=<span class="string">"captcha"</span> @<span class="attr">click</span>=<span class="string">"getCaptcha"</span> <span class="attr">ref</span>=<span class="string">"captcha"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>为这个img元素添加ref属性，方便在getCaptcha中使用</p></li><li><p>利用时间戳使其每次加载时的请求参数不一样</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">getCaptcha () &#123;</span><br><span class="line"><span class="comment">// 每次指定的src要不一样</span></span><br><span class="line">    <span class="keyword">this</span>.$refs.captcha.src = <span class="string">'http://localhost:4000/captcha?time='</span>+<span class="built_in">Date</span>.now()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="13-8-功能二：短信验证码"><a href="#13-8-功能二：短信验证码" class="headerlink" title="13.8 功能二：短信验证码"></a>13.8 功能二：短信验证码</h3><ul><li><p>利用第三方短信验证码平台(容联云通讯)提供的接口来实现</p></li><li><p>先在服务端项目将自己的sid与token填入util文件夹下的sms_util.js文件</p></li><li><p>再在客户端的登录组件中引入接口请求函数(这是为了方便处理，同样也可以在action里调用)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;reqSendCode, reqSmsLogin, reqPwdLogin&#125; <span class="keyword">from</span> <span class="string">'../../api'</span></span><br></pre></td></tr></table></figure></li><li><p>在getCode方法里进行调用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 请求返回的是promise对象，所以用到了async await</span></span><br><span class="line"><span class="keyword">async</span> getCode () &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// 发送ajax请求(向指定手机号发送验证码短信) </span></span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> reqSendCode(<span class="keyword">this</span>.phone)</span><br><span class="line">    <span class="keyword">if</span>(result.code===<span class="number">1</span>) &#123; <span class="comment">// 手机号验证失败</span></span><br><span class="line">    <span class="comment">// 显示提示</span></span><br><span class="line">        <span class="keyword">this</span>.showAlert(result.msg)</span><br><span class="line">        <span class="comment">// 停止计时</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.computeTime) &#123;</span><br><span class="line">        <span class="keyword">this</span>.computeTime = <span class="number">0</span></span><br><span class="line">            clearInterval(<span class="keyword">this</span>.intervalId)</span><br><span class="line">            <span class="keyword">this</span>.intervalId = <span class="literal">undefined</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 只要手机号填写正确 短信验证码也可以在服务端的控制台中查看</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="13-9-功能三：短信与密码登录"><a href="#13-9-功能三：短信与密码登录" class="headerlink" title="13.9 功能三：短信与密码登录"></a>13.9 功能三：短信与密码登录</h3><ul><li><p>在login方法里完成短信和密码登录的aiax请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> login () &#123;</span><br><span class="line">    <span class="keyword">let</span> result <span class="comment">// 保存登录成功后返回的数据</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// 发送ajax请求短信登陆</span></span><br><span class="line">    result = <span class="keyword">await</span> reqSmsLogin(phone, code)</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// 发送ajax请求密码登陆</span></span><br><span class="line">    result = <span class="keyword">await</span> reqPwdLogin(&#123;name, pwd, captcha&#125;)</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>点击登录发送请求的同时停止计时器，然后将请求的结果进行处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> ...</span><br><span class="line"><span class="comment">// 停止计时</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.computeTime) &#123;</span><br><span class="line"><span class="keyword">this</span>.computeTime = <span class="number">0</span></span><br><span class="line">    clearInterval(<span class="keyword">this</span>.intervalId)</span><br><span class="line">    <span class="keyword">this</span>.intervalId = <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 根据结果数据处理</span></span><br><span class="line"><span class="keyword">if</span>(result.code===<span class="number">0</span>) &#123; <span class="comment">// 成功</span></span><br><span class="line"><span class="keyword">const</span> user = result.data</span><br><span class="line"> <span class="comment">// 将user信息保存到vuex的state</span></span><br><span class="line">    <span class="comment">// todo</span></span><br><span class="line">    <span class="comment">// 去个人中心界面</span></span><br><span class="line">    <span class="keyword">this</span>.$router.replace(<span class="string">'/profile'</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 显示新的图片验证码</span></span><br><span class="line">    <span class="keyword">this</span>.getCaptcha()</span><br><span class="line">    <span class="comment">// 显示警告提示</span></span><br><span class="line">    <span class="keyword">const</span> msg = result.msg</span><br><span class="line">    <span class="keyword">this</span>.showAlert(msg)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试用的用户名: abc，密码: 123。</p></li></ul><h3 id="13-10-功能四：获取用户信息-实现自动登陆"><a href="#13-10-功能四：获取用户信息-实现自动登陆" class="headerlink" title="13.10 功能四：获取用户信息,实现自动登陆"></a>13.10 功能四：获取用户信息,实现自动登陆</h3><p><strong>1. 将用户信息保存到vuex</strong></p><ol><li><p>在state中添加用户信息的状态数据userInfo</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userInfo: &#123;&#125; <span class="comment">// 用户信息</span></span><br></pre></td></tr></table></figure></li><li><p>在mutation-types中定义常量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> RECEIVE_USER_INFO = <span class="string">'receive_user_info'</span> <span class="comment">// 接收用户信息</span></span><br></pre></td></tr></table></figure></li><li><p>在mutations文件中增加改变state的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//先import引入RECEIVE_USER_INFO</span></span><br><span class="line">  [RECEIVE_USER_INFO] (state, &#123;userInfo&#125;) &#123;</span><br><span class="line">  state.userInfo = userInfo</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在actions文件中增加同步用户信息的方法</p><ul><li>因为之前已经异步获取了用户信息，所以这里将用户信息state更新的操作是同步的</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要先引入RECEIVE_USER_INFO这个mutation</span></span><br><span class="line"><span class="comment">// 同步记录用户信息 </span></span><br><span class="line">  recordUser (&#123;commit&#125;, userInfo) &#123;</span><br><span class="line">    commit(RECEIVE_USER_INFO, &#123;userInfo&#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>在Login组件中调用这个action</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将user保存到vuex的state</span></span><br><span class="line"><span class="keyword">this</span>.$store.dispatch(<span class="string">'recordUser'</span>,user)</span><br></pre></td></tr></table></figure></li><li><p>之后可以在个人中心Profile页面读取并显示用户信息userInfo</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;mapState&#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line">...</span><br><span class="line">computed: &#123;</span><br><span class="line">    ...mapState([<span class="string">'userInfo'</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"user-info-top"</span>&gt;</span>&#123;&#123;userInfo.name || '登录/注册'&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p><strong>2. 更新登录后的个人中心界面</strong></p><ul><li><p>使用用户名和密码登录时显示用户名和绑定的手机号信息</p></li><li><p>使用手机号登录时只需要显示手机号</p></li><li><p>根据用户是否登录来定义a标签不同的路由</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--userinfo路由对应的页面暂时未做--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"userInfo._id ? '/userinfo': '/login'"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"user-info"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"user-info-top"</span> <span class="attr">v-if</span>=<span class="string">"!userInfo.phone"</span> &gt;</span>&#123;&#123;userInfo.name || '登录/注册'&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-mobile-number"</span>&gt;</span>&#123;&#123;userInfo.phone || '暂无绑定手机号'&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>同时要注意首页Msite顶部的信息也要进行更改</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">class</span>=<span class="string">"header_login"</span> <span class="attr">slot</span>=<span class="string">"right"</span> <span class="attr">:to</span>=<span class="string">"userInfo._id ? '/userinfo': '/login'"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"header_login_text"</span> <span class="attr">v-if</span>=<span class="string">"!userInfo._id"</span>&gt;</span></span><br><span class="line">          登录|注册</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--如果已经登录则显示一个icon--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"header_login_text"</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-yonghuming"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>3. 完成自动登录功能</strong></p><ul><li><p>服务器端的routes文件夹下的index.js中已经定义了返回用户信息的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 其中她将用户的userid取出来放入一个session会话中</span></span><br><span class="line">router.get(<span class="string">'/userinfo'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 取出userid</span></span><br><span class="line">  <span class="keyword">const</span> userid = req.session.userid</span><br><span class="line">  <span class="comment">// 查询</span></span><br><span class="line">  UserModel.findOne(&#123;<span class="attr">_id</span>: userid&#125;, _filter, <span class="function"><span class="keyword">function</span> (<span class="params">err, user</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 如果没有, 返回错误提示</span></span><br><span class="line">    <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">      <span class="comment">// 清除浏览器保存的userid的cookie</span></span><br><span class="line">      <span class="keyword">delete</span> req.session.userid</span><br><span class="line"></span><br><span class="line">      res.send(&#123;<span class="attr">code</span>: <span class="number">1</span>, <span class="attr">msg</span>: <span class="string">'请先登陆'</span>&#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 如果有, 返回user</span></span><br><span class="line">      res.send(&#123;<span class="attr">code</span>: <span class="number">0</span>, <span class="attr">data</span>: user&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>app.js中已经定义了这个用户登录的session会话的维持时间为24h</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.use(session(&#123;</span><br><span class="line">  secret: <span class="string">'12345'</span>,</span><br><span class="line">  cookie: &#123;<span class="attr">maxAge</span>: <span class="number">1000</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span> &#125;,  <span class="comment">//设置maxAge是80000ms，即80s后session和相应的cookie失效过期</span></span><br><span class="line">  resave: <span class="literal">false</span>,</span><br><span class="line">  saveUninitialized: <span class="literal">true</span>,</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure></li><li><p>api中的对应接口已经完成</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取用户信息(根据会话)</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqUserInfo = <span class="function"><span class="params">()</span> =&gt;</span> ajax(BASE_URL + <span class="string">'/userinfo'</span>)</span><br></pre></td></tr></table></figure></li><li><p>在action中定义一个方法来调用这个接口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 异步获取用户信息(先引入reqUserInfo接口)</span></span><br><span class="line"><span class="keyword">async</span> getUserInfo (&#123;commit&#125;) &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> reqUserInfo()</span><br><span class="line">    <span class="keyword">if</span> (result.code === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> userInfo = result.data</span><br><span class="line">      commit(RECEIVE_USER_INFO, &#123;userInfo&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>最后在App.vue中引入action并触发</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> mounted () &#123;</span><br><span class="line">...</span><br><span class="line">    <span class="comment">// this.getAddress()</span></span><br><span class="line">    <span class="keyword">this</span>.getUserInfo()</span><br><span class="line">  &#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">    ...mapActions([<span class="string">'getUserInfo'</span>])</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="13-11-功能五：退出登录"><a href="#13-11-功能五：退出登录" class="headerlink" title="13.11 功能五：退出登录"></a>13.11 功能五：退出登录</h3><ul><li><p>用户登录后在个人中心页面添加一个退出登录的按钮</p></li><li><p>下载安装mint-ui来实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 安装mint-ui</span><br><span class="line">npm install --save mint-ui</span><br></pre></td></tr></table></figure></li><li><p>实现自动按需打包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 安装工具包</span><br><span class="line">npm install --save-dev babel-pulgin-component</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置</span></span><br><span class="line"><span class="string">"plugins"</span>: [<span class="string">"transform-runtime"</span>,[<span class="string">"component"</span>, [</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"libraryName"</span>: <span class="string">"mint-ui"</span>,</span><br><span class="line"><span class="string">"style"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">]]]</span><br></pre></td></tr></table></figure></li><li><p>引入并注册使用mint-ui的标签组件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在入口的main.js引入Button</span></span><br><span class="line"><span class="keyword">import</span> &#123;Button&#125; <span class="keyword">from</span> <span class="string">'mint-ui'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册全局组件</span></span><br><span class="line">Vue.component(Button.name, Button)</span><br></pre></td></tr></table></figure></li><li><p>在Profile页面中使用mint-ui的标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"profile_my_order border-1px"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--只有用户登录之后才会显示 同时绑定点击事件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mt-button</span> <span class="attr">type</span>=<span class="string">"danger"</span> <span class="attr">style</span>=<span class="string">"width: 100%"</span> <span class="attr">v-if</span>=<span class="string">"userInfo._id"</span> @<span class="attr">click</span>=<span class="string">"logout"</span>&gt;</span>退出登录<span class="tag">&lt;/<span class="name">mt-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>引入mint-ui的confirm确认和toast文本提示框</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; MessageBox, Toast &#125; <span class="keyword">from</span> <span class="string">'mint-ui'</span></span><br><span class="line"></span><br><span class="line">logout () &#123;</span><br><span class="line">MessageBox.confirm(<span class="string">'确认退出吗?'</span>).then(</span><br><span class="line">action =&gt; &#123;</span><br><span class="line">         <span class="comment">// 请求退出</span></span><br><span class="line">         <span class="keyword">this</span>.$store.dispatch(<span class="string">'logout'</span>)</span><br><span class="line">         Toast(<span class="string">'登出完成'</span>)</span><br><span class="line">         &#125;,</span><br><span class="line">action =&gt; &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'取消登录'</span>)</span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在actions.js中定义退出登录的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 首先引入api的index.js中定义的reqLogout接口和mutation</span></span><br><span class="line"><span class="comment">// 异步登出</span></span><br><span class="line"><span class="keyword">async</span> logout (&#123;commit&#125;) &#123;</span><br><span class="line"><span class="keyword">const</span> result = <span class="keyword">await</span> reqLogout()</span><br><span class="line"><span class="keyword">if</span> (result.code === <span class="number">0</span>) &#123; commit(RESET_USER_INFO)&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//同时改动下列两个文件</span></span><br><span class="line"><span class="comment">//mutations-types文件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> RESET_USER_INFO = <span class="string">'receive_user_info'</span> <span class="comment">// 重置用户信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//mutations文件</span></span><br><span class="line">[RESET_USER_INFO] (state) &#123;</span><br><span class="line">    state.userInfo = &#123;&#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="14-商家店铺界面"><a href="#14-商家店铺界面" class="headerlink" title="14. 商家店铺界面"></a>14. 商家店铺界面</h2><h3 id="14-1-商家店铺的整体页面搭建"><a href="#14-1-商家店铺的整体页面搭建" class="headerlink" title="14.1 商家店铺的整体页面搭建"></a>14.1 商家店铺的整体页面搭建</h3><blockquote><p>通过点击商家列表(ShopList)里的某一项进入商家店铺的一级路由界面(Shop.vue)，商家店铺界面包括顶部的一个头部的一般组件(ShopHeader.vue)和下面三个可以切换的路由子组件(ShopGoods、ShopInfo、ShopRatings)</p></blockquote><ol><li><p>在router文件夹下的index.js文件中将路由组件注册成路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">path: <span class="string">'/shop'</span>,</span><br><span class="line">component: Shop,</span><br><span class="line">children: [&#123;</span><br><span class="line">path: <span class="string">'/shop/goods'</span>,</span><br><span class="line">component: ShopGoods</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">        path: <span class="string">'/shop/ratings'</span>,</span><br><span class="line">        component: ShopRatings</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">path: <span class="string">'/shop/info'</span>,</span><br><span class="line">        component: ShopInfo</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">        path: <span class="string">''</span>,</span><br><span class="line">        redirect: <span class="string">'/shop/goods'</span></span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在ShopList.vue中为商家列表添加点击事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"shop_list"</span> <span class="attr">v-if</span>=<span class="string">"shops.length"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"shop_li border-1px"</span> <span class="attr">v-for</span>=<span class="string">"(shop,index) in shops"</span> <span class="attr">:key</span>=<span class="string">"index"</span> @<span class="attr">click</span>=<span class="string">"$router.push('/shop')"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Shop.vue中引入各路由组件然后在模版中使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ShopHeader</span>&gt;</span><span class="tag">&lt;/<span class="name">ShopHeader</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 使用replace的方式进行路由切换 （路由懒加载） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/shop/goods"</span> <span class="attr">replace</span>&gt;</span>点餐<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/shop/ratings"</span> <span class="attr">replace</span>&gt;</span>评价<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/shop/info"</span> <span class="attr">replace</span>&gt;</span>商家<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存路由组件对象 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-view</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="14-2-Json模拟数据"><a href="#14-2-Json模拟数据" class="headerlink" title="14.2 Json模拟数据"></a>14.2 Json模拟数据</h3><p><strong>设计json数据的结构</strong></p><blockquote><p>商家店铺界面包括点餐、评价、和商家信息三个部分的数据(头部显示的数据也是商家信息)，而且这三个方面的数据直接没有顺序关系，可以使用对象结构来存储它们。</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 点餐数据里包括各种不同分类的食品，可以用数组goods[]来存放这些数据对象(没有顺序关系但属于同一类型)</span><br><span class="line">// 每一类食品除了分类名称name还有一个foods数据来存放这一类的食品</span><br><span class="line">// foods数组内的每个对象都是一个食品实例</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"goods"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            name: "精选套餐",</span><br><span class="line">            foods: [</span><br><span class="line">                &#123;</span><br><span class="line">                    name: "南瓜粥",</span><br><span class="line">                    price: 9</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    "ratings":[</span><br><span class="line">        &#123;&#125;</span><br><span class="line">    ],</span><br><span class="line">    "info":｛｝</span><br><span class="line">&#125;</span><br><span class="line">// 评价数据都属于同一类型，可以使用数组来存放[&#123;评价一&#125;,&#123;评价二&#125;..]</span><br><span class="line">// 商家信息数据没有顺序，可以统一保存到对象内</span><br></pre></td></tr></table></figure><ul><li>将设计好的data.json模拟数据保存在mock文件夹内</li></ul><p><strong>使用mockjs模拟数据接口</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save mockjs</span><br></pre></td></tr></table></figure><ul><li>在mock文件夹下定义mockServer文件配置mock模拟数据的接口</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">使用mockjs提供mock数据接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> Mock <span class="keyword">from</span> <span class="string">'mockjs'</span></span><br><span class="line"><span class="keyword">import</span> data <span class="keyword">from</span> <span class="string">'./data.json'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回goods的接口</span></span><br><span class="line">Mock.mock(<span class="string">'/goods'</span>, &#123;<span class="attr">code</span>: <span class="number">0</span>, <span class="attr">data</span>: data.goods&#125;)</span><br><span class="line"><span class="comment">// 返回ratings的接口</span></span><br><span class="line">Mock.mock(<span class="string">'/ratings'</span>, &#123;<span class="attr">code</span>: <span class="number">0</span>, <span class="attr">data</span>: data.ratings&#125;)</span><br><span class="line"><span class="comment">// 返回info的接口</span></span><br><span class="line">Mock.mock(<span class="string">'/info'</span>, &#123;<span class="attr">code</span>: <span class="number">0</span>, <span class="attr">data</span>: data.info&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// export default ???  不需要向外暴露任何数据, 只需要保存能执行即可</span></span><br></pre></td></tr></table></figure><ul><li><p>在main.js中加载mockServer文件即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'./mock/mockServer.js'</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>ajax请求mockjs模拟的数据</strong></p><ol><li><p>api/index.js中定义ajax请求方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 获取商家信息(下列请求由mock拦截并返回 不需要代理)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqShopInfo = <span class="function"><span class="params">()</span> =&gt;</span> ajax(<span class="string">'/info'</span>)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取商家评价数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqShopRatings = <span class="function"><span class="params">()</span> =&gt;</span> ajax(<span class="string">'/ratings'</span>)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取商家商品数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqShopGoods = <span class="function"><span class="params">()</span> =&gt;</span> ajax(<span class="string">'/goods'</span>)</span><br></pre></td></tr></table></figure></li><li><p>再写一套用来管理从后台接收到的数据vuex配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. state</span></span><br><span class="line">goods: [], <span class="comment">// 商品列表</span></span><br><span class="line">ratings: [], <span class="comment">// 商家评价列表</span></span><br><span class="line">info: &#123;&#125; <span class="comment">// 商家信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. mutations-type</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> RECEIVE_GOODS = <span class="string">'receive_goods'</span> <span class="comment">// 接收商品数组</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> RECEIVE_RATINGS = <span class="string">'receive_ratings'</span> <span class="comment">// 接收商家评价数组</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> RECEIVE_INFO = <span class="string">'receive_info'</span> <span class="comment">// 接收商家信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. mutations</span></span><br><span class="line">[RECEIVE_INFO] (state, &#123;info&#125;) &#123;</span><br><span class="line">  state.info = info</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">[RECEIVE_RATINGS] (state, &#123;ratings&#125;) &#123;</span><br><span class="line">  state.ratings = ratings</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">[RECEIVE_GOODS] (state, &#123;goods&#125;) &#123;</span><br><span class="line">  state.goods = goods</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. action</span></span><br><span class="line"><span class="comment">// 异步获取商家信息</span></span><br><span class="line">  <span class="keyword">async</span> getShopInfo (&#123;commit&#125;) &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> reqShopInfo()</span><br><span class="line">    <span class="keyword">if</span> (result.code === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> info = result.data</span><br><span class="line">      commit(RECEIVE_INFO, &#123;info&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 异步获取商家评价列表</span></span><br><span class="line">  <span class="keyword">async</span> getShopRatings (&#123;commit&#125;) &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> reqShopRatings()</span><br><span class="line">    <span class="keyword">if</span> (result.code === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> ratings = result.data</span><br><span class="line">      commit(RECEIVE_RATINGS, &#123;ratings&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 异步获取商家商品列表</span></span><br><span class="line">  <span class="keyword">async</span> getShopGoods (&#123;commit&#125;) &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> reqShopGoods()</span><br><span class="line">    <span class="keyword">if</span> (result.code === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> goods = result.data</span><br><span class="line">      commit(RECEIVE_GOODS, &#123;goods&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>在shop.vue中测试获取商家信息数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可以在控制台的vuex中查看到info数据</span></span><br><span class="line">mounted () &#123;</span><br><span class="line"><span class="keyword">this</span>.$store.dispatch(<span class="string">'getShopInfo'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="14-3-ShopHeader模板"><a href="#14-3-ShopHeader模板" class="headerlink" title="14.3 ShopHeader模板"></a>14.3 ShopHeader模板</h3><ul><li><p>已经可以获取到mock的模拟数据，接下来开始修改商家界面的头部模板</p></li><li><p>修改完模版和样式代码，然后读取vuex里的数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;mapState&#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  computed: &#123;</span><br><span class="line">      ...mapState([<span class="string">'info'</span>])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>并将info里的数据渲染到模版中，其中有几点需要注意</p><ol><li><p>为nav动态绑定背景style(删除原来的样式里的背景图片)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:style="&#123;backgroundImage: `url($&#123;info.bgImg&#125;)`&#125;"</span><br></pre></td></tr></table></figure></li><li><p>在style里定义三种不同颜色的优惠活动的类名并放进数组，然后把它们和info.supports.type关联起来</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="comment">// 注意顺序要与info的type对应</span></span><br><span class="line">    supportClasses: [<span class="string">'activity-green'</span>, <span class="string">'activity-red'</span>, <span class="string">'activity-orange'</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"activity"</span> <span class="attr">:class</span>=<span class="string">"supportClasses[info.supports[0].type]"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样写会报一个错误<code>Error in render: &quot;TypeError: Cannot read property &#39;0&#39; of undefined&quot;</code>因为vuex的数据是异步的，而页面刚加载时info为空对象，info.supports不存在，为undefined。所以再取它下标为0的值会报这个错误。(二级表达式info.bgImg并不会报错)</p><p>使用v-if来避免没有数据时也会解析模版</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"shop-header-discounts"</span> <span class="attr">v-if</span>=<span class="string">"info.supports"</span> @<span class="attr">click</span>=<span class="string">"toggleSupportShow"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>利用shopShow和supportShow来标识模态框和优惠活动列表是否显示，同时定义切换显隐的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">      ...</span><br><span class="line">shopShow: <span class="literal">false</span>,</span><br><span class="line">supportShow: <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;，</span><br><span class="line">methods: &#123;</span><br><span class="line">  toggleShopShow () &#123;</span><br><span class="line">    <span class="keyword">this</span>.shopShow = !<span class="keyword">this</span>.shopShow</span><br><span class="line">  &#125;,</span><br><span class="line">  toggleSupportShow () &#123;</span><br><span class="line">    <span class="keyword">this</span>.supportShow = !<span class="keyword">this</span>.supportShow</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>可以为弹窗添加一个transition动画(activity-sheet一样)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">"fade"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"shop-brief-modal"</span> <span class="attr">v-show</span>=<span class="string">"shopShow"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后找到shop-brief-modal的样式 添加动画过程</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&amp;<span class="selector-class">.fade-enter-active</span>, &amp;<span class="selector-class">.fade-leave-active</span> &#123;</span><br><span class="line"><span class="attribute">transition</span>: opacity <span class="number">0.5s</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&amp;<span class="selector-class">.fade-enter</span>, &amp;<span class="selector-class">.fade-leave-to</span> &#123;</span><br><span class="line"><span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ol></li></ul><h3 id="14-4-异步显示ShopGoods数据"><a href="#14-4-异步显示ShopGoods数据" class="headerlink" title="14.4 异步显示ShopGoods数据"></a>14.4 异步显示ShopGoods数据</h3><blockquote><p>完成了头部的ShopHeader，接下来是点餐部分的ShopGoods组件。此组件是一个比较复杂的路由组件，主要包含了3个部分：ShopCart组件（底部的购物车）、CartControl组件（购物车里的加减商品按钮组件）、Food组件（点击商品图片查看详细信息的弹窗）</p><p>另外还使用了第三方库 better-scroll: 处理UI 滑动</p></blockquote><ul><li><p>左右结构的模版布局</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"goods"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 左侧的菜单选项--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"menu-wrapper"</span> <span class="attr">ref</span>=<span class="string">"menuWrapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 菜单对应的是食物分类列表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>折扣<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>优惠<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>爽口凉菜<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>...<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 右侧的食物列表--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"foods-wrapper"</span> <span class="attr">ref</span>=<span class="string">"foodsWrapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 右侧的食物列表是根据左侧的分类列表展现的--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 所以右侧是在一个分类标题列表里面嵌套着各类食物列表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"food-list-hook"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>折扣<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span>&gt;</span>南瓜粥<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">li</span>&gt;</span>红豆薏米美肤粥<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"food-list-hook"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>优惠<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">li</span>&gt;</span>红枣山药<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">li</span>&gt;</span>...<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>其他分类...<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>请求并读取数据进行模版渲染</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;mapState&#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    <span class="comment">// 使用 axios 请求 mockjs 提供的接口</span></span><br><span class="line">    <span class="keyword">this</span>.$store.dispatch(<span class="string">'getShopGoods'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapState([<span class="string">'goods'</span>])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"menu-item"</span> <span class="attr">v-for</span>=<span class="string">"(good, index) in goods"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"text bottom-border-1px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"icon"</span> <span class="attr">:src</span>=<span class="string">"good.icon"</span> <span class="attr">v-if</span>=<span class="string">"good.icon"</span>&gt;</span></span><br><span class="line">    &#123;&#123;good.name&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 右侧的模版渲染同上--&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="14-5-完成用户交互功能"><a href="#14-5-完成用户交互功能" class="headerlink" title="14.5 完成用户交互功能"></a>14.5 完成用户交互功能</h3><ol><li>修改当前食品分类的样式</li><li>当滑动右侧食品列表时，更新左侧的当前分类</li><li>点击左侧某个分类，右侧列表滑动到指定位置</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--current是标识当前分类的class 而它的值应该是一个计算后的布尔值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"menu-item"</span> <span class="attr">:class</span>=<span class="string">"&#123;current: index===currentIndex&#125;"</span> &gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>设计计算属性：currentIndex</p><p>根据哪些数据来进行计算？</p><p>既然要实现左右两侧的联动，那么首先要获取一些位置信息。</p><pre><code>scrollY: 右侧食品列表滑动的Y轴坐标（滑动过程中实时变化）tops: 所有右侧分类标题到屏幕顶部的距离，即li的top值组成的数组    （列表第一次显示后就不再变化）</code></pre><ol><li>在滑动过程中，实时收集scrollY</li><li>列表第一次显示后，收集tops</li><li>实现currentIndex的计算逻辑</li></ol></blockquote><ul><li><p>使用better-scroll实现回弹滑动</p><p><code>npm install --save better-scroll</code></p><p><a href="https://ustbhuangyi.github.io/better-scroll/#/zh" target="_blank" rel="noopener">中文官网</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> BScroll <span class="keyword">from</span> <span class="string">'better-scroll'</span></span><br><span class="line"><span class="comment">// 要考虑列表显示之后创建BScroll实例的时机</span></span><br><span class="line"><span class="comment">//（参考12.2解决swiper的bug，之前使用watch和nextTick来监听数据更新）</span></span><br><span class="line"><span class="comment">// 这里使用另一种方法 通过action的回调函数来通知组件数据已经更新</span></span><br><span class="line">mounted() &#123;</span><br><span class="line">    <span class="keyword">this</span>.$store.dispatch(<span class="string">'getShopGoods'</span>, () =&gt; &#123;<span class="comment">// 数据更新后执行</span></span><br><span class="line">      <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 列表数据更新显示后执行</span></span><br><span class="line">        <span class="keyword">new</span> BScroll(<span class="string">'.menu-wrapper'</span>, &#123;</span><br><span class="line">          click: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">new</span> BScroll(<span class="string">'.foods-wrapper'</span>, &#123;</span><br><span class="line">          click: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//同时也要修改getShopGoods这个action</span></span><br><span class="line"><span class="comment">// 异步获取商家商品列表</span></span><br><span class="line"><span class="keyword">async</span> getShopGoods (&#123;commit&#125;, callback) &#123;</span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> reqShopGoods()</span><br><span class="line">  <span class="keyword">if</span> (result.code === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> goods = result.data</span><br><span class="line">    commit(RECEIVE_GOODS, &#123;goods&#125;)</span><br><span class="line">    <span class="comment">// 数据更新了, 通知一下组件</span></span><br><span class="line">    callback &amp;&amp; callback()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>收集scrollY和tops</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要收集滚动的数据，那么就要利用betterScroll对象来监听滚动事件</span></span><br><span class="line"></span><br><span class="line">_initScroll() &#123;</span><br><span class="line"><span class="comment">// 列表显示之后创建</span></span><br><span class="line"><span class="keyword">new</span> BScroll(<span class="string">'.menu-wrapper'</span>, &#123;</span><br><span class="line">click: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br><span class="line">    <span class="comment">// 根据文档配置scroll选项</span></span><br><span class="line"><span class="keyword">this</span>.foodsScroll = <span class="keyword">new</span> BScroll(<span class="string">'.foods-wrapper'</span>, &#123;</span><br><span class="line">probeType: <span class="number">2</span>,  <span class="comment">// 因为惯性滑动不会触发</span></span><br><span class="line">click: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 给右侧列表绑定scroll监听</span></span><br><span class="line"><span class="keyword">this</span>.foodsScroll.on(<span class="string">'scroll'</span>, (&#123;x, y&#125;) =&gt; &#123;</span><br><span class="line"><span class="built_in">console</span>.log(x, y)</span><br><span class="line"><span class="keyword">this</span>.scrollY = <span class="built_in">Math</span>.abs(y)</span><br><span class="line">&#125;)</span><br><span class="line">&#125; <span class="comment">// 将其封装为初始化滚动的方法</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化tops</span></span><br><span class="line">_initTops() &#123;</span><br><span class="line"><span class="comment">// 1. 初始化tops</span></span><br><span class="line"><span class="keyword">const</span> tops = []</span><br><span class="line"><span class="keyword">let</span> top = <span class="number">0</span></span><br><span class="line">     <span class="comment">// 第一个li的top为0</span></span><br><span class="line">tops.push(top)</span><br><span class="line"><span class="comment">// 2. 收集</span></span><br><span class="line"><span class="comment">// 在foods列表下找到所有分类的li</span></span><br><span class="line"><span class="keyword">const</span> lis = <span class="keyword">this</span>.$refs.foodsUl.getElementsByClassName(<span class="string">'food-list-hook'</span>)</span><br><span class="line">     <span class="built_in">Array</span>.prototype.slice.call(lis).forEach(<span class="function"><span class="params">li</span> =&gt;</span> &#123;</span><br><span class="line">     top += li.clientHeight</span><br><span class="line">     tops.push(top)</span><br><span class="line">     &#125;)</span><br><span class="line"></span><br><span class="line">     <span class="comment">// 3. 更新数据</span></span><br><span class="line">     <span class="keyword">this</span>.tops = tops</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>完成计算属性currentIndex的逻辑</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">currentIndex () &#123; <span class="comment">// 初始和相关数据发生了变化</span></span><br><span class="line"><span class="comment">// 得到条件数据</span></span><br><span class="line"><span class="keyword">const</span> &#123;scrollY, tops&#125; = <span class="keyword">this</span></span><br><span class="line"><span class="comment">// 根据条件计算产生一个结果</span></span><br><span class="line"><span class="keyword">const</span> index = tops.findIndex(<span class="function">(<span class="params">top, index</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// scrollY&gt;=当前top &amp;&amp; scrollY&lt;下一个top</span></span><br><span class="line"><span class="keyword">return</span> scrollY &gt;= top &amp;&amp; scrollY &lt; tops[index + <span class="number">1</span>]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 返回结果(也就是当前的scrollY值属于第几个li区间)</span></span><br><span class="line"><span class="keyword">return</span> index</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 此时可以实现滑动右侧列表更新左侧当前分类</span></span><br><span class="line"><span class="comment">// 但如果快速滑动则会出现因为惯性滑动不能正确收集scrollY值的bug</span></span><br><span class="line"><span class="comment">// 解决方法一：将probeType的值改为3 但如果不想实现监听惯性滑动触发大量事件，则需要计算滑动结束时的scrollY值来确定当前分类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在_initScroll里给右侧列表绑定scroll结束的监听</span></span><br><span class="line"><span class="keyword">this</span>.foodsScroll.on(<span class="string">'scrollEnd'</span>, (&#123;x, y&#125;) =&gt; &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'scrollEnd'</span>, x, y)</span><br><span class="line"><span class="keyword">this</span>.scrollY = <span class="built_in">Math</span>.abs(y)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>实现点击左侧分类滑动右侧食物列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--首先为li绑定click事件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"menu-item"</span> <span class="attr">:class</span>=<span class="string">"&#123;current: index===currentIndex&#125;"</span> @<span class="attr">click</span>=<span class="string">"clickMenuItem(index)"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">clickMenuItem (index) &#123;</span><br><span class="line"><span class="comment">// 得到目标位置的scrollY</span></span><br><span class="line"><span class="keyword">const</span> scrollY = <span class="keyword">this</span>.tops[index]</span><br><span class="line"><span class="comment">// 立即更新scrollY(让点击的分类项成为当前分类)</span></span><br><span class="line"><span class="keyword">this</span>.scrollY = scrollY</span><br><span class="line"><span class="comment">// 平滑滑动右侧列表 better-scroll里的方法</span></span><br><span class="line"><span class="keyword">this</span>.foodsScroll.scrollTo(<span class="number">0</span>, -scrollY, <span class="number">300</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="14-6-CartControl组件"><a href="#14-6-CartControl组件" class="headerlink" title="14.6 CartControl组件"></a>14.6 CartControl组件</h3><ul><li><p>完成加减选购食物的组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cartcontrol"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 有一个动画--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">"move"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"iconfont icon-remove_circle_outline"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cart-count"</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"iconfont icon-add_circle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>分析该组件接收的props</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 组件里更改的数据分别对应每一种食物，所以不应该是简单的Number类型的count，而应该是food对象（该组件为其添加food.count属性）</span></span><br><span class="line">props: &#123;</span><br><span class="line">      food: <span class="built_in">Object</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="comment">// 为加减按钮绑定的点击事件</span></span><br><span class="line">methods: &#123;</span><br><span class="line">      updateFoodCount (isAdd) &#123;</span><br><span class="line">        <span class="comment">// 这里不能直接处理food.count因为food是在good里的数据对象</span></span><br><span class="line">        <span class="comment">// 应该通过vuex触发action来管理数据 并把当前的food对象参数传递过去</span></span><br><span class="line">        <span class="keyword">this</span>.$store.dispatch(<span class="string">'updateFoodCount'</span>, &#123;isAdd, <span class="attr">food</span>: <span class="keyword">this</span>.food&#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>为food添加一个新的绑定数据count</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//省略mutation-types里定义常量的过程</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// action中同步更新food中的count值</span></span><br><span class="line">  updateFoodCount (&#123;commit&#125;, &#123;isAdd, food&#125;) &#123;</span><br><span class="line">    <span class="keyword">if</span> (isAdd) &#123;</span><br><span class="line">      commit(INCREMENT_FOOD_COUNT, &#123;food&#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      commit(DECREMENT_FOOD_COUNT, &#123;food&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// mutation中更改数据（注意引入vue）</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line">[INCREMENT_FOOD_COUNT] (state, &#123;food&#125;) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!food.count) &#123; <span class="comment">// 第一次增加</span></span><br><span class="line">      <span class="comment">// food.count = 1  // 这样新增的属性没有数据绑定</span></span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">      对象</span></span><br><span class="line"><span class="comment">      属性名</span></span><br><span class="line"><span class="comment">      属性值</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      Vue.set(food, <span class="string">'count'</span>, <span class="number">1</span>) <span class="comment">// 让新增的属性也有数据绑定</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      food.count++</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">[DECREMENT_FOOD_COUNT] (state, &#123;food&#125;) &#123;</span><br><span class="line">    <span class="keyword">if</span> (food.count) &#123; <span class="comment">// 只有有值才去减</span></span><br><span class="line">      food.count--</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="14-7-Food组件"><a href="#14-7-Food组件" class="headerlink" title="14.7 Food组件"></a>14.7 Food组件</h3><ul><li><p>点击某个食品，弹出该Food弹窗组件展示该食品的信息并可将其加入购物车</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">// 要展示食品信息，所以要接收food对象的数据</span></span><br><span class="line">    props: &#123;</span><br><span class="line">      food: <span class="built_in">Object</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    data () &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        isShow: <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    methods: &#123;</span><br><span class="line">      <span class="comment">// Food组件内控制显示Food组件的方法</span></span><br><span class="line">      toggleShow () &#123;</span><br><span class="line">        <span class="keyword">this</span>.isShow = !<span class="keyword">this</span>.isShow</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    components: &#123;</span><br><span class="line">      CartControl</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>在ShopGoods中引用该组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"goods"</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"foods-wrapper"</span>&gt;</span></span><br><span class="line">            ...</span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--为每个食品li添加点击事件 触发显示Food弹窗--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"food-item"</span>  @<span class="attr">click</span>=<span class="string">"showFood(food)"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 该组件与goods同级--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Food</span> <span class="attr">:food</span>=<span class="string">"food"</span> <span class="attr">ref</span>=<span class="string">"food"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意每个li里的CartControl 组件都使用@click.stop 来阻止了事件冒泡，就是为了防止点击加减按钮同时触发弹出Food组件</p></blockquote></li><li><p>同时控制是否显示Food组件(其实可以直接在Food组件上使用v-if，这里是为了练习在父组件中得到子组件对象并调用其方法)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 显示点击的food</span></span><br><span class="line">showFood (food) &#123;</span><br><span class="line">  <span class="comment">// 设置要传递给food组件的数据</span></span><br><span class="line">  <span class="keyword">this</span>.food = food</span><br><span class="line">  <span class="comment">// 显示food组件 (在父组件中调用子组件对象的方法)</span></span><br><span class="line">  <span class="keyword">this</span>.$refs.food.toggleShow()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="14-8-ShopCart组件"><a href="#14-8-ShopCart组件" class="headerlink" title="14.8 ShopCart组件"></a>14.8 ShopCart组件</h3><blockquote><p>购物车组件中存放的都是count大于0的food,这些数据既可以通过vuex来管理，也可以使用computed来动态计算goods里每个food的count来管理。但computed要经过两层的轮询而且还要考虑数据量的问题，所以还是使用vuex来管理这些cartFoods数据的效率更高。</p></blockquote><ul><li>另外要定义几个Getters来设置购物车的一些数据信息</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  totalCount (state) &#123;</span><br><span class="line">    <span class="keyword">return</span> state.cartFoods.reduce(<span class="function">(<span class="params">preTotal, food</span>) =&gt;</span> preTotal + food.count, <span class="number">0</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  totalPrice (state) &#123;</span><br><span class="line">    <span class="keyword">return</span> state.cartFoods.reduce(<span class="function">(<span class="params">preTotal, food</span>) =&gt;</span> preTotal + food.count * food.price, <span class="number">0</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  positiveSize (state) &#123;</span><br><span class="line">    <span class="keyword">return</span> state.ratings.reduce(<span class="function">(<span class="params">preTotal, rating</span>) =&gt;</span> preTotal + (rating.rateType === <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>), <span class="number">0</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">    <span class="comment">// 在购物车中获取到cartFoods的state 以及商家的info</span></span><br><span class="line">...mapState([<span class="string">'cartFoods'</span>, <span class="string">'info'</span>]),</span><br><span class="line"><span class="comment">// 获取相应的Getters里的数据    </span></span><br><span class="line">...mapGetters([<span class="string">'totalCount'</span>, <span class="string">'totalPrice'</span>]),</span><br><span class="line">        </span><br><span class="line">    <span class="comment">// 通过计算已购食品来设置购物车不同的样式和提示文字</span></span><br><span class="line">      payClass () &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;totalPrice&#125; = <span class="keyword">this</span></span><br><span class="line">        <span class="keyword">const</span> &#123;minPrice&#125; = <span class="keyword">this</span>.info</span><br><span class="line">        <span class="keyword">return</span> totalPrice&gt;=minPrice ? <span class="string">'enough'</span> : <span class="string">'not-enough'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      payText () &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;totalPrice&#125; = <span class="keyword">this</span></span><br><span class="line">        <span class="keyword">const</span> &#123;minPrice&#125; = <span class="keyword">this</span>.info</span><br><span class="line">        <span class="keyword">if</span>(totalPrice===<span class="number">0</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">`￥<span class="subst">$&#123;minPrice&#125;</span>元起送`</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(totalPrice&lt;minPrice) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">`还差￥<span class="subst">$&#123;minPrice-totalPrice&#125;</span>元起送`</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">'结算'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">watch: &#123;</span><br><span class="line">    totalCount: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 如果总数量为0, 直接不显示</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.totalCount === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.isShow = <span class="literal">false</span></span><br><span class="line">        <span class="comment">// return false</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    isShow: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.isShow) &#123;</span><br><span class="line">        <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 实现BScroll的实例是一个单例</span></span><br><span class="line">          <span class="keyword">if</span> (!<span class="keyword">this</span>.scroll) &#123;</span><br><span class="line">            <span class="keyword">this</span>.scroll = <span class="keyword">new</span> BScroll(<span class="string">'.list-content'</span>, &#123;</span><br><span class="line">              click: <span class="literal">true</span></span><br><span class="line">            &#125;)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.scroll.refresh() <span class="comment">// 让滚动条刷新一下: 重新统计内容的高度</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.isShow</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：要保证购物车的列表是单例，不然打开多次购物车列表会初始化多个实例，然后再点击会触发多次点击事件。</p></blockquote><ul><li><p>引入mint-ui实现清空购物车的交互</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注意CLEAR_CART的mutation不能仅仅把catFoods数组清空，还要先清空goods里food的count</span></span><br><span class="line">[CLEAR_CART] (state) &#123;</span><br><span class="line">    <span class="comment">// 清除food中的count</span></span><br><span class="line">    state.cartFoods.forEach(<span class="function"><span class="params">food</span> =&gt;</span> &#123; food.count = <span class="number">0</span> &#125;)</span><br><span class="line">    <span class="comment">// 移除购物车中所有购物项</span></span><br><span class="line">    state.cartFoods = []</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="14-9-ShopRatings组件"><a href="#14-9-ShopRatings组件" class="headerlink" title="14.9 ShopRatings组件"></a>14.9 ShopRatings组件</h3><ul><li><p>商家评价组件分为上部的Star评分以及下面的用户评价信息列表</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先在mounted里通过触发action请求ratings数据</span></span><br><span class="line">mounted () &#123;</span><br><span class="line">   <span class="comment">// 为getShopRatings这个action添加回调函数</span></span><br><span class="line">  <span class="keyword">this</span>.$store.dispatch(<span class="string">'getShopRatings'</span>, () =&gt; &#123;</span><br><span class="line">    <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">new</span> BScroll(<span class="keyword">this</span>.$refs.ratings, &#123;</span><br><span class="line">        click: <span class="literal">true</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    onlyShowText: <span class="literal">true</span>, <span class="comment">// 是否只显示有文本的</span></span><br><span class="line">    selectType: <span class="number">2</span> <span class="comment">// 选择的评价类型: 0满意, 1不满意, 2全部</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 在computed里获取info和ratings的State数据以及返回好评数量的Getters</span></span><br><span class="line">computed: &#123;</span><br><span class="line">  ...mapState([<span class="string">'info'</span>, <span class="string">'ratings'</span>]),</span><br><span class="line">  ...mapGetters([<span class="string">'positiveSize'</span>]),</span><br><span class="line">  filterRatings () &#123;</span><br><span class="line">      <span class="comment">// 得到相关的数据</span></span><br><span class="line">    <span class="keyword">const</span> &#123;ratings, onlyShowText, selectType&#125; = <span class="keyword">this</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 产生一个过滤新数组</span></span><br><span class="line">    <span class="keyword">return</span> ratings.filter(<span class="function"><span class="params">rating</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123;rateType, text&#125; = rating</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">          条件1:</span></span><br><span class="line"><span class="comment">              selectType: 0/1/2</span></span><br><span class="line"><span class="comment">              rateType: 0/1</span></span><br><span class="line"><span class="comment">              全部 || 满意、不满意中的一种</span></span><br><span class="line"><span class="comment">              selectType===2 || selectType===rateType</span></span><br><span class="line"><span class="comment">          条件2</span></span><br><span class="line"><span class="comment">              onlyShowText: true/false</span></span><br><span class="line"><span class="comment">              text: 有值/没值</span></span><br><span class="line"><span class="comment">              符合条件一的全部评价 || 符合条件一的有文字的评价</span></span><br><span class="line"><span class="comment">              !onlyShowText || text.length&gt;0</span></span><br><span class="line"><span class="comment">          */</span></span><br><span class="line">      <span class="keyword">return</span> (selectType === <span class="number">2</span> || selectType === rateType) &amp;&amp; (!onlyShowText || text.length &gt; <span class="number">0</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 可以在这里自己写过滤器</span></span><br><span class="line">filters: &#123;</span><br><span class="line">  dateFormat:<span class="function"><span class="keyword">function</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(input);</span><br><span class="line">    <span class="keyword">var</span> year = d.getFullYear();</span><br><span class="line">    <span class="keyword">var</span> month = d.getMonth() + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> day = d.getDate() &lt;<span class="number">10</span> ? <span class="string">'0'</span> + d.getDate() : <span class="string">''</span> + d.getDate();</span><br><span class="line">    <span class="keyword">var</span> hour = d.getHours();</span><br><span class="line">    <span class="keyword">var</span> minutes = d.getMinutes();</span><br><span class="line">    <span class="keyword">var</span> seconds = d.getSeconds();</span><br><span class="line">    <span class="keyword">return</span>  year+ <span class="string">'-'</span> + month + <span class="string">'-'</span> + day + <span class="string">' '</span> + hour + <span class="string">':'</span> + minutes + <span class="string">':'</span> + seconds;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>filterRatings 就是为要渲染的评价列表设置各种必要条件 使其按照用户选择进行渲染（即页面显示的列表要同时满足条件一与条件二）</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// filters文件夹 也可以使用moment或date-fns(推荐)库来实现日期过滤</span></span><br><span class="line"><span class="comment">// npm install moment/date-fns --save</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="comment">// import moment from 'moment'</span></span><br><span class="line"><span class="keyword">import</span> format <span class="keyword">from</span> <span class="string">'date-fns/format'</span></span><br><span class="line"><span class="comment">// 自定义过滤器</span></span><br><span class="line">Vue.filter(<span class="string">'date-format'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">value, formatStr = <span class="string">'YYYY-MM-DD HH:mm:ss'</span></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// return moment(value).format(formatStr)</span></span><br><span class="line">  <span class="keyword">return</span> format(value, formatStr)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在main.js文件中引入注册的过滤器</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./filters'</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="14-10-ShopInfo组件"><a href="#14-10-ShopInfo组件" class="headerlink" title="14.10 ShopInfo组件"></a>14.10 ShopInfo组件</h3><ul><li><p>获取商家列表后就已经得到了商家信息info数据，但是还没有创建ShopInfo组件对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// mounted之后创建BScroll对象</span></span><br><span class="line">mounted () &#123;</span><br><span class="line">  <span class="comment">// 如果数据还没有, 直接结束</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="keyword">this</span>.info.pics) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 数据有了, 可以创建BScroll对象形成滑动</span></span><br><span class="line">  <span class="keyword">this</span>._initScroll()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>同时要动态计算横向滑动的ul宽度</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">  _initScroll () &#123;</span><br><span class="line">    <span class="keyword">new</span> BScroll(<span class="string">'.shop-info'</span>)</span><br><span class="line">    <span class="comment">// 动态计算ul的宽度</span></span><br><span class="line">    <span class="keyword">const</span> ul = <span class="keyword">this</span>.$refs.picsUl</span><br><span class="line">    <span class="keyword">const</span> liWidth = <span class="number">120</span></span><br><span class="line">    <span class="keyword">const</span> space = <span class="number">6</span></span><br><span class="line">    <span class="keyword">const</span> count = <span class="keyword">this</span>.info.pics.length</span><br><span class="line">    ul.style.width = (liWidth + space) * count - space + <span class="string">'px'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> BScroll(<span class="string">'.pic-wrapper'</span>, &#123;</span><br><span class="line">      scrollX: <span class="literal">true</span> <span class="comment">// 水平滑动</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="15-Search组件"><a href="#15-Search组件" class="headerlink" title="15. Search组件"></a>15. Search组件</h2><ul><li><p>既然要实现搜索功能，那么就要有搜索请求的接口以及vuex数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// api/index.js里 添加根据经纬度和关键字搜索商铺列表的接口</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> reqSearchShop = <span class="function">(<span class="params">geohash, keyword</span>) =&gt;</span> ajax(BASE_URL+<span class="string">'/search_shops'</span>, &#123;geohash, keyword&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 异步获取商家商品列表的action</span></span><br><span class="line"><span class="keyword">async</span> searchShops (&#123;commit, state&#125;, keyword) &#123;</span><br><span class="line">  <span class="keyword">const</span> geohash = state.latitude + <span class="string">','</span> + state.longitude</span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> reqSearchShop(geohash, keyword)</span><br><span class="line">  <span class="keyword">if</span> (result.code === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> searchShops = result.data</span><br><span class="line">    commit(RECEIVE_SEARCH_SHOPS, &#123;searchShops&#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在Search组件中触发action</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">search () &#123;</span><br><span class="line">    <span class="comment">// 得到搜索关键字</span></span><br><span class="line">    <span class="keyword">const</span> keyword = <span class="keyword">this</span>.keyword.trim()</span><br><span class="line">    <span class="comment">// 进行搜索</span></span><br><span class="line">    <span class="keyword">if</span> (keyword) &#123;</span><br><span class="line">      <span class="keyword">this</span>.$store.dispatch(<span class="string">'searchShops'</span>, keyword)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>通过router-link将搜索结果searchShops渲染出来</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123;path:'/shop', query:&#123;id:item.id&#125;&#125;"</span> <span class="attr">tag</span>=<span class="string">"li"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">v-for</span>=<span class="string">"item in searchShops"</span> <span class="attr">:key</span>=<span class="string">"item.id"</span> <span class="attr">class</span>=<span class="string">"list_li"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="16-项目优化-扩展"><a href="#16-项目优化-扩展" class="headerlink" title="16. 项目优化/扩展"></a>16. 项目优化/扩展</h2><h3 id="16-1-缓存路由组件对象"><a href="#16-1-缓存路由组件对象" class="headerlink" title="16.1 缓存路由组件对象"></a>16.1 缓存路由组件对象</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 好处: 复用路由组件对象, 复用内存中路由组件获取的后台数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="16-2-路由组件懒加载"><a href="#16-2-路由组件懒加载" class="headerlink" title="16.2 路由组件懒加载"></a>16.2 路由组件懒加载</h3><blockquote><p>我们写的所有Js文件最后都会打包成一个文件，而我们实际的需求是路由组件并不是一次全部加载过来，而是按需加载。所以就要在打包前就对代码进行分割，从而实现路由组件懒加载。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js文件中 改变引入方式 实现路由组件懒加载</span></span><br><span class="line"><span class="keyword">const</span> Msite = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/Msite/Msite.vue'</span>)</span><br><span class="line"><span class="keyword">const</span> Search = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/Search/Search.vue'</span>)</span><br><span class="line"><span class="keyword">const</span> Order = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/Order/Order.vue'</span>)</span><br><span class="line"><span class="keyword">const</span> Profile = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/Profile/Profile.vue'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 此时的Msite等都是返回路由组件的函数，只有请求对应的路由路径时(第一次)才会执行此函数并加载路由组件</span></span><br></pre></td></tr></table></figure><blockquote><p>此时切换路由，可以在控制台NetWork里看到拆分打包后的js文件实现了按需加载</p></blockquote><h3 id="16-3-图片懒加载-vue-lazyload"><a href="#16-3-图片懒加载-vue-lazyload" class="headerlink" title="16.3 图片懒加载: vue-lazyload"></a>16.3 图片懒加载: vue-lazyload</h3><p>安装<code>npm install --save vue-loader</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在main.js文件中引入并注册插件</span></span><br><span class="line"><span class="keyword">import</span> VueLazyload <span class="keyword">from</span> <span class="string">'vue-lazyload'</span></span><br><span class="line"><span class="comment">// 将一张loading图片加载进来</span></span><br><span class="line"><span class="keyword">import</span> loading <span class="keyword">from</span> <span class="string">'./common/img/loading.gif'</span></span><br><span class="line">Vue.use(VueLazyload, &#123; <span class="comment">// 内部自定义一个指令lazy</span></span><br><span class="line">loading</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 在图片标签中使用 （Food组件）</span></span><br><span class="line">&lt;img v-lazy=<span class="string">"food.image"</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="16-4-打包文件分析与优化"><a href="#16-4-打包文件分析与优化" class="headerlink" title="16.4 打包文件分析与优化"></a>16.4 打包文件分析与优化</h3><ul><li>vue 脚手架提供了一个用于可视化分析打包文件的包 webpack-bundle-analyzer 和配置</li><li>启用打包可视化: <code>npm run build --report</code> 可以根据可视化文件分析页面对项目进行优化</li></ul></image><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --&gt;&lt;center&gt;&lt;i&gt;外卖Web APP（spa）&lt;/i&gt;&lt;/center&gt;&lt;image src=&quot;/2019/07/18/Hexo+NexT 打造自己的博客/hexo.jpg&quot; alt style=&quot;width:100%&quot;&gt;&lt;/image&gt;
    
    </summary>
    
      <category term="Web" scheme="https://github.com/wh724/categories/Web/"/>
    
    
      <category term="Vue项目" scheme="https://github.com/wh724/tags/Vue%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="Web APP" scheme="https://github.com/wh724/tags/Web-APP/"/>
    
  </entry>
  
  <entry>
    <title>Node.js</title>
    <link href="https://github.com/wh724/2019/08/07/Node-js/"/>
    <id>https://github.com/wh724/2019/08/07/Node-js/</id>
    <published>2019-08-07T01:47:15.000Z</published>
    <updated>2019-08-07T01:55:19.118Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --><center><i>千里之行，始于足下。</i></center><a id="more"></a><p>视频地址</p><ul><li><a href="https://www.rails365.net/movies/qing-song-xue-nodejs-ji-chu-pian-1-ke-cheng-jie-shao-yu-kai-fa-huan-jing-da-jian" target="_blank" rel="noopener">https://www.rails365.net</a></li><li><a href="https://www.bilibili.com/video/av21010015" target="_blank" rel="noopener">b站</a></li></ul><p>常用链接</p><ul><li><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js 官网</a></li><li><a href="http://nodejs.cn" target="_blank" rel="noopener">Node.js 中文网</a></li><li><a href="https://cnodejs.org" target="_blank" rel="noopener">CNode：Node.js专业中文社区</a></li></ul><hr><h2 id="1-课程介绍与开发环境搭建"><a href="#1-课程介绍与开发环境搭建" class="headerlink" title="1.课程介绍与开发环境搭建"></a>1.课程介绍与开发环境搭建</h2><ul><li><p>主要包括</p><ul><li>nodejs 基础知识</li><li>web 服务器</li><li>异步 同步 阻塞 非阻塞</li></ul></li><li><p>课程基础</p><ul><li>javascript 基础</li><li>html 基础</li><li>命令行基础</li></ul></li><li><p>Node.js 介绍</p><ul><li>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境</li><li>Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效</li><li>Node.js 的包管理器 npm，是全球最大的开源库生态系统</li><li>javascript 是脚本语言，需要解析器才能执行，浏览器就充当了解析器</li><li>在Chrome中，解析器就是 V8 引擎，将 javascript 转换成 机器码</li><li>V8 引擎是开源的，由 C++ 语言编写，性能高</li><li>Node.js 高性能，事件驱动，非阻塞，生态圈很好</li></ul></li><li><p>Node.js 安装</p><ul><li><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">官网</a> 下载安装即可，很小不到20M！</li><li>验证是否成功，命令行输入 <code>node -v</code> 显示版本号如 <code>v8.11.4</code></li><li>按提示升级 npm，Update available 5.6.0 → 6.4.1， <code>npm i -g npm</code></li><li>macOS 安装完提示如下</li></ul></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">This package has installed:</span><br><span class="line">    • Node.js v8.11.4 to /usr/<span class="built_in">local</span>/bin/node</span><br><span class="line">    • npm v5.6.0 to /usr/<span class="built_in">local</span>/bin/npm</span><br><span class="line">Make sure that /usr/<span class="built_in">local</span>/bin is <span class="keyword">in</span> your <span class="variable">$PATH</span>.</span><br></pre></td></tr></table></figure><ul><li><p>Node.js 用途</p><ul><li>javascript 运行环境</li><li>操作文件（grunt gulp webpack）</li><li>操作数据库</li><li>写后端 api</li><li>命令行工具</li><li>web 开发</li><li>聊天室</li></ul></li><li><p>JavaScript 语句后应该加分号么？</p><ul><li><a href="https://www.zhihu.com/question/20298345" target="_blank" rel="noopener">知乎讨论</a></li><li>代码风格而已，没有定论</li><li>少分号更易读，不累</li><li>必须加分号情况很少见：一行开头是括号<code>(</code>或者方括号<code>[</code>的时候加上分号就可以了，其他时候都不要</li><li>如果下一行的行首是<code>( [ / + -</code>之一的话，js不会自动在上一行句尾加上分号</li></ul></li></ul><h2 id="2-全局对象"><a href="#2-全局对象" class="headerlink" title="2.全局对象"></a>2.全局对象</h2><ul><li><p>全局对象</p><ul><li>不用导入，直接使用的对象</li><li><a href="http://nodejs.cn/api/globals.html#globals_global_objects" target="_blank" rel="noopener">官方文档</a></li><li>Buffer 类，用于处理二进制数据</li><li>console，用于打印 stdout 和 stderr</li><li>global, 全局的命名空间对象</li><li>process，进程对象</li><li>setTimeout(callback, delay[, …args])</li><li>setInterval(callback, delay[, …args])</li><li>setImmediate(callback[, …args])</li><li>clearTimeout(timeoutObject)</li><li>clearInterval(intervalObject)</li><li>clearImmediate(immediateObject)</li></ul></li><li><p>以下变量虽然看起来像全局变量，但实际上不是</p><ul><li>全局变量在所有模块中均可使用</li><li>以下对象作用域只在模块内，详见 <a href="http://nodejs.cn/api/modules.html" target="_blank" rel="noopener">module文档</a>：</li><li>__dirname</li><li>__filename</li><li>exports</li><li>module</li><li>require()</li></ul></li><li><p>运行 <code>.js</code> 脚本文件</p><ul><li><code>node app</code> 或者 <code>node app.js</code></li></ul></li><li><p>实践代码</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'hello world'</span>);</span><br><span class="line"></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"3 seconds have passed 2"</span>);</span><br><span class="line">&#125;, <span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 箭头函数，es6的写法</span></span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"3 seconds have passed 1"</span>);</span><br><span class="line">&#125;, <span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每间隔2秒不断执行</span></span><br><span class="line">setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"2 seconds have passed"</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> time = <span class="number">0</span></span><br><span class="line"><span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    time += <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(time + <span class="string">" seconds have passed"</span>);</span><br><span class="line">    <span class="keyword">if</span> (time &gt; <span class="number">6</span>) &#123;</span><br><span class="line">        clearInterval(timer);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"clearInterval"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">2000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出当前目录 和 带绝对路径的文件名</span></span><br><span class="line"><span class="built_in">console</span>.log(__dirname)</span><br><span class="line"><span class="built_in">console</span>.log(__filename)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'end'</span>)</span><br><span class="line"><span class="built_in">console</span>.dir(global)</span><br></pre></td></tr></table></figure><h2 id="3-回调函数"><a href="#3-回调函数" class="headerlink" title="3.回调函数"></a>3.回调函数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Hi'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sayHi() <span class="comment">// 调用函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将匿名函数赋给变量</span></span><br><span class="line"><span class="keyword">var</span> sayBye = <span class="function"><span class="keyword">function</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(name + <span class="string">' Bye'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sayBye()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一个参数是函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callFunction</span>(<span class="params">fun, name</span>) </span>&#123;</span><br><span class="line">    fun(name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">callFunction(sayBye, <span class="string">'able'</span>)</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line">callFunction(<span class="function"><span class="keyword">function</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(name + <span class="string">' Bye'</span>)</span><br><span class="line">&#125;, <span class="string">'able'</span>)</span><br></pre></td></tr></table></figure><h2 id="4-模块"><a href="#4-模块" class="headerlink" title="4.模块"></a>4.模块</h2><ul><li>module 对象<ul><li>每个文件都被视为独立的模块</li><li>每个模块中，module 指向表示当前模块的对象的引用</li><li>module 实际上不是全局的，而是每个模块本地的</li><li>module.exports 导出模块内的对象，方便其他对象引用</li><li>require() 引入模块</li><li>当 Node.js 直接运行一个文件时，require.main 会被设为它的 module</li><li>可以通过 require.main === module 来判断一个文件是否被直接运行</li><li>module 提供了一个 filename 属性（通常等同于 __filename）</li><li>可以通过检查 require.main.filename 来获取当前应用程序的入口点</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// counter.js</span></span><br><span class="line"><span class="keyword">var</span> counter = <span class="function"><span class="keyword">function</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"There are "</span> + arr.length + <span class="string">" elements in array"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> adder = <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`the sum of the 2 numbers is <span class="subst">$&#123;a+b&#125;</span>`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> pi = <span class="number">3.14</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 只有一个时可以这样导入</span></span><br><span class="line"><span class="comment">// module.exports = counter</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">module.exports.counter = counter</span></span><br><span class="line"><span class="comment">module.exports.adder = adder</span></span><br><span class="line"><span class="comment">module.exports.pi = pi</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    counter: counter,</span><br><span class="line">    adder: adder,</span><br><span class="line">    pi: pi,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 对象可以简写</span></span><br><span class="line"><span class="comment">module.exports = &#123;</span></span><br><span class="line"><span class="comment">    counter,</span></span><br><span class="line"><span class="comment">    adder,</span></span><br><span class="line"><span class="comment">    pi,</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//p4.js</span></span><br><span class="line"><span class="keyword">var</span> stuff = <span class="built_in">require</span>(<span class="string">'./count'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(stuff.counter([<span class="string">'ruby'</span>, <span class="string">'nodejs'</span>, <span class="string">'react'</span>]))</span><br><span class="line"><span class="built_in">console</span>.log(stuff.adder(<span class="number">3</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">console</span>.log(stuff.pi)</span><br></pre></td></tr></table></figure><h2 id="5-事件-events"><a href="#5-事件-events" class="headerlink" title="5.事件 events"></a>5.事件 events</h2><ul><li><p>多数 Node.js 核心 API 都采用异步事件驱动架构</p></li><li><p>所有能触发事件的对象都是 EventEmitter 类的实例</p></li><li><p>事件名称通常是驼峰式的字符串</p></li><li><p>实践代码</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> events = <span class="built_in">require</span>(<span class="string">'events'</span>)</span><br><span class="line"><span class="keyword">var</span> util = <span class="built_in">require</span>(<span class="string">'util'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 事件 对象</span></span><br><span class="line"><span class="keyword">var</span> myEmitter = <span class="keyword">new</span> events.EventEmitter()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定 事件名称 和 回调函数</span></span><br><span class="line">myEmitter.on(<span class="string">'someEvent'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">message</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(message)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 触发实践，使用事件名称</span></span><br><span class="line">myEmitter.emit(<span class="string">'someEvent'</span>, <span class="string">'The event was emitted'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建对象</span></span><br><span class="line"><span class="keyword">var</span> Person = <span class="function"><span class="keyword">function</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 继承，让Person类具有事件对象的特性，绑定和触发事件</span></span><br><span class="line">util.inherits(Person, events.EventEmitter)</span><br><span class="line"><span class="comment">// 新建对象</span></span><br><span class="line"><span class="keyword">var</span> xiaoming = <span class="keyword">new</span> Person(<span class="string">'xiaoming'</span>)</span><br><span class="line"><span class="keyword">var</span> lili = <span class="keyword">new</span> Person(<span class="string">'lili'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> person = [xiaoming, lili]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环person数组，绑定事件</span></span><br><span class="line">person.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">person</span>) </span>&#123;</span><br><span class="line">    person.on(<span class="string">'speak'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">message</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(person.name + <span class="string">' said: '</span> + message)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 触发事件</span></span><br><span class="line">xiaoming.emit(<span class="string">'speak'</span>, <span class="string">'hi'</span>)</span><br><span class="line">lili.emit(<span class="string">'speak'</span>, <span class="string">'I want a curry'</span>)</span><br></pre></td></tr></table></figure><h2 id="6-读写文件（同步和异步）"><a href="#6-读写文件（同步和异步）" class="headerlink" title="6.读写文件（同步和异步）"></a>6.读写文件（同步和异步）</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 同步读写文件，顺序执行，如果读取时间很长，会阻塞进程</span></span><br><span class="line"><span class="keyword">var</span> readMe = fs.readFileSync(<span class="string">'readMe.txt'</span>, <span class="string">'utf8'</span>)</span><br><span class="line">fs.writeFileSync(<span class="string">'writeMe.txt'</span>, readMe)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(readMe)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'finished sync'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 异步读写文件</span></span><br><span class="line"><span class="comment">// 异步事件，Nodejs 维护一个事件队列，注册事件，完成后执行主线程</span></span><br><span class="line"><span class="comment">// 当主线程空闲时，取出执行事件，从线程池中发起线程执行事件， 当事件执行完成后通知主线程。这就是异步高效的原因。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> readMe = fs.readFile(<span class="string">'readMe.txt'</span>, <span class="string">'utf8'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">    fs.writeFile(<span class="string">'writeMe.txt'</span>, data, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'writeMe has finished'</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'end'</span>)</span><br></pre></td></tr></table></figure><h2 id="7-创建和删除目录"><a href="#7-创建和删除目录" class="headerlink" title="7.创建和删除目录"></a>7.创建和删除目录</h2><ul><li><a href="http://nodejs.cn/api/fs.html#fs_fs_unlink_path_callback" target="_blank" rel="noopener">fs - 文件系统 API 文档</a></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 异步删除文件</span></span><br><span class="line">fs.unlink(<span class="string">'writeMe.txt'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'delete writeMe.txt file'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 同步创建和删除目录</span></span><br><span class="line">fs.mkdirSync(<span class="string">'stuff'</span>)</span><br><span class="line">fs.rmdirSync(<span class="string">'stuff'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 异步</span></span><br><span class="line">fs.mkdir(<span class="string">'stuff'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    fs.readFile(<span class="string">'readMe.txt'</span>, <span class="string">'utf8'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">        fs.writeFile(<span class="string">'./stuff/writeMe.txt'</span>, data, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'copy successfully'</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="8-流和管道"><a href="#8-流和管道" class="headerlink" title="8.流和管道"></a>8.流和管道</h2><ul><li>流（stream）<ul><li>处理流式数据的抽象接口</li><li>stream 模块提供了一些基础的 API，用于构建实现了流接口的对象</li><li>流可以是可读的、可写的、或是可读写的，所有的流都是 EventEmitter 的实例</li><li>流处理数据通过缓存可以提高性能</li></ul></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --&gt;&lt;center&gt;&lt;i&gt;千里之行，始于足下。&lt;/i&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="Node.js" scheme="https://github.com/wh724/tags/Node-js/"/>
    
      <category term="[object Object]" scheme="https://github.com/wh724/tags/object-Object/"/>
    
  </entry>
  
  <entry>
    <title>上传图片的四种方法</title>
    <link href="https://github.com/wh724/2019/08/02/%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://github.com/wh724/2019/08/02/上传图片的四种方法/</id>
    <published>2019-08-02T02:49:08.000Z</published>
    <updated>2019-08-05T10:47:33.048Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --><center><i>上传图片</i></center><image src="/2019/08/02/上传图片的四种方法/1.png" alt style="text-align:center"><a id="more"></a><h2 id="四种方法"><a href="#四种方法" class="headerlink" title="四种方法"></a>四种方法</h2><blockquote><p>Ⅰ.PHP+表单<br>Ⅱ.AJAX+PHP<br>Ⅲ.拖放API+AJAX+图片预览+PHP<br>Ⅱ.插件（新浪和百度）</p></blockquote><h2 id="PHP-表单"><a href="#PHP-表单" class="headerlink" title="PHP+表单"></a>PHP+表单</h2><h3 id="创建一个文件上传表单"><a href="#创建一个文件上传表单" class="headerlink" title="创建一个文件上传表单"></a>创建一个文件上传表单</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;upload-img&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=&quot;upload_file.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">    &lt;label for=&quot;file&quot;&gt;文件名：&lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot;&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>有关上面的 HTML 表单的一些注意项列举如下：<br>form 标签的 enctype 属性规定了在提交表单时要使用哪种内容类型。在表单需要二进制数据时，比如文件内容，请使用 “multipart/form-data”。<br>input 标签的 type=”file” 属性规定了应该把输入作为文件来处理。举例来说，当在浏览器中预览时，会看到输入框旁边有一个浏览按钮。</p></blockquote><h3 id="创建上传脚本"><a href="#创建上传脚本" class="headerlink" title="创建上传脚本"></a>创建上传脚本</h3><p>“upload_file.php” 文件含有供上传文件的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 允许上传的图片后缀</span><br><span class="line">$allowedExts = array(&quot;gif&quot;, &quot;jpeg&quot;, &quot;jpg&quot;, &quot;png&quot;);</span><br><span class="line">$temp = explode(&quot;.&quot;, $_FILES[&quot;file&quot;][&quot;name&quot;]);</span><br><span class="line">echo $_FILES[&quot;file&quot;][&quot;size&quot;];</span><br><span class="line">$extension = end($temp);     // 获取文件后缀名</span><br><span class="line">if ((($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/gif&quot;)</span><br><span class="line">|| ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/jpeg&quot;)</span><br><span class="line">|| ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/jpg&quot;)</span><br><span class="line">|| ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/pjpeg&quot;)</span><br><span class="line">|| ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/x-png&quot;)</span><br><span class="line">|| ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/png&quot;))</span><br><span class="line">&amp;&amp; ($_FILES[&quot;file&quot;][&quot;size&quot;] &lt; 204800)   // 小于 200 kb</span><br><span class="line">&amp;&amp; in_array($extension, $allowedExts))</span><br><span class="line">&#123;</span><br><span class="line">    if ($_FILES[&quot;file&quot;][&quot;error&quot;] &gt; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;错误：: &quot; . $_FILES[&quot;file&quot;][&quot;error&quot;] . &quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;上传文件名: &quot; . $_FILES[&quot;file&quot;][&quot;name&quot;] . &quot;&lt;br&gt;&quot;;</span><br><span class="line">        echo &quot;文件类型: &quot; . $_FILES[&quot;file&quot;][&quot;type&quot;] . &quot;&lt;br&gt;&quot;;</span><br><span class="line">        echo &quot;文件大小: &quot; . ($_FILES[&quot;file&quot;][&quot;size&quot;] / 1024) . &quot; kB&lt;br&gt;&quot;;</span><br><span class="line">        echo &quot;文件临时存储的位置: &quot; . $_FILES[&quot;file&quot;][&quot;tmp_name&quot;] . &quot;&lt;br&gt;&quot;;</span><br><span class="line"></span><br><span class="line">        // 判断当期目录下的 upload 目录是否存在该文件</span><br><span class="line">        // 如果没有 upload 目录，你需要创建它，upload 目录权限为 777</span><br><span class="line">        if (file_exists(&quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;]))</span><br><span class="line">        &#123;</span><br><span class="line">            echo $_FILES[&quot;file&quot;][&quot;name&quot;] . &quot; 文件已经存在。 &quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            // 如果 upload 目录不存在该文件则将文件上传到 upload 目录下 </span><br><span class="line">    //这里是将$_FILES[&quot;file&quot;][&quot;tmp_name&quot;]内的临时路径值，</span><br><span class="line">    //换为自己相存储的路径值&quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;]</span><br><span class="line">            move_uploaded_file($_FILES[&quot;file&quot;][&quot;tmp_name&quot;], &quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;]);</span><br><span class="line">            echo &quot;文件存储在: &quot; . &quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;非法的文件格式&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>在这个脚本中，我们增加了对文件上传的限制。用户只能上传 .gif、.jpeg、.jpg、.png 文件，文件大小必须小于 200 kB：<br>在服务器的 PHP 临时文件夹中创建了一个被上传文件的临时副本。<br>这个临时的副本文件会在脚本结束时消失。要保存被上传的文件，我们需要把它拷贝到另外的位置：<br>通过使用 PHP 的全局数组 $_FILES，你可以从客户计算机向远程服务器上传文件。<br>第一个参数是表单的 input name，第二个下标可以是 “name”、”type”、”size”、”tmp_name” 或 “error”。如下所示：<br>$_FILES[“file”][“name”] - 上传文件的名称<br>$_FILES[“file”][“type”] - 上传文件的类型<br>$_FILES[“file”][“size”] - 上传文件的大小，以字节计<br>$_FILES[“file”][“tmp_name”] - 存储在服务器的文件的临时副本的名称<br>$_FILES[“file”][“error”] - 由文件上传导致的错误代码</p></blockquote><h2 id="PHP-ajax-jQuery"><a href="#PHP-ajax-jQuery" class="headerlink" title="PHP+ajax+jQuery"></a>PHP+ajax+jQuery</h2><h3 id="HTML文件"><a href="#HTML文件" class="headerlink" title="HTML文件"></a>HTML文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;!--利用cdn添加js和css库  --&gt;</span><br><span class="line">    &lt;script src=&quot;jquery-1.11.3.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body style=&quot;text-align: center; padding: 100px;&quot;&gt;</span><br><span class="line"></span><br><span class="line">选择图片：&lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot; accept=&quot;image/gif,image/png,image/jpg,image/jpeg&quot;&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;button id=&quot;send&quot;&gt;提交&lt;/button&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"></span><br><span class="line">    $(&quot;#send&quot;).click(function () &#123;  //提交实践</span><br><span class="line"></span><br><span class="line">            var file1 = document.getElementById(&apos;file&apos;).files[0]; //获取文件路径名，注意了没有files[1]这回事，已经试过坑</span><br><span class="line">            //var file1 = $(&quot;#file&quot;)[0].files[0];  //这句跟上一面那句作用一样</span><br><span class="line"></span><br><span class="line">            //console.log(document.getElementById(&apos;file&apos;).files[0].name);</span><br><span class="line">            //console.log(document.getElementById(&apos;file&apos;).files[0].size);</span><br><span class="line">            //console.log(document.getElementById(&apos;file&apos;).files[0].type);</span><br><span class="line">            //console.log(document.getElementById(&apos;file&apos;).files[0].lastModifiedDate);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            var formData = new FormData();</span><br><span class="line"></span><br><span class="line">            formData.append(&apos;file&apos;, file1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                type: &quot;POST&quot;,</span><br><span class="line">                url: &quot;server.php&quot;,  //同目录下的php文件</span><br><span class="line"></span><br><span class="line">                data: formData,</span><br><span class="line">                dataType: &quot;json&quot;, //声明成功使用json数据类型回调</span><br><span class="line"></span><br><span class="line">                //如果传递的是FormData数据类型，那么下来的三个参数是必须的，否则会报错</span><br><span class="line">                cache: false,  //默认是true，但是一般不做缓存</span><br><span class="line">                processData: false, //用于对data参数进行序列化处理，这里必须false；如果是true，就会将FormData转换为String类型</span><br><span class="line">                contentType: false,  //一些文件上传http协议的关系，自行百度，如果上传的有文件，那么只能设置为false</span><br><span class="line"></span><br><span class="line">                success: function (msg) &#123;  //请求成功后的回调函数</span><br><span class="line">                    alert(msg.file);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="server-PHP文件"><a href="#server-PHP文件" class="headerlink" title="server.PHP文件"></a>server.PHP文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">header(&quot;Access-Control-Allow-Origin:*&quot;);</span><br><span class="line">header(&quot;Content-Type:application/json;charset=utf-8&quot;);</span><br><span class="line">$f_size=$_FILES[&quot;file&quot;][&quot;size&quot;];</span><br><span class="line">if((!$_FILES == null) &amp;&amp;</span><br><span class="line">    ($f_size&lt;1024*1024*2)&amp;&amp;</span><br><span class="line">    (($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/gif&quot;)</span><br><span class="line">    || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/jpeg&quot;)</span><br><span class="line">    || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/jpg&quot;)</span><br><span class="line">    || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/pjpeg&quot;)</span><br><span class="line">    || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/x-png&quot;)</span><br><span class="line">    || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/png&quot;)))&#123;</span><br><span class="line"></span><br><span class="line">    $temp = explode(&quot;.&quot;, $_FILES[&quot;file&quot;][&quot;name&quot;]);</span><br><span class="line">    if (file_exists(&quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;]))&#123;</span><br><span class="line">                $str[&quot;msg&quot;]=$_FILES[&quot;file&quot;][&quot;name&quot;].&quot;文件已经存在。&quot;;</span><br><span class="line">                echo json_encode($str);</span><br><span class="line">            &#125;</span><br><span class="line">            else &#123;</span><br><span class="line">                // 如果 upload 目录不存在该文件则将文件上传到 upload 目录下</span><br><span class="line">                $temp = explode(&quot;.&quot;, $_FILES[&quot;file&quot;][&quot;name&quot;]);</span><br><span class="line">                $extension = end($temp);</span><br><span class="line">//为图片修改名字</span><br><span class="line">                $n_name=time().&apos;_&apos;.rand(1,9999).&apos;.&apos;.$extension;</span><br><span class="line">                move_uploaded_file($_FILES[&quot;file&quot;][&quot;tmp_name&quot;], &quot;upload/&quot; . $n_name);</span><br><span class="line">                $str[&quot;msg&quot;]=&quot;文件存储在: &quot; . &quot;upload/&quot; . $n_name;</span><br><span class="line">                echo json_encode($str);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line">    $str[&quot;msg&quot;]=&quot;请重新上传&quot;;</span><br><span class="line">    echo $str;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="拖放API-AJAX-图片预览-PHP"><a href="#拖放API-AJAX-图片预览-PHP" class="headerlink" title="拖放API+AJAX+图片预览+PHP"></a>拖放API+AJAX+图片预览+PHP</h2><h3 id="HTML文件-1"><a href="#HTML文件-1" class="headerlink" title="HTML文件"></a>HTML文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;拖拽图片上传&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">        list-style: none;</span><br><span class="line">    &#125;</span><br><span class="line">    #box &#123;</span><br><span class="line">        height: 300px;</span><br><span class="line">        width: 800px;</span><br><span class="line">        margin: 10px auto;</span><br><span class="line">        background: #F0F8FF;</span><br><span class="line">        padding: 50px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div id=&quot;box&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;script src=&quot;jquery-1.11.3.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    window.onload=function()</span><br><span class="line">    &#123;</span><br><span class="line">        var box = document.getElementById(&apos;box&apos;);</span><br><span class="line">        box.ondragover = function (e) &#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">        &#125;;</span><br><span class="line">        /*box.οndrοp=function(e)&#123;</span><br><span class="line">        e.preventDefault();</span><br><span class="line">        var file = e.target.files?e.target.files[0]:e.dataTransfer.files[0];</span><br><span class="line">        var f = e.dataTransfer.files[0];</span><br><span class="line">        fileType = f.type;</span><br><span class="line">        fileSize = f.size;</span><br><span class="line">        reader = new FileReader();</span><br><span class="line">        var maxsize = 20480;</span><br><span class="line">        var reg = /(image)/;</span><br><span class="line">        if(!reg.test(fileType))&#123;</span><br><span class="line">            alert(&apos;不是正确的数据类型！&apos;);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        if(fileSize&gt;maxsize*1024)&#123;</span><br><span class="line">            alert(&apos;素材大于&apos;+maxsize+&apos;KB&apos;);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        var fr = new FileReader();</span><br><span class="line">        fr.readAsDataURL(f);</span><br><span class="line">        fr.οnlοad=function(e)&#123;</span><br><span class="line">            var Url = this.result;</span><br><span class="line">            console.log(Url);</span><br><span class="line">            box.innerHTML+=&apos;&lt;img src=&quot;&apos;+Url+&apos;&quot; alt=&quot;&quot; width=&quot;200&quot; height=&quot;200&quot; style=&quot;margin:10px;&quot;&gt;&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">        var form = new FormData();</span><br><span class="line">        form.append(&quot;file&quot;, f);</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type:&quot;post&quot;,</span><br><span class="line">            url:&quot;upload_image.php&quot;,</span><br><span class="line">            data:form,</span><br><span class="line">            processData:false,</span><br><span class="line">            contentType:false,</span><br><span class="line">            success:function(data)&#123;</span><br><span class="line">                if(data)&#123;</span><br><span class="line">                    alert(&apos;上传成功&apos;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;*/</span><br><span class="line"></span><br><span class="line">        box.ondrop = function (e) &#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">            var f = e.dataTransfer.files[0];</span><br><span class="line">            var fileReader = new FileReader();</span><br><span class="line">            fileReader.onload = function (e) &#123;</span><br><span class="line">                console.log(fileReader.result);</span><br><span class="line">                box.innerHTML += &quot;&lt;img src=\&quot;&quot; + fileReader.result + &quot;\&quot;&gt;&quot;;</span><br><span class="line"></span><br><span class="line">            &#125;;</span><br><span class="line">            fileReader.readAsDataURL(f);</span><br><span class="line">            var form = new FormData();</span><br><span class="line">            form.append(&quot;file&quot;, f);</span><br><span class="line"></span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                type:&quot;post&quot;,</span><br><span class="line">                url:&quot;server.php&quot;,</span><br><span class="line">                data:form,</span><br><span class="line">                processData:false,</span><br><span class="line">                contentType:false,</span><br><span class="line">                success:function(data)&#123;</span><br><span class="line">                    if(data)&#123;</span><br><span class="line">                        alert(data.msg);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="PHP文件同上"><a href="#PHP文件同上" class="headerlink" title="PHP文件同上"></a>PHP文件同上</h3></image><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --&gt;&lt;center&gt;&lt;i&gt;上传图片&lt;/i&gt;&lt;/center&gt;&lt;image src=&quot;/2019/08/02/上传图片的四种方法/1.png&quot; alt style=&quot;text-align:center&quot;&gt;&lt;/image&gt;
    
    </summary>
    
      <category term="WEB" scheme="https://github.com/wh724/categories/WEB/"/>
    
    
      <category term="HTML" scheme="https://github.com/wh724/tags/HTML/"/>
    
      <category term="PHP" scheme="https://github.com/wh724/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>复现商城后台管理平台的小tips</title>
    <link href="https://github.com/wh724/2019/07/20/%E5%A4%8D%E7%8E%B0%E5%95%86%E5%9F%8E%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%B0%8Ftips/"/>
    <id>https://github.com/wh724/2019/07/20/复现商城后台管理平台的小tips/</id>
    <published>2019-07-20T02:21:55.000Z</published>
    <updated>2019-07-29T03:36:33.810Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --><center><i>千里之行，始于足下。</i></center><a id="more"></a><h2 id="preg-match的使用"><a href="#preg-match的使用" class="headerlink" title="preg_match的使用"></a>preg_match的使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">preg_match(&quot;/(\w)+/&quot;,&quot;abc&quot;,$search);print_r($search);</span><br><span class="line"></span><br><span class="line">显示结果(只匹配一次，只要匹配到立即停止):</span><br><span class="line"></span><br><span class="line">Array( [0] = a [1] = a)</span><br></pre></td></tr></table></figure><h2 id="元素高度、宽度计算"><a href="#元素高度、宽度计算" class="headerlink" title="元素高度、宽度计算"></a>元素高度、宽度计算</h2><blockquote><p>元素宽度=左右外边距+左右边框+左右内边距+元素内容高度；<br>元素高度=上下外边距+上下边框+上下内边距+元素内容宽度；</p></blockquote><blockquote><p>重要属性：box-sizing（指定框模型计算方式）<br>默认值：content-box 采用上述方式计算；<br>css所定义的属性width、height为元素内容宽高；<br>另外一个值：border-box<br>css所定义的属性width、height为元素宽度。</p></blockquote><h2 id="父元素相对定位-子元素绝对定位"><a href="#父元素相对定位-子元素绝对定位" class="headerlink" title="父元素相对定位 子元素绝对定位"></a>父元素相对定位 子元素绝对定位</h2><blockquote><p>相对定位：相对与原来的位置<br>绝对定位：相对于离他最近的<strong>已定位的祖先元素</strong>实现位置的偏移<br>参考上级已经定位的元素位置定位<br>如果上级都没有定位，则绝对定位的元素相对于body定位<br><strong>已定位的元素</strong>：<br>将position设置为relative/absolute/fixed中任何一种</p></blockquote><h2 id="外边距合并"><a href="#外边距合并" class="headerlink" title="外边距合并"></a>外边距合并</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;123&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    div&#123;</span><br><span class="line">        margin-top:200px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><blockquote><p>由于body与div之间没有任何的元素，则body和div的margin-top相遇<br>会合并，取较大值，此时body的margin-top为200px；</p></blockquote><h2 id="网站标识"><a href="#网站标识" class="headerlink" title="网站标识"></a>网站标识</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;icon&quot; href=&quot;...icon&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="菜单栏永远出现在底部"><a href="#菜单栏永远出现在底部" class="headerlink" title="菜单栏永远出现在底部"></a>菜单栏永远出现在底部</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">菜单栏：height: ** px;</span><br><span class="line">      position：fixed;</span><br><span class="line">      bottom: 0;</span><br><span class="line">固定定位fixed：位置不会随滚动条改变而改变，固定在可视化区域；</span><br><span class="line">他的left/right/top/bottom也是相对于整个可视化界面而言，不是整个body</span><br></pre></td></tr></table></figure><h2 id="window-onscroll事件"><a href="#window-onscroll事件" class="headerlink" title="window.onscroll事件"></a>window.onscroll事件</h2><blockquote><p>在窗口发生滚动时自动调用<br>$(“..”).offsetTop 计算当前元素距离顶端距离</p></blockquote><h2 id="运行php报错"><a href="#运行php报错" class="headerlink" title="运行php报错"></a>运行php报错</h2><blockquote><p>跳转下载页面：header写错<br>json格式有误：<?php?>前后有空格会报错</p></blockquote><h2 id="文本内容要显示为-xxxxx…"><a href="#文本内容要显示为-xxxxx…" class="headerlink" title="文本内容要显示为 xxxxx…"></a>文本内容要显示为 xxxxx…</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">overflow:hidden;</span><br><span class="line">white-space:nowrap;</span><br><span class="line">text-overflow:ellipsis;</span><br></pre></td></tr></table></figure><h2 id="为动态创建的元素绑定点击事件"><a href="#为动态创建的元素绑定点击事件" class="headerlink" title="为动态创建的元素绑定点击事件"></a>为动态创建的元素绑定点击事件</h2><blockquote><p>由于是动态创建，则不能直接绑定，需要用事件代理（on），绑定在静态父元素上</p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --&gt;&lt;center&gt;&lt;i&gt;千里之行，始于足下。&lt;/i&gt;&lt;/center&gt;
    
    </summary>
    
      <category term="HTML5" scheme="https://github.com/wh724/categories/HTML5/"/>
    
    
      <category term="HTML5" scheme="https://github.com/wh724/tags/HTML5/"/>
    
      <category term="商城后台管理平台" scheme="https://github.com/wh724/tags/%E5%95%86%E5%9F%8E%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>使用HTML5+定时器实现进度条效果</title>
    <link href="https://github.com/wh724/2019/07/19/%E4%BD%BF%E7%94%A8HTML5-%E5%AE%9A%E6%97%B6%E5%99%A8%E5%AE%9E%E7%8E%B0%E8%BF%9B%E5%BA%A6%E6%9D%A1%E6%95%88%E6%9E%9C/"/>
    <id>https://github.com/wh724/2019/07/19/使用HTML5-定时器实现进度条效果/</id>
    <published>2019-07-19T02:41:04.000Z</published>
    <updated>2019-07-19T02:52:27.802Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --><center><i>HTML5+定时器</i></center><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;定时器+进度条&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;progress id=&quot;progress&quot; value=&quot;0&quot;&gt;&lt;/progress&gt;</span><br><span class="line">    &lt;span id=&quot;precent&quot;&gt;0%&lt;/span&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var prog=document.getElementById(&quot;progress&quot;);</span><br><span class="line">    var precent=document.getElementById(&quot;precent&quot;);</span><br><span class="line">    var val=0;</span><br><span class="line">    var timer = setInterval(function()&#123;</span><br><span class="line">        val++;</span><br><span class="line">        if(val&gt;=100)&#123;</span><br><span class="line">            clearInterval(timer);</span><br><span class="line">            val=100;</span><br><span class="line">        &#125;</span><br><span class="line">        prog.value = val/100;</span><br><span class="line">        precent.innerHTML=val+&apos;%&apos;;</span><br><span class="line">    &#125;,100)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --&gt;&lt;center&gt;&lt;i&gt;HTML5+定时器&lt;/i&gt;&lt;/center&gt;
    
    </summary>
    
      <category term="HTML5" scheme="https://github.com/wh724/categories/HTML5/"/>
    
    
      <category term="HTML5" scheme="https://github.com/wh724/tags/HTML5/"/>
    
      <category term="定时器" scheme="https://github.com/wh724/tags/%E5%AE%9A%E6%97%B6%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+NexT 打造自己的博客</title>
    <link href="https://github.com/wh724/2019/07/18/Hexo+NexT%20%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>https://github.com/wh724/2019/07/18/Hexo+NexT 打造自己的博客/</id>
    <published>2019-07-18T02:49:08.000Z</published>
    <updated>2019-07-19T03:24:57.527Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --><center><i>Hexo+NexT</i></center><image src="/2019/07/18/Hexo+NexT 打造自己的博客/hexo.jpg" alt style="width:100%"><a id="more"></a><h1 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h1><p>登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：Build software better, together 点击GitHub中的New repository创建新仓库，仓库名应该为：用户名.<a href="http://github.io" target="_blank" rel="noopener">http://github.io</a> 这个用户名使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为：wh724.github.io。</p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>我们网站在本地搭建好了，需要使用Git同步到GitHub上。</p><h2 id="Git下载"><a href="#Git下载" class="headerlink" title="Git下载"></a>Git下载</h2><p>从Git官网下载：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git - Downloading Package</a><br>选择64位的安装包，下载后安装，在命令行里输入git测试是否安装成功，若安装失败，参看其他详细的Git安装教程。</p><h2 id="Git-Bash"><a href="#Git-Bash" class="headerlink" title="Git Bash"></a>Git Bash</h2><p>安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash。<br>git config –global user.name “你的GitHub用户名”<br>git config –global user.email “你的GitHub注册邮箱”</p><h2 id="生成ssh密钥文件"><a href="#生成ssh密钥文件" class="headerlink" title="生成ssh密钥文件"></a>生成ssh密钥文件</h2><p>ssh-keygen -t rsa -C “你的GitHub注册邮箱”<br>然后直接三个回车即可，默认不需要设置密码<br>然后找到生成的<code>用户/用户名/.ssh/</code>的文件夹中的id_rsa.pub密钥，将内容全部复制</p><p>打开<a href="https://github.com/settings/keys">GitHub_Settings_keys</a>页面，新建new SSH Key</p><p>Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。<br>在Git Bash中检测GitHub公钥设置是否成功，输入 ssh <a href="mailto:git@github.com">git@github.com</a> ：<br>如上则说明成功。</p><h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h1><p>Hexo基于Node.js，Node.js下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Download | Node.js</a> 下载安装包，注意安装Node.js会包含环境变量及npm的安装。<br>安装后，检测Node.js是否安装成功，在命令行中输入 node -v :<br>检测npm是否安装成功，在命令行中输入npm -v :<br>到这了，安装Hexo的环境已经全部搭建完成。</p><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>Hexo就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。<br>创建好后，进入文件夹中，按住shift键，右击鼠标点击命令行<br>使用npm命令安装Hexo，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">``` </span><br><span class="line">这个安装时间较长耐心等待，安装完成后，初始化我们的博客，输入</span><br></pre></td></tr></table></figure><p>hexo init blog</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意，这里的命令都是作用在刚刚创建的Blog文件夹中。</span><br><span class="line"></span><br><span class="line">为了检测我们的网站雏形，分别按顺序输入以下三条命令：</span><br></pre></td></tr></table></figure><p></p><p>hexo new test_my_site<br>hexo g<br>hexo s</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这些命令在后面作介绍，完成后，打开浏览器输入地址：</span><br><span class="line">```localhost:4000</span><br></pre></td></tr></table></figure><p>可以看出我们写出第一篇博客，只不过我下图是我修改过的配置，和你的显示不一样。</p><h2 id="Hexo-命令"><a href="#Hexo-命令" class="headerlink" title="Hexo 命令"></a>Hexo 命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g #安装Hexo</span><br><span class="line">npm update hexo -g #升级 </span><br><span class="line">hexo init #初始化博客</span><br></pre></td></tr></table></figure><h2 id="命令简写"><a href="#命令简写" class="headerlink" title="命令简写"></a>命令简写</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章</span><br><span class="line">hexo g == hexo generate #生成</span><br><span class="line">hexo s == hexo server #启动服务预览</span><br><span class="line">hexo d == hexo deploy #部署</span><br><span class="line"></span><br><span class="line">hexo server #Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class="line">hexo server -s #静态模式</span><br><span class="line">hexo server -p 5000 #更改端口</span><br><span class="line">hexo server -i 192.168.1.1 #自定义 IP</span><br><span class="line">hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br><span class="line"></span><br><span class="line">刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。</span><br></pre></td></tr></table></figure><h2 id="推送网站"><a href="#推送网站" class="headerlink" title="推送网站"></a>推送网站</h2><p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为站点配置文件.</p><p>进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为主题配置文件。</p><p>下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">type: git</span><br><span class="line">repo: git@github.com:+你的github名称/名称.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>保存站点配置文件。<br>其实就是给hexo d 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令：</p><figure class="highlight plain"><figcaption><span>install hexo-deployer-git --save```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">这时，我们分别输入三条命令：</span><br></pre></td></tr></table></figure><p>hexo clean<br>hexo g<br>hexo d</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 http://xxxx.github.io。</span><br><span class="line">你就会发现你的博客已经上线了，可以在网络上被访问了。</span><br><span class="line">## 更换主题</span><br><span class="line"></span><br><span class="line">如果你不喜欢Hexo默认的主题，可以更换不同的主题，主题传送门：&lt;a href=&quot;https://hexo.io/themes/&quot;&gt;Themes&lt;/a&gt; 我自己使用的是Next主题，可以在blog目录中的themes文件夹中查看你自己主题是什么。现在把默认主题更改成Next主题，在blog目录中（就是命令行的位置处于blog目录）打开命令行输入：</span><br><span class="line">```git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p></p><p>这是将Next主题下载到blog目录的themes主题下的next文件夹中。打开站点的_config.yml配置文件，修改主题为next<br>打开<strong>主题</strong>的_config.yml配置文件，不是站点主题文件，找到Scheme Settings<br>next主题有三个样式，我用的是Pisces，你们可以自己试试看，选择你自己喜欢的样式（只需要把行首的#去除，#是注释），选择好后，再次部署网站，hexo g、hexo d，查看效果。选择其他主题，按照上述过程即可实现。</p><h1 id="主题进阶UpUpUp"><a href="#主题进阶UpUpUp" class="headerlink" title="主题进阶UpUpUp"></a>主题进阶UpUpUp</h1><h2 id="站点配置文件"><a href="#站点配置文件" class="headerlink" title="站点配置文件"></a>站点配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: Space Port</span><br><span class="line">subtitle: welcome to my space station!</span><br><span class="line">description: This is lonely,but it`s your own.</span><br><span class="line">keywords:</span><br><span class="line">author: WH</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone:</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: https://github.com/wh724</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: true</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br><span class="line">  </span><br><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &apos;&apos;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &apos;&apos;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">  </span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Date / Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy: </span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:wh724/wh724.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br><span class="line"># hexo-generator-searchdb@1.0.8</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  content: true</span><br><span class="line">#静态资源压缩优化</span><br><span class="line"># hexo-neat</span><br><span class="line">neat_enable: true # 启用neat</span><br><span class="line"></span><br><span class="line"># 对html优化</span><br><span class="line">neat_html:          </span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">  </span><br><span class="line"># 对css优化</span><br><span class="line">neat_css:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - &apos;*.min.css&apos;</span><br><span class="line"></span><br><span class="line"># 对js优化</span><br><span class="line">neat_js:</span><br><span class="line">  enable: true</span><br><span class="line">  mangle: true</span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - &apos;*.min.js&apos;</span><br></pre></td></tr></table></figure><h2 id="主题配置文件"><a href="#主题配置文件" class="headerlink" title="主题配置文件"></a>主题配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br></pre></td><td class="code"><pre><span class="line"># ===============================================================</span><br><span class="line"># ========================= ATTENTION! ==========================</span><br><span class="line"># ===============================================================</span><br><span class="line"># NexT repository is moving here: https://github.com/theme-next</span><br><span class="line"># ===============================================================</span><br><span class="line"># It&apos;s rebase to v6.0.0 and future maintenance will resume there</span><br><span class="line"># ===============================================================</span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Theme Core Configuration Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Set to true, if you want to fully override the default configuration.</span><br><span class="line"># Useful if you don&apos;t want to inherit the theme _config.yml configurations.</span><br><span class="line">override: false</span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Site Information Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># To get or check favicons visit: https://realfavicongenerator.net</span><br><span class="line"># Put your favicons into `hexo-site/source/` (recommend) or `hexo-site/themes/next/source/images/` directory.</span><br><span class="line"></span><br><span class="line"># Default NexT favicons placed in `hexo-site/themes/next/source/images/` directory.</span><br><span class="line"># And if you want to place your icons in `hexo-site/source/` root directory, you must remove `/images` prefix from pathes.</span><br><span class="line"></span><br><span class="line"># For example, you put your favicons into `hexo-site/source/images` directory.</span><br><span class="line"># Then need to rename &amp; redefine they on any other names, otherwise icons from Next will rewrite your custom icons in Hexo.</span><br><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line">  #android_manifest: /images/manifest.json</span><br><span class="line">  #ms_browserconfig: /images/browserconfig.xml</span><br><span class="line"></span><br><span class="line"># Set default keywords (Use a comma to separate)</span><br><span class="line">keywords: Hexo,博客,生活,技术,代码</span><br><span class="line"></span><br><span class="line"># Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site&apos;s feed link.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">rss:</span><br><span class="line"></span><br><span class="line">footer:</span><br><span class="line">  # Specify the date when the site was setup.</span><br><span class="line">  # If not defined, current year will be used.</span><br><span class="line">  since: 2019</span><br><span class="line"></span><br><span class="line">  # Icon between year and copyright info.</span><br><span class="line">  icon: user</span><br><span class="line"></span><br><span class="line">  # If not defined, will be used `author` from Hexo main config.</span><br><span class="line">  copyright:</span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  # Hexo link (Powered by Hexo).</span><br><span class="line">  powered: false</span><br><span class="line"></span><br><span class="line">  theme:</span><br><span class="line">    # Theme &amp; scheme info link (Theme - NexT.scheme).</span><br><span class="line">    enable: false</span><br><span class="line">    # Version info of NexT after scheme info (vX.X.X).</span><br><span class="line">    version: true</span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  # Any custom text can be defined here.</span><br><span class="line">  #custom_text: Hosted by &lt;a target=&quot;_blank&quot; href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># SEO Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.</span><br><span class="line"># See: https://support.google.com/webmasters/answer/139066</span><br><span class="line"># Tips: Before you open this tag, remember set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )</span><br><span class="line">canonical: true</span><br><span class="line"></span><br><span class="line"># Change headers hierarchy on site-subtitle (will be main site description) and on all post/pages titles for better SEO-optimization.</span><br><span class="line">seo: false</span><br><span class="line"></span><br><span class="line"># If true, will add site-subtitle to index page, added in main hexo config.</span><br><span class="line"># subtitle: Subtitle</span><br><span class="line">index_with_subtitle: false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Menu Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).</span><br><span class="line"># Usage: `Key: /link/ || icon`</span><br><span class="line"># Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.</span><br><span class="line"># Value before `||` delimeter is the target link.</span><br><span class="line"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br><span class="line"></span><br><span class="line"># Enable/Disable menu icons.</span><br><span class="line">menu_icons:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line">scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Sidebar Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Social Links.</span><br><span class="line"># Usage: `Key: permalink || icon`</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before `||` delimeter is the target permalink.</span><br><span class="line"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/yourname || github</span><br><span class="line">  E-Mail: mailto:yourname@gmail.com || envelope</span><br><span class="line">  #Google: https://plus.google.com/yourname || google</span><br><span class="line">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class="line">  #VK Group: https://vk.com/yourname || vk</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  icons_only: true</span><br><span class="line">  transition: true</span><br><span class="line"></span><br><span class="line"># Blog rolls</span><br><span class="line">links_icon: link</span><br><span class="line">links_title: Links</span><br><span class="line">links_layout: block</span><br><span class="line">#links_layout: inline</span><br><span class="line">#links:</span><br><span class="line">  #Title: http://example.com/</span><br><span class="line"></span><br><span class="line"># Sidebar Avatar</span><br><span class="line"># in theme directory(source/images): /images/avatar.gif</span><br><span class="line"># in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class="line">avatar: /images/wh724.jpg</span><br><span class="line"></span><br><span class="line"># Table Of Contents in the Sidebar</span><br><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: true</span><br><span class="line"></span><br><span class="line">  # If true, all words will placed on next lines if header width longer then sidebar width.</span><br><span class="line">  wrap: false</span><br><span class="line"></span><br><span class="line"># Creative Commons 4.0 International License.</span><br><span class="line"># http://creativecommons.org/</span><br><span class="line"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span><br><span class="line">#creative_commons: by-nc-sa</span><br><span class="line">#creative_commons:</span><br><span class="line"></span><br><span class="line">sidebar:</span><br><span class="line">  # Sidebar Position, available value: left | right (only for Pisces | Gemini).</span><br><span class="line">  position: left</span><br><span class="line">  #position: right</span><br><span class="line"></span><br><span class="line">  # Sidebar Display, available value (only for Muse | Mist):</span><br><span class="line">  #  - post    expand on posts automatically. Default.</span><br><span class="line">  #  - always  expand for all pages automatically</span><br><span class="line">  #  - hide    expand only when click on the sidebar toggle icon.</span><br><span class="line">  #  - remove  Totally remove sidebar including sidebar toggle.</span><br><span class="line">  display: post</span><br><span class="line">  #display: always</span><br><span class="line">  #display: hide</span><br><span class="line">  #display: remove</span><br><span class="line"></span><br><span class="line">  # Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span><br><span class="line">  offset: 12</span><br><span class="line"></span><br><span class="line">  # Back to top in sidebar (only for Pisces | Gemini).</span><br><span class="line">  b2t: false</span><br><span class="line"></span><br><span class="line">  # Scroll percent label in b2t button.</span><br><span class="line">  scrollpercent: false</span><br><span class="line"></span><br><span class="line">  # Enable sidebar on narrow view (only for Muse | Mist).</span><br><span class="line">  onmobile: true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Post Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span><br><span class="line">scroll_to_more: true</span><br><span class="line"></span><br><span class="line"># Automatically saving scroll position on each post/page in cookies.</span><br><span class="line">save_scroll: false</span><br><span class="line"></span><br><span class="line"># Automatically excerpt description in homepage as preamble text.</span><br><span class="line">excerpt_description: false</span><br><span class="line"></span><br><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: false</span><br><span class="line">  length: 150</span><br><span class="line"></span><br><span class="line"># Post meta display settings</span><br><span class="line">post_meta:</span><br><span class="line">  item_text: true</span><br><span class="line">  created_at: true</span><br><span class="line">  updated_at: false</span><br><span class="line">  categories: true</span><br><span class="line"></span><br><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  totalcount: true</span><br><span class="line">  separated_meta: true</span><br><span class="line"></span><br><span class="line"># Wechat Subscriber</span><br><span class="line">wechat_subscriber:</span><br><span class="line">  enabled: true</span><br><span class="line">  qcode: /uploads/wechat.jpg</span><br><span class="line">  description: subscribe to my blog</span><br><span class="line"></span><br><span class="line"># Reward</span><br><span class="line">#reward_comment: Donate comment here</span><br><span class="line">#wechatpay: /images/wechatpay.jpg</span><br><span class="line">#alipay: /images/alipay.jpg</span><br><span class="line">#bitcoin: /images/bitcoin.png</span><br><span class="line"></span><br><span class="line"># Declare license on posts转载声明</span><br><span class="line">post_copyright:</span><br><span class="line">  enable: true</span><br><span class="line">  license: CC BY-NC-SA 3.0</span><br><span class="line">  license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Misc Theme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Reduce padding / margin indents on devices with narrow width.</span><br><span class="line">mobile_layout_economy: false</span><br><span class="line"></span><br><span class="line"># Android Chrome header panel color ($black-deep).</span><br><span class="line">android_chrome_color: &quot;#222&quot;</span><br><span class="line"></span><br><span class="line"># Custom Logo.</span><br><span class="line"># !!Only available for Default Scheme currently.</span><br><span class="line"># Options:</span><br><span class="line">#   enabled: [true/false] - Replace with specific image</span><br><span class="line">#   image: url-of-image   - Images&apos;s url</span><br><span class="line">custom_logo:</span><br><span class="line">  enabled: false</span><br><span class="line">  image:</span><br><span class="line"></span><br><span class="line"># Code Highlight theme代码高亮主题设置</span><br><span class="line"># Available value:</span><br><span class="line">#    normal | night | night eighties | night blue | night bright</span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line">highlight_theme: normal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Font Settings</span><br><span class="line"># - Find fonts on Google Fonts (https://www.google.com/fonts)</span><br><span class="line"># - All fonts set here will have the following styles:</span><br><span class="line">#     light, light italic, normal, normal italic, bold, bold italic</span><br><span class="line"># - Be aware that setting too much fonts will cause site running slowly</span><br><span class="line"># - Introduce in 5.0.1</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># CAUTION! Safari Version 10.1.2 bug: https://github.com/iissnan/hexo-theme-next/issues/1844</span><br><span class="line"># To avoid space between header and sidebar in Pisces / Gemini themes recommended to use Web Safe fonts for `global` (and `logo`):</span><br><span class="line"># Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic Sans MS | Trebuchet MS</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line">font:</span><br><span class="line">  enable: false</span><br><span class="line"></span><br><span class="line">  # Uri of fonts host. E.g. //fonts.googleapis.com (Default).</span><br><span class="line">  host:</span><br><span class="line"></span><br><span class="line">  # Font options:</span><br><span class="line">  # `external: true` will load this font family from `host` above.</span><br><span class="line">  # `family: Times New Roman`. Without any quotes.</span><br><span class="line">  # `size: xx`. Use `px` as unit.</span><br><span class="line"></span><br><span class="line">  # Global font settings used on body element.</span><br><span class="line">  global:</span><br><span class="line">    external: true</span><br><span class="line">    family: Lato</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for Headlines (h1, h2, h3, h4, h5, h6).</span><br><span class="line">  # Fallback to global font settings.</span><br><span class="line">  headings:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for posts.</span><br><span class="line">  # Fallback to global font settings.</span><br><span class="line">  posts:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line"></span><br><span class="line">  # Font settings for Logo.</span><br><span class="line">  # Fallback to global font settings.</span><br><span class="line">  logo:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for  and code blocks.</span><br><span class="line">  codes:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Third Party Services Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># MathJax Support</span><br><span class="line">mathjax:</span><br><span class="line">  enable: false</span><br><span class="line">  per_page: false</span><br><span class="line">  cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML</span><br><span class="line"></span><br><span class="line"># Han Support docs: https://hanzi.pro/</span><br><span class="line">han: false</span><br><span class="line"></span><br><span class="line"># Swiftype Search API Key</span><br><span class="line">#swiftype_key:</span><br><span class="line"></span><br><span class="line"># Baidu Analytics ID</span><br><span class="line">baidu_analytics: a452b4c4a1cd7c9a9f62d952a88dc832</span><br><span class="line"></span><br><span class="line"># Duoshuo ShortName</span><br><span class="line">#duoshuo_shortname:</span><br><span class="line"></span><br><span class="line"># Disqus</span><br><span class="line">disqus:</span><br><span class="line">  enable: false</span><br><span class="line">  shortname:</span><br><span class="line">  count: true</span><br><span class="line"></span><br><span class="line"># Hypercomments</span><br><span class="line">#hypercomments_id:</span><br><span class="line"></span><br><span class="line"># changyan</span><br><span class="line">changyan:</span><br><span class="line">  enable: false</span><br><span class="line">  appid:</span><br><span class="line">  appkey:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Valine.评论系统</span><br><span class="line"># You can get your appid and appkey from https://leancloud.cn</span><br><span class="line"># more info please open https://valine.js.org</span><br><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appid:  # your leancloud application appid</span><br><span class="line">  appkey:  # your leancloud application appkey</span><br><span class="line">  notify: false # mail notifier , https://github.com/xCss/Valine/wiki</span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  placeholder: Just go go # comment box placeholder</span><br><span class="line">  avatar: mm # gravatar style</span><br><span class="line">  guest_info: nick,mail,link # custom comment header</span><br><span class="line">  pageSize: 10 # pagination size</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Support for youyan comments system.</span><br><span class="line"># You can get your uid from http://www.uyan.cc</span><br><span class="line">#youyan_uid: your uid</span><br><span class="line"></span><br><span class="line"># Support for LiveRe comments system.</span><br><span class="line"># You can get your uid from https://livere.com/insight/myCode (General web site)</span><br><span class="line">#livere_uid: your uid</span><br><span class="line"></span><br><span class="line"># Gitment</span><br><span class="line"># Introduction: https://imsun.net/posts/gitment-introduction/</span><br><span class="line"># You can get your Github ID from https://api.github.com/users/&lt;Github username&gt;</span><br><span class="line">gitment:</span><br><span class="line">  enable: false</span><br><span class="line">  mint: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span><br><span class="line">  count: true # Show comments count in post meta area</span><br><span class="line">  lazy: false # Comments lazy loading with a button</span><br><span class="line">  cleanly: false # Hide &apos;Powered by ...&apos; on footer, and more</span><br><span class="line">  language: # Force language, or auto switch by theme</span><br><span class="line">  github_user: # MUST HAVE, Your Github ID</span><br><span class="line">  github_repo: # MUST HAVE, The repo you use to store Gitment comments</span><br><span class="line">  client_id: # MUST HAVE, Github client id for the Gitment</span><br><span class="line">  client_secret: # EITHER this or proxy_gateway, Github access secret token for the Gitment</span><br><span class="line">  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect</span><br><span class="line">  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled</span><br><span class="line"></span><br><span class="line"># Baidu Share</span><br><span class="line"># Available value:</span><br><span class="line">#    button | slide</span><br><span class="line"># Warning: Baidu Share does not support https.</span><br><span class="line">#baidushare:</span><br><span class="line">##  type: button</span><br><span class="line"></span><br><span class="line"># Share</span><br><span class="line"># This plugin is more useful in China, make sure you known how to use it.</span><br><span class="line"># And you can find the use guide at official webiste: http://www.jiathis.com/.</span><br><span class="line"># Warning: JiaThis does not support https.</span><br><span class="line">#jiathis:</span><br><span class="line">  ##uid: Get this uid from http://www.jiathis.com/</span><br><span class="line">#add_this_id:</span><br><span class="line"></span><br><span class="line"># Share</span><br><span class="line">#duoshuo_share: true</span><br><span class="line"></span><br><span class="line"># NeedMoreShare2</span><br><span class="line"># This plugin is a pure javascript sharing lib which is useful in China.</span><br><span class="line"># See: https://github.com/revir/need-more-share2</span><br><span class="line"># Also see: https://github.com/DzmVasileusky/needShareButton</span><br><span class="line"># iconStyle: default | box</span><br><span class="line"># boxForm: horizontal | vertical</span><br><span class="line"># position: top / middle / bottom + Left / Center / Right</span><br><span class="line"># networks: Weibo,Wechat,Douban,QQZone,Twitter,Linkedin,Mailto,Reddit,</span><br><span class="line">#           Delicious,StumbleUpon,Pinterest,Facebook,GooglePlus,Slashdot,</span><br><span class="line">#           Technorati,Posterous,Tumblr,GoogleBookmarks,Newsvine,</span><br><span class="line">#           Evernote,Friendfeed,Vkontakte,Odnoklassniki,Mailru</span><br><span class="line">needmoreshare2:</span><br><span class="line">  enable: false</span><br><span class="line">  postbottom:</span><br><span class="line">    enable: true</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: default</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: bottomCenter</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br><span class="line">  float:</span><br><span class="line">    enable: true</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: default</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: middleRight</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br><span class="line"></span><br><span class="line"># Google Webmaster tools verification setting</span><br><span class="line"># See: https://www.google.com/webmasters/</span><br><span class="line">#google_site_verification:</span><br><span class="line"></span><br><span class="line"># Google Analytics</span><br><span class="line">#google_analytics:</span><br><span class="line"></span><br><span class="line"># Bing Webmaster tools verification setting</span><br><span class="line"># See: https://www.bing.com/webmaster/</span><br><span class="line">#bing_site_verification:</span><br><span class="line"></span><br><span class="line"># Yandex Webmaster tools verification setting</span><br><span class="line"># See: https://webmaster.yandex.ru/</span><br><span class="line">#yandex_site_verification:</span><br><span class="line"></span><br><span class="line"># CNZZ count</span><br><span class="line">#cnzz_siteid:</span><br><span class="line"></span><br><span class="line"># Application Insights</span><br><span class="line"># See https://azure.microsoft.com/en-us/services/application-insights/</span><br><span class="line"># application_insights:</span><br><span class="line"></span><br><span class="line"># Make duoshuo show UA</span><br><span class="line"># user_id must NOT be null when admin_enable is true!</span><br><span class="line"># you can visit http://dev.duoshuo.com get duoshuo user id.</span><br><span class="line">duoshuo_info:</span><br><span class="line">  ua_enable: true</span><br><span class="line">  admin_enable: false</span><br><span class="line">  user_id: 0</span><br><span class="line">  #admin_nickname: Author</span><br><span class="line"></span><br><span class="line"># Post widgets &amp; FB/VK comments settings.</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Facebook SDK Support.</span><br><span class="line"># https://github.com/iissnan/hexo-theme-next/pull/410</span><br><span class="line">facebook_sdk:</span><br><span class="line">  enable:       false</span><br><span class="line">  app_id:       #&lt;app_id&gt;</span><br><span class="line">  fb_admin:     #&lt;user_id&gt;</span><br><span class="line">  like_button:  #true</span><br><span class="line">  webmaster:    #true</span><br><span class="line"></span><br><span class="line"># Facebook comments plugin</span><br><span class="line"># This plugin depends on Facebook SDK.</span><br><span class="line"># If facebook_sdk.enable is false, Facebook comments plugin is unavailable.</span><br><span class="line">facebook_comments_plugin:</span><br><span class="line">  enable:       false</span><br><span class="line">  num_of_posts: 10    # min posts num is 1</span><br><span class="line">  width:        100%  # default width is 550px</span><br><span class="line">  scheme:       light # default scheme is light (light or dark)</span><br><span class="line"></span><br><span class="line"># VKontakte API Support.</span><br><span class="line"># To get your AppID visit https://vk.com/editapp?act=create</span><br><span class="line">vkontakte_api:</span><br><span class="line">  enable:       false</span><br><span class="line">  app_id:       #&lt;app_id&gt;</span><br><span class="line">  like:         true</span><br><span class="line">  comments:     true</span><br><span class="line">  num_of_posts: 10</span><br><span class="line"></span><br><span class="line"># Star rating support to each article.</span><br><span class="line"># To get your ID visit https://widgetpack.com</span><br><span class="line">rating:</span><br><span class="line">  enable: false</span><br><span class="line">  id:     #&lt;app_id&gt;</span><br><span class="line">  color:  fc6423</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Show number of visitors to each article.显示每篇文章的阅读量</span><br><span class="line"># You can visit https://leancloud.cn get AppID and AppKey.</span><br><span class="line">leancloud_visitors:</span><br><span class="line">  enable: false</span><br><span class="line">  app_id: #&lt;app_id&gt;</span><br><span class="line">  app_key: #&lt;app_key&gt;</span><br><span class="line"></span><br><span class="line"># Another tool to show number of visitors to each article.</span><br><span class="line"># visit https://console.firebase.google.com/u/0/ to get apiKey and projectId</span><br><span class="line"># visit https://firebase.google.com/docs/firestore/ to get more information about firestore</span><br><span class="line">firestore:</span><br><span class="line">  enable: false</span><br><span class="line">  collection: articles #required, a string collection name to access firestore database</span><br><span class="line">  apiKey: #required</span><br><span class="line">  projectId: #required</span><br><span class="line">  bluebird: false #enable this if you want to include bluebird 3.5.1(core version) Promise polyfill</span><br><span class="line"></span><br><span class="line"># Show PV/UV of the website/page with busuanzi.</span><br><span class="line"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span><br><span class="line">#不算子统计，用于在页脚显示总访客数和总浏览量，将false改为true</span><br><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: true</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt;</span><br><span class="line">  site_uv_footer:</span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: true</span><br><span class="line">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</span><br><span class="line">  site_pv_footer:</span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  page_pv: false</span><br><span class="line">  page_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</span><br><span class="line">  page_pv_footer:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Tencent analytics ID</span><br><span class="line"># tencent_analytics:</span><br><span class="line"></span><br><span class="line"># Tencent MTA ID</span><br><span class="line"># tencent_mta:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span><br><span class="line">baidu_push: false</span><br><span class="line"></span><br><span class="line"># Google Calendar</span><br><span class="line"># Share your recent schedule to others via calendar page</span><br><span class="line">#</span><br><span class="line"># API Documentation:</span><br><span class="line"># https://developers.google.com/google-apps/calendar/v3/reference/events/list</span><br><span class="line">calendar:</span><br><span class="line">  enable: false</span><br><span class="line">  calendar_id: &lt;required&gt;</span><br><span class="line">  api_key: &lt;required&gt;</span><br><span class="line">  orderBy: startTime</span><br><span class="line">  offsetMax: 24</span><br><span class="line">  offsetMin: 4</span><br><span class="line">  timeZone:</span><br><span class="line">  showDeleted: false</span><br><span class="line">  singleEvents: true</span><br><span class="line">  maxResults: 250</span><br><span class="line"></span><br><span class="line"># Algolia Search</span><br><span class="line">algolia_search:</span><br><span class="line">  enable: false</span><br><span class="line">  hits:</span><br><span class="line">    per_page: 10</span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: Search for Posts</span><br><span class="line">    hits_empty: &quot;We didn&apos;t find any results for the search: $&#123;query&#125;&quot;</span><br><span class="line">    hits_stats: &quot;$&#123;hits&#125; results found in $&#123;time&#125; ms&quot;</span><br><span class="line"></span><br><span class="line"># Local search</span><br><span class="line"># Dependencies: https://github.com/flashlab/hexo-generator-search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Tags Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># External URL with BASE64 encrypt &amp; decrypt.</span><br><span class="line"># Usage: &#123;% exturl text url &quot;title&quot; %&#125;</span><br><span class="line"># Alias: &#123;% extlink text url &quot;title&quot; %&#125;</span><br><span class="line">exturl: false</span><br><span class="line"></span><br><span class="line"># Note tag (bs-callout).主题的标签样式有note、label、tabs三种</span><br><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  #风格</span><br><span class="line">  style: simple</span><br><span class="line">  #要不要图标</span><br><span class="line">  icons: false</span><br><span class="line">  #圆角矩形</span><br><span class="line">  border_radius: 3</span><br><span class="line">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span><br><span class="line">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span><br><span class="line">  light_bg_offset: 0</span><br><span class="line"></span><br><span class="line"># Label tag.</span><br><span class="line">label: true</span><br><span class="line"></span><br><span class="line"># Tabs tag.</span><br><span class="line">tabs:</span><br><span class="line">  enable: true</span><br><span class="line">  transition:</span><br><span class="line">    tabs: false</span><br><span class="line">    labels: true</span><br><span class="line">  border_radius: 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#! ---------------------------------------------------------------</span><br><span class="line">#! DO NOT EDIT THE FOLLOWING SETTINGS</span><br><span class="line">#! UNLESS YOU KNOW WHAT YOU ARE DOING</span><br><span class="line">#! ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Use velocity to animate everything.</span><br><span class="line">motion:</span><br><span class="line">  enable: true</span><br><span class="line">  async: false</span><br><span class="line">  transition:</span><br><span class="line">    # Transition variants:</span><br><span class="line">    # fadeIn | fadeOut | flipXIn | flipXOut | flipYIn | flipYOut | flipBounceXIn | flipBounceXOut | flipBounceYIn | flipBounceYOut</span><br><span class="line">    # swoopIn | swoopOut | whirlIn | whirlOut | shrinkIn | shrinkOut | expandIn | expandOut</span><br><span class="line">    # bounceIn | bounceOut | bounceUpIn | bounceUpOut | bounceDownIn | bounceDownOut | bounceLeftIn | bounceLeftOut | bounceRightIn | bounceRightOut</span><br><span class="line">    # slideUpIn | slideUpOut | slideDownIn | slideDownOut | slideLeftIn | slideLeftOut | slideRightIn | slideRightOut</span><br><span class="line">    # slideUpBigIn | slideUpBigOut | slideDownBigIn | slideDownBigOut | slideLeftBigIn | slideLeftBigOut | slideRightBigIn | slideRightBigOut</span><br><span class="line">    # perspectiveUpIn | perspectiveUpOut | perspectiveDownIn | perspectiveDownOut | perspectiveLeftIn | perspectiveLeftOut | perspectiveRightIn | perspectiveRightOut</span><br><span class="line">    post_block: fadeIn</span><br><span class="line">    post_header: slideDownIn</span><br><span class="line">    post_body: slideDownIn</span><br><span class="line">    coll_header: slideLeftIn</span><br><span class="line">    # Only for Pisces | Gemini.</span><br><span class="line">    sidebar: slideUpIn</span><br><span class="line"></span><br><span class="line"># Fancybox</span><br><span class="line">fancybox: true</span><br><span class="line"></span><br><span class="line"># Progress bar in the top during page loading.</span><br><span class="line">pace: false</span><br><span class="line"># Themes list:</span><br><span class="line">#pace-theme-big-counter</span><br><span class="line">#pace-theme-bounce</span><br><span class="line">#pace-theme-barber-shop</span><br><span class="line">#pace-theme-center-atom</span><br><span class="line">#pace-theme-center-circle</span><br><span class="line">#pace-theme-center-radar</span><br><span class="line">#pace-theme-center-simple</span><br><span class="line">#pace-theme-corner-indicator</span><br><span class="line">#pace-theme-fill-left</span><br><span class="line">#pace-theme-flash</span><br><span class="line">#pace-theme-loading-bar</span><br><span class="line">#pace-theme-mac-osx</span><br><span class="line">#pace-theme-minimal</span><br><span class="line"># For example</span><br><span class="line"># pace_theme: pace-theme-center-simple</span><br><span class="line">pace_theme: pace-theme-minimal</span><br><span class="line"></span><br><span class="line"># Canvas-nest</span><br><span class="line">canvas_nest: false</span><br><span class="line"></span><br><span class="line"># three_waves</span><br><span class="line">three_waves: false</span><br><span class="line"></span><br><span class="line"># canvas_lines</span><br><span class="line">canvas_lines: false</span><br><span class="line"></span><br><span class="line"># canvas_sphere</span><br><span class="line">canvas_sphere: false</span><br><span class="line"></span><br><span class="line"># Only fit scheme Pisces</span><br><span class="line"># Canvas-ribbon</span><br><span class="line"># size: The width of the ribbon.</span><br><span class="line"># alpha: The transparency of the ribbon.</span><br><span class="line"># zIndex: The display level of the ribbon.</span><br><span class="line">canvas_ribbon:</span><br><span class="line">  enable: false</span><br><span class="line">  size: 300</span><br><span class="line">  alpha: 0.6</span><br><span class="line">  zIndex: -1</span><br><span class="line"></span><br><span class="line">rencent_posts_title: rencent</span><br><span class="line">recent_posts_layout: block</span><br><span class="line">recent_posts: true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Script Vendors.</span><br><span class="line"># Set a CDN address for the vendor you want to customize.</span><br><span class="line"># For example</span><br><span class="line">#    jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js</span><br><span class="line"># Be aware that you should use the same version as internal ones to avoid potential problems.</span><br><span class="line"># Please use the https protocol of CDN files when you enable https on your site.</span><br><span class="line">vendors:</span><br><span class="line">  # Internal path prefix. Please do not edit it.</span><br><span class="line">  _internal: lib</span><br><span class="line"></span><br><span class="line">  # Internal version: 2.1.3</span><br><span class="line">  jquery:</span><br><span class="line"></span><br><span class="line">  # Internal version: 2.1.5</span><br><span class="line">  # See: http://fancyapps.com/fancybox/</span><br><span class="line">  fancybox:</span><br><span class="line">  fancybox_css:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.6</span><br><span class="line">  # See: https://github.com/ftlabs/fastclick</span><br><span class="line">  fastclick:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.9.7</span><br><span class="line">  # See: https://github.com/tuupola/jquery_lazyload</span><br><span class="line">  lazyload:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.2.1</span><br><span class="line">  # See: http://VelocityJS.org</span><br><span class="line">  velocity:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.2.1</span><br><span class="line">  # See: http://VelocityJS.org</span><br><span class="line">  velocity_ui:</span><br><span class="line"></span><br><span class="line">  # Internal version: 0.7.9</span><br><span class="line">  # See: https://faisalman.github.io/ua-parser-js/</span><br><span class="line">  ua_parser:</span><br><span class="line"></span><br><span class="line">  # Internal version: 4.6.2</span><br><span class="line">  # See: http://fontawesome.io/</span><br><span class="line">  fontawesome:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1</span><br><span class="line">  # https://www.algolia.com</span><br><span class="line">  algolia_instant_js:</span><br><span class="line">  algolia_instant_css:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.2</span><br><span class="line">  # See: https://github.com/HubSpot/pace</span><br><span class="line">  # Or use direct links below:</span><br><span class="line">  # pace: //cdn.bootcss.com/pace/1.0.2/pace.min.js</span><br><span class="line">  # pace_css: //cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.css</span><br><span class="line">  pace:</span><br><span class="line">  pace_css:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # https://github.com/hustcc/canvas-nest.js</span><br><span class="line">  canvas_nest:</span><br><span class="line"></span><br><span class="line">  # three</span><br><span class="line">  three:</span><br><span class="line"></span><br><span class="line">  # three_waves</span><br><span class="line">  # https://github.com/jjandxa/three_waves</span><br><span class="line">  three_waves:</span><br><span class="line"></span><br><span class="line">  # three_waves</span><br><span class="line">  # https://github.com/jjandxa/canvas_lines</span><br><span class="line">  canvas_lines:</span><br><span class="line"></span><br><span class="line">  # three_waves</span><br><span class="line">  # https://github.com/jjandxa/canvas_sphere</span><br><span class="line">  canvas_sphere:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # https://github.com/zproo/canvas-ribbon</span><br><span class="line">  canvas_ribbon:</span><br><span class="line"></span><br><span class="line">  # Internal version: 3.3.0</span><br><span class="line">  # https://github.com/ethantw/Han</span><br><span class="line">  han:</span><br><span class="line"></span><br><span class="line">  # needMoreShare2</span><br><span class="line">  # https://github.com/revir/need-more-share2</span><br><span class="line">  needMoreShare2:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Assets</span><br><span class="line">css: css</span><br><span class="line">js: js</span><br><span class="line">images: images</span><br><span class="line"></span><br><span class="line"># Theme version</span><br><span class="line">version: 5.1.4</span><br></pre></td></tr></table></figure><h2 id="基础调试"><a href="#基础调试" class="headerlink" title="基础调试"></a>基础调试</h2><p>浏览器按 F12 即可，建议用Google Chrome 浏览器调试。</p><p>自定义样式文件 : <code>themes\next\source\css_custom\custom.styl</code></p><p>修改文件后直接保存，刷新页面即可查看效果</p><h2 id="修改文章页宽"><a href="#修改文章页宽" class="headerlink" title="修改文章页宽"></a>修改文章页宽</h2><p>打开<code>themes/next/source/css/_variables/custom.styl</code>，找到以下字段并修改为合适的宽度：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$content-desktop = 900px</span><br></pre></td></tr></table></figure><h2 id="修改小型代码块颜色"><a href="#修改小型代码块颜色" class="headerlink" title="修改小型代码块颜色"></a>修改小型代码块颜色</h2><p>修改<code>\themes\next\source\css\ _variables\base.styl</code>文件，加入自定义颜色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$red          = #ff2a2a</span><br><span class="line">$blue-bright  = #87daff</span><br><span class="line">$blue         = #0684bd</span><br><span class="line">$blue-deep    = #262a30</span><br><span class="line">$orange       = #fc6423</span><br><span class="line">// 自定义的颜色</span><br><span class="line">+ $my-code-foreground = #dd0055  // 用``围出的代码块字体颜色</span><br><span class="line">+ $my-code-background = #eee  // 用``围出的代码块背景颜色</span><br></pre></td></tr></table></figure><p>修改$code-background和$code-foreground的值：</p><figure class="highlight plain"><figcaption><span>Code & Code Blocks</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$code-font-family               = $font-family-monospace</span><br><span class="line">$code-font-size                 = 13px</span><br><span class="line">$code-font-size                 = unit(hexo-config(&apos;font.codes.size&apos;), px) if hexo-config(&apos;font.codes.size&apos;) is a &apos;unit&apos;</span><br><span class="line">$code-border-radius             = 4px</span><br><span class="line">- $code-foreground                = $black-light</span><br><span class="line">- $code-background                = $gainsboro</span><br><span class="line">+ $code-background                = $my-code-background </span><br><span class="line">+ $code-foreground                = $my-code-foreground</span><br></pre></td></tr></table></figure><p>修改<code>themes\next\source\css_custom\custom.styl</code>文件，加入自定义样式</p><figure class="highlight plain"><figcaption><span>文章``代码块的自定义样式</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">code &#123;</span><br><span class="line">    margin: 0px 3px;</span><br><span class="line">    border: 1px solid #999;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改链接文字样式"><a href="#修改链接文字样式" class="headerlink" title="修改链接文字样式"></a>修改链接文字样式</h2><p>修改<code>themes\next\source\css_custom\custom.styl</code>文件，加入自定义样式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="头像设置圆形-停留旋转效果"><a href="#头像设置圆形-停留旋转效果" class="headerlink" title="头像设置圆形,停留旋转效果"></a>头像设置圆形,停留旋转效果</h2><p>修改<code>themes\next\source\css_common\components\sidebar\sidebar-author.styl</code>,新增以下代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.site-author-image &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  padding: $site-author-image-padding;</span><br><span class="line">  max-width: $site-author-image-width;</span><br><span class="line">  height: $site-author-image-height;</span><br><span class="line">  border: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line">  //设置圆形</span><br><span class="line">+  border-radius: 50%;</span><br><span class="line">+  transition: 2s all;</span><br><span class="line">&#125;</span><br><span class="line">   //旋转</span><br><span class="line">+ .site-author-image:hover&#123;</span><br><span class="line">+   transform: rotate(360deg);</span><br><span class="line">+ &#125;</span><br></pre></td></tr></table></figure><h2 id="文章末尾添加”本文结束”标记"><a href="#文章末尾添加”本文结束”标记" class="headerlink" title="文章末尾添加”本文结束”标记"></a>文章末尾添加”本文结束”标记</h2><p>修改在<code>themes/next/layout/_macro/post.swig</code>中，在<code>wechat-subscriber.swig</code>之前添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;---------------- The End ----------------&lt;/div&gt;</span><br><span class="line">    &#123;% if theme.wechat_subscriber.enabled and not is_index %&#125;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &#123;% include &apos;wechat-subscriber.swig&apos; %&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="文章末尾追加版权信息"><a href="#文章末尾追加版权信息" class="headerlink" title="文章末尾追加版权信息"></a>文章末尾追加版权信息</h2><p>增加版权有两种方式</p><p>修改主题配置文件,搜索post_copyright</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- enable: false</span><br><span class="line">+ enable: true</span><br><span class="line">  license: CC BY-NC-SA 3.0</span><br><span class="line">  license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/</span><br></pre></td></tr></table></figure><p>如果觉得默认不好看,则可以自定义样式,找到<code>themes/next/layout/_macro/post.swig</code>，在footer之前添加如下代码(添加之前确保已添加样式)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;p id=&quot;div-border-left-red&quot;&gt;</span><br><span class="line">   &lt;b&gt;本文基于&lt;a target=&quot;_blank&quot; title=&quot;Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)&quot; href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot;&gt; 知识共享署名-相同方式共享 4.0 &lt;/a&gt;国际许可协议发布&lt;/b&gt;&lt;br/&gt;</span><br><span class="line">    &lt;span&gt;</span><br><span class="line">    &lt;b&gt;本文地址：&lt;/b&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;&lt;br/&gt;&lt;b&gt;转载请注明出处，谢谢！&lt;/b&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="侧栏加入已运行的时间"><a href="#侧栏加入已运行的时间" class="headerlink" title="侧栏加入已运行的时间"></a>侧栏加入已运行的时间</h2><p>修改文件:<code>themes/next/layout/_custom/sidebar.swig</code>，加入一下代码：</p><p><code>BirthDay = new Date("07/15/2019 00:00:00");</code> 日期修改为自己的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div id=&quot;days&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">function share_data_time() &#123;</span><br><span class="line">window.setTimeout(&quot;share_data_time()&quot;, 1000);</span><br><span class="line">    //毕业时间</span><br><span class="line">    BirthDay = new Date(&quot;07/15/2019 00:00:00&quot;);</span><br><span class="line">    //获取当前时间</span><br><span class="line">    today = new Date();</span><br><span class="line">    timeold = (today.getTime() - BirthDay.getTime()); //总豪秒数</span><br><span class="line">    secondsold = Math.floor(timeold / 1000);          //总秒数</span><br><span class="line">    e_daysold = timeold / (24 * 60 * 60 * 1000);</span><br><span class="line">    daysold = Math.floor(e_daysold);                 //相差天数</span><br><span class="line">    e_hrsold = (e_daysold - daysold) * 24;</span><br><span class="line">    hrsold = Math.floor(e_hrsold);                   //相差小时数</span><br><span class="line">    e_minsold = (e_hrsold - hrsold) * 60;</span><br><span class="line">    minsold= Math.floor(e_minsold)                   //相差分钟数</span><br><span class="line">    seconds = Math.floor((e_minsold - minsold) * 60);  //相差秒数</span><br><span class="line">    //将所获取的时间拼接到一起，再把值显示到页面</span><br><span class="line">    days.innerHTML = &quot;已运行:&quot; + daysold + &quot;天&quot; + hrsold + &quot;小时&quot; + minsold + &quot;分&quot; + seconds + &quot;秒&quot;;</span><br><span class="line">&#125;</span><br><span class="line">share_data_time();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>修改文件<code>themes/next/layout/_macro/sidebar.swig</code>中的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.links %&#125;</span><br><span class="line">   &lt;div class=&quot;links-of-blogroll motion-element &#123;&#123; &quot;links-of-blogroll-&quot; + theme.links_layout | default(&apos;inline&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">       &lt;div class=&quot;links-of-blogroll-title&quot;&gt;</span><br><span class="line">             &lt;i class=&quot;fa  fa-fw fa-&#123;&#123; theme.links_icon | default(&apos;globe&apos;) | lower &#125;&#125;&quot;&gt;&lt;/i&gt;</span><br><span class="line">             &#123;&#123; theme.links_title &#125;&#125;&amp;nbsp;</span><br><span class="line">             &lt;i class=&quot;fa  fa-fw fa-&#123;&#123; theme.links_icon | default(&apos;globe&apos;) | lower &#125;&#125;&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;ul class=&quot;links-of-blogroll-list&quot;&gt;</span><br><span class="line">            &#123;% for name, link in theme.links %&#125;</span><br><span class="line">            &lt;li class=&quot;links-of-blogroll-item&quot;&gt;</span><br><span class="line">            &lt;a href=&quot;&#123;&#123; link &#125;&#125;&quot; title=&quot;&#123;&#123; name &#125;&#125;&quot; target=&quot;_blank&quot;&gt;&#123;&#123; name &#125;&#125;&lt;/a&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">##加上      &#123;% include &apos;../_custom/sidebar.swig&apos; %&#125;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">##去掉     &#123;% include &apos;../_custom/sidebar.swig&apos; %&#125;</span><br></pre></td></tr></table></figure><p>在<code>themes\next\source\css_custom\custom.styl</code>添加样式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#days&#123;</span><br><span class="line">  display:block;</span><br><span class="line">  color:#07b38b;</span><br><span class="line">  font-size:13px;</span><br><span class="line">  margin-top:15px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="侧栏增加歌曲"><a href="#侧栏增加歌曲" class="headerlink" title="侧栏增加歌曲"></a>侧栏增加歌曲</h2><p>在网易云音乐中搜索我们想要插入的音乐，然后点击生成外链播放器</p><p>复制外链iframe代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=22742146&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>修改文件<code>layout/_macro/sidebar.swig</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;# Blogroll #&#125;</span><br><span class="line">&#123;% if theme.links %&#125;</span><br><span class="line">        &lt;div class=&quot;links-of-blogroll motion-element &#123;&#123; &quot;links-of-blogroll-&quot; + theme.links_layout | default(&apos;inline&apos;) &#125;&#125;&quot;&gt;</span><br><span class="line">           &lt;div class=&quot;links-of-blogroll-title&quot;&gt;</span><br><span class="line">            &lt;i class=&quot;fa  fa-fw fa-&#123;&#123; theme.links_icon | default(&apos;globe&apos;) | lower &#125;&#125;&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &#123;&#123; theme.links_title &#125;&#125;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;ul class=&quot;links-of-blogroll-list&quot;&gt;</span><br><span class="line">             &#123;% for name, link in theme.links %&#125;</span><br><span class="line">               &lt;li class=&quot;links-of-blogroll-item&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;&#123;&#123; link &#125;&#125;&quot; title=&quot;&#123;&#123; name &#125;&#125;&quot; target=&quot;_blank&quot;  rel=&quot;external nofollow&quot;&gt;&#123;&#123; name &#125;&#125;&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">              &#123;% endfor %&#125;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">##            &#123;% include &apos;../_custom/sidebar.swig&apos; %&#125;</span><br><span class="line">加上          &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=22742146&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="添加最近文章栏目"><a href="#添加最近文章栏目" class="headerlink" title="添加最近文章栏目"></a>添加最近文章栏目</h2><p>修改<code>themes/next/layout/_macro/sidebar.swig</code>找到<code>theme.social</code>板块代码，在该板块最后的endif后隔一行添加如下代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;# recent posts #&#125;</span><br><span class="line">&#123;% if theme.recent_posts %&#125;</span><br><span class="line">  &lt;div class=&quot;links-of-blogroll motion-element &#123;&#123; &quot;links-of-blogroll-&quot; + theme.recent_posts_layout  &#125;&#125;&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;links-of-blogroll-title&quot;&gt;</span><br><span class="line">      &lt;!-- modify icon to fire by szw --&gt;</span><br><span class="line">      &lt;i class=&quot;fa fa-history fa-&#123;&#123; theme.recent_posts_icon | lower &#125;&#125;&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;</span><br><span class="line">      &#123;&#123; theme.recent_posts_title &#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;ul class=&quot;links-of-blogroll-list&quot;&gt;</span><br><span class="line">      &#123;% set posts = site.posts.sort(&apos;-date&apos;) %&#125;</span><br><span class="line">      &#123;% for post in posts.slice(&apos;0&apos;, &apos;5&apos;) %&#125;</span><br><span class="line">        &lt;li class=&quot;recent_posts_li&quot;&gt;</span><br><span class="line">          &lt;a href=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot; title=&quot;&#123;&#123; post.title &#125;&#125;&quot; target=&quot;_blank&quot;&gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &#123;% endfor %&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>编辑<code>themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">li.recent_posts_li &#123;</span><br><span class="line">    text-align: cengter;</span><br><span class="line">    display: block;</span><br><span class="line">    word-break: keep-all;</span><br><span class="line">    white-space: nowrap;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    text-overflow: ellipsis;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主题配置文件<code>themes/next/_config.yml</code>,添加如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">recent_posts_title: 近期文章</span><br><span class="line">recent_posts_layout: block</span><br><span class="line">recent_posts: true</span><br></pre></td></tr></table></figure><h2 id="增加文章字数统计及阅读时常功能"><a href="#增加文章字数统计及阅读时常功能" class="headerlink" title="增加文章字数统计及阅读时常功能"></a>增加文章字数统计及阅读时常功能</h2><p>安装插件hexo-wordcount,执行以下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>修改<code>themes/next/_config.yml</code>主题配置文件，搜索关键字<code>post_wordcount</code>,修改如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true #单篇文章字数</span><br><span class="line">  min2read: true #单篇阅读时长</span><br><span class="line">  totalcount: true #站点总字数</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure><h2 id="增加站点访问统计功能"><a href="#增加站点访问统计功能" class="headerlink" title="增加站点访问统计功能"></a>增加站点访问统计功能</h2><p>next主题默认集成了第三方访问统计插件。</p><p>修改<code>themes/next/_config.yml</code>主题配置文件，搜索关键字<code>busuanzi_count</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 不蒜子统计，用于在页脚显示总访客数和总浏览量，将 false 改为 true 就能直接使用</span><br><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: true</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; </span><br><span class="line">  site_uv_footer: </span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: true</span><br><span class="line">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; </span><br><span class="line">  site_pv_footer: </span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  # 页面浏览量，不建议开启，建议用上面的 leancloud_visitors</span><br><span class="line">  # 首先 leancloud 更稳定，其次 leancloud 便于管理</span><br><span class="line">  # 最后，可以利用 leancloud 的 api 建立 TopX 页面</span><br><span class="line">  page_pv: false</span><br><span class="line">  page_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure><p>修改<code>themes/next/layout/_third-party/analytics/busuanzi-counter.swig</code>文件，找到<code>dn-lbstatics.qbox.me</code>,修改代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; &lt;script async src=&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h2 id="博客静态资源压缩优化"><a href="#博客静态资源压缩优化" class="headerlink" title="博客静态资源压缩优化"></a>博客静态资源压缩优化</h2><p>用hexo生成静态文件时，默认生成的静态文件存在大量空白，而且css、js都未经压缩，这在一定程度上会影响页面的加载，所以在网上所搜有没有办法来优化这些问题？</p><p>答案肯定是有，当然大部分博客都提到了使用gulp来精简代码，而我今天所要跟大家介绍的是hexo-neat插件 。我为啥不选择gulp而使用hexo-neat呢？因为用gulp需要在每次生成静态文件后，即hexo g后，都要另外执行gulp命令才能压缩静态文件；而使用hexo-neat则无须另外执行其他命令即可自动完成压缩功能，即方便了使用习惯。</p><p>在站点的根目录下执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure><p>打开<code>blog/_config.yml</code>全局配置文件添加如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#静态资源压缩优化</span><br><span class="line"># hexo-neat</span><br><span class="line">neat_enable: true # 启用neat</span><br><span class="line"></span><br><span class="line"># 对html优化</span><br><span class="line">neat_html:          </span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">  </span><br><span class="line"># 对css优化</span><br><span class="line">neat_css:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - &apos;*.min.css&apos;</span><br><span class="line"></span><br><span class="line"># 对js优化</span><br><span class="line">neat_js:</span><br><span class="line">  enable: true</span><br><span class="line">  mangle: true</span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - &apos;*.min.js&apos;</span><br></pre></td></tr></table></figure></image><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --&gt;&lt;center&gt;&lt;i&gt;Hexo+NexT&lt;/i&gt;&lt;/center&gt;&lt;image src=&quot;/2019/07/18/Hexo+NexT 打造自己的博客/hexo.jpg&quot; alt style=&quot;width:100%&quot;&gt;&lt;/image&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://github.com/wh724/categories/Hexo/"/>
    
    
      <category term="faster rcnn" scheme="https://github.com/wh724/tags/faster-rcnn/"/>
    
      <category term="深度学习" scheme="https://github.com/wh724/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>目标检测网络进阶</title>
    <link href="https://github.com/wh724/2019/07/15/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E7%BD%91%E7%BB%9C%E8%BF%9B%E9%98%B6/"/>
    <id>https://github.com/wh724/2019/07/15/目标检测网络进阶/</id>
    <published>2019-07-15T11:22:44.000Z</published>
    <updated>2019-07-18T08:41:38.802Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --><center><i>Fater RCNN改进之旅</i></center><image src="/2019/07/15/目标检测网络进阶/faster_rcnn.png" alt style="width:100%"><a id="more"></a><p><strong>使用教程：<a href="https://www.cnblogs.com/dudumiaomiao/p/6556111.html" target="_blank" rel="noopener">https://www.cnblogs.com/dudumiaomiao/p/6556111.html</a>*<strong></strong></strong></p><h2 id="解决问题-cannot-import-name-symbol-database"><a href="#解决问题-cannot-import-name-symbol-database" class="headerlink" title="解决问题 cannot import name symbol_database"></a>解决问题 cannot import name symbol_database</h2><pre>ImportError: cannot import name symbol_databasehttps://blog.csdn.net/aBlueMouse/article/details/77744023</pre><h2 id="运行项目报错no-model-name-caffe"><a href="#运行项目报错no-model-name-caffe" class="headerlink" title="运行项目报错no model name _caffe"></a>运行项目报错no model name _caffe</h2><p>每次执行前必执行在<code>py-faster-rcnn/caffe-faster-rcnn</code>目录下sudo make pycaffe</p><h2 id="字符编码不正确"><a href="#字符编码不正确" class="headerlink" title="字符编码不正确"></a>字符编码不正确</h2><p>-<em>- coding：utf-8 -</em>-</p><h2 id="训练stage1-rpn时，出现’numpy-float64’-object-cannot-be-interpreted-as-an-index-的提示错误"><a href="#训练stage1-rpn时，出现’numpy-float64’-object-cannot-be-interpreted-as-an-index-的提示错误" class="headerlink" title="训练stage1 rpn时，出现’numpy.float64’ object cannot be interpreted as an index 的提示错误"></a>训练stage1 rpn时，出现’numpy.float64’ object cannot be interpreted as an index 的提示错误</h2><p>几乎所有的博客中都指出，需要更换numpy 的版本，照做之后，出现ImportError: numpy.core.multiarray failed to import，这个问题又是numpy不匹配造成的，这样就形成了恶性循环，所以，可以考虑从根源上解决'numpy.float64' object cannot be interpreted as an index。</p><p>TypeError: 'numpy.float64' object cannot be interpreted as an index</p><pre>/home/xxx/py-faster-rcnn/lib/roi_data_layer/minibatch.py将第26行：fg_rois_per_image = np.round(cfg.TRAIN.FG_FRACTION * rois_per_image)改为：fg_rois_per_image = np.round(cfg.TRAIN.FG_FRACTION * rois_per_image).astype(np.int)</pre><pre>/home/xxx/py-faster-rcnn/lib/datasets/ds_utils.py将第12行：hashes = np.round(boxes * scale).dot(v)改为：hashes = np.round(boxes * scale).dot(v).astype(np.int)</pre><pre>/home/xxx/py-faster-rcnn/lib/fast_rcnn/test.py将第129行： hashes = np.round(blobs['rois'] * cfg.DEDUP_BOXES).dot(v)改为： hashes = np.round(blobs['rois'] * cfg.DEDUP_BOXES).dot(v).astype(np.int)</pre><pre>/home/xxx/py-faster-rcnn/lib/rpn/proposal_target_layer.py将第60行：fg_rois_per_image = np.round(cfg.TRAIN.FG_FRACTION * rois_per_image)改为：fg_rois_per_image = np.round(cfg.TRAIN.FG_FRACTION * rois_per_image).astype(np.int)</pre><h2 id="faster-rcnn报错TypeError-slice-indices-must-be-integers-or-None-or-have-an-index-method"><a href="#faster-rcnn报错TypeError-slice-indices-must-be-integers-or-None-or-have-an-index-method" class="headerlink" title="faster rcnn报错TypeError: slice indices must be integers or None or have an index method"></a>faster rcnn报错TypeError: slice indices must be integers or None or have an <strong>index</strong> method</h2><pre>改的是/home/xiaohua/py-faster-rcnn/lib/roi_data_layer下的minibatch.py文件转到172行，将for ind in inds:cls = clss[ind]start = 4 * clsend = start + 4bbox_targets[ind, start:end] = bbox_target_data[ind, 1:]bbox_inside_weights[ind, start:end] = cfg.TRAIN.BBOX_INSIDE_WEIGHTSreturn bbox_targets, bbox_inside_weights改为：for ind in inds:ind = int(ind)cls = clss[ind]start = int(4 * cos)end = int(start + 4)bbox_targets[ind, start:end] = bbox_target_data[ind, 1:]bbox_inside_weights[ind, start:end] = cfg.TRAIN.BBOX_INSIDE_WEIGHTSreturn bbox_targets, bbox_inside_weights即可，自己注意python语法格式原文：https://blog.csdn.net/qq_27637315/article/details/78849756</pre><h2 id="Check-failed-error-cudaSuccess-2-vs-0-out-of-memory6"><a href="#Check-failed-error-cudaSuccess-2-vs-0-out-of-memory6" class="headerlink" title="Check failed: error == cudaSuccess (2 vs. 0) out of memory6."></a>Check failed: error == cudaSuccess (2 vs. 0) out of memory6.</h2><p>显存不足...经过查阅资料:</p>终端输入 nvidia-smi；查看占用显存最大的ID号；kill -9 ID<h2 id="AttributeError-‘module’-object-has-no-attribute-‘text-format’"><a href="#AttributeError-‘module’-object-has-no-attribute-‘text-format’" class="headerlink" title="AttributeError: ‘module’ object has no attribute ‘text_format’"></a>AttributeError: ‘module’ object has no attribute ‘text_format’</h2><pre>在文件./lib/fast_rcnn/train.py增加一行import google.protobuf.text_format 即可解决问题原文：https://blog.csdn.net/qq_33202928/article/details/72526710</pre><h2 id="目标框在图像边缘"><a href="#目标框在图像边缘" class="headerlink" title="目标框在图像边缘"></a>目标框在图像边缘</h2><pre>preFile"/home/gxjun/Qunar/py-faster-rcnn/tools/train_faster_rcnn_alt_opt.py", line67,in get_roidb    roidb = get_training_roidb(imdb)File "/home/gxjun/Qunar/py-faster-rcnn/tools/../lib/fast_rcnn/train.py", line118,in get_training_roidb    imdb.append_flipped_images()File "/home/gxjun/Qunar/py-faster-rcnn/tools/../lib/datasets/imdb.py", line111,in append_flipped_images    assert (boxes[:, 2] >= boxes[:,0]).all()解决办法：将py-faster-rcnn/lib/datasets/imdb.py中的相应代码改成如下代码即可：def append_flipped_images(self):    num_images = self.num_images    widths = [PIL.Image.open(self.image_path_at(i)).size[0]    for i in xrange(num_images)]        for i in xrange(num_images):        boxes = self.roidb[i]['boxes'].copy()        oldx1 = boxes[:, 0].copy()        oldx2 = boxes[:, 2].copy()        boxes[:, 0] = widths[i] - oldx2 - 1        boxes[:, 2] = widths[i] - oldx1 - 1    for b in range(len(boxes)):        if (boxes[b][2]<boxes [b][0]): boxes[b][0]="0" assert (boxes[:, 2]>= boxes[:, 0]).all()原文：https://blog.csdn.net/u014696921/article/details/60333805</boxes></pre><h2 id="文件找不到"><a href="#文件找不到" class="headerlink" title="文件找不到"></a>文件找不到</h2><pre>Check failed: fd != -1 (-1 vs. -1) Filenotfound: models/pascal_voc/VGG16/faster_rcnn_alt_opt/stage1_rpn_train.pt*** Check failure stack trace: ***将sovler.txt中的路径设置成绝对路径</pre><h2 id="error-2：IndexError-list-index-out-of-range"><a href="#error-2：IndexError-list-index-out-of-range" class="headerlink" title="error 2：IndexError: list index out of range"></a>error 2：IndexError: list index out of range</h2><pre>IndexError: list index out of rangeerror2 解决办法：删除fast-rcnn-master/data/cache文件夹下的.pkl文件，或者改名备份，重新训练即原文：https://blog.csdn.net/u014696921/article/details/60333805</pre><h2 id="Cannot-copy-param-0-weights-from-layer-‘cls-score’-shape-mismatch"><a href="#Cannot-copy-param-0-weights-from-layer-‘cls-score’-shape-mismatch" class="headerlink" title="Cannot copy param 0 weights from layer ‘cls_score’; shape mismatch"></a>Cannot copy param 0 weights from layer ‘cls_score’; shape mismatch</h2><pre>Source param shape is 21 4096 (86016); target param shape is 3 4096(12288). To learn this layer's parameters from scratch rather thancopying from a saved net, rename the layer.这个错误要把对应的层rename。比如把cls_score改为cls_score1</pre></image><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Aug 23 2019 09:20:48 GMT+0800 (GMT+08:00) --&gt;&lt;center&gt;&lt;i&gt;Fater RCNN改进之旅&lt;/i&gt;&lt;/center&gt;&lt;image src=&quot;/2019/07/15/目标检测网络进阶/faster_rcnn.png&quot; alt style=&quot;width:100%&quot;&gt;&lt;/image&gt;
    
    </summary>
    
      <category term="目标检测" scheme="https://github.com/wh724/categories/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/"/>
    
    
      <category term="faster rcnn" scheme="https://github.com/wh724/tags/faster-rcnn/"/>
    
      <category term="深度学习" scheme="https://github.com/wh724/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
